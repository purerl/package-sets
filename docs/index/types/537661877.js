// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["537661877"] = [{"values":[{"sourceSpan":{"start":[389,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[392,52]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"routeHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["optional",{"tag":"ForAll","contents":["trash",{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"optional"},{"tag":"TypeVar","contents":"trash"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"OptionalConfig"]},{"tag":"TypeConstructor","contents":[["Stetson","Types"],"Unlift"]}]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"Config"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"optional"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[264,18]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"expand","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["mix",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"mix"},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Every `VariantF lt a` can be cast to some `VariantF gt a` as long as `lt` is a\nsubset of `gt`.\n"}],"tag":"SearchResult"}]
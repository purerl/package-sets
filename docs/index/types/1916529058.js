// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1916529058"] = [{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/uri/v8.0.1/src/URI/HostPortPair.purs","end":[18,54]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HostPortPair","moduleName":"URI.HostPortPair","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]},"arguments":[["host",null],["port",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A spec-conformant host/port pair (may also be empty).\nFor example: `purescript.org`, `localhost:3000`, `:9000`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/uri/v8.0.1/src/URI/Extra/MultiHostPortPair.purs","end":[37,59]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"MultiHostPortPair","moduleName":"URI.Extra.MultiHostPortPair","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]},"arguments":[["host",null],["port",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Multi-host/port pairs, where host & port combinations can be separated by\n`,`, as used by some connection URI schemes. This is not strictly\ncompatible with RFC 3986, as in that spec `RegName`s can contain `,`, and\nonly one port can be specified in the authority.\n\nA motivating example for where this may be useful: dealing with mongodb\nconnection strings.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Types.purs","end":[5,47]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteParams","moduleName":"Routing.Duplex.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]
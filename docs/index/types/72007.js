// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["72007"] = [{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[81,26]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for the user-info component of a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[70,43]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeToString","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for user-info without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[63,45]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromString","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a user-info value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe query, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[57,37]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"toString","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for user-info, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo\") = \"foo\"\ntoString (unsafeFromString \"foo%40bar\") = \"foo@bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[47,39]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"fromString","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a user-info value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo\" = unsafeFromString \"foo\"\nfromString \"foo@bar\" = unsafeFromString \"foo%40bar\"\nfromString \"foo%40bar\" = unsafeFromString \"foo%2540bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/uri/v8.0.1/src/URI/Scheme.purs","end":[79,24]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Scheme","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for the scheme component of a URI. Prints a scheme value\nfollowed by a `':'`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/uri/v8.0.1/src/URI/Scheme.purs","end":[61,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromString","moduleName":"URI.Scheme","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a `Scheme` part unsafely: if the value is not an acceptable\nscheme a runtime error will be thrown.\n\nThis is intended as a convenience when describing `Scheme`s statically in\nPureScript code, in all other cases `fromString` should be used.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/uri/v8.0.1/src/URI/Scheme.purs","end":[53,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"toString","moduleName":"URI.Scheme","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a scheme.\n\n``` purescript\ntoString (unsafeFromString \"http\") == \"http\"\ntoString (unsafeFromString \"git+ssh\") == \"git+ssh\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/uri/v8.0.1/src/URI/Query.purs","end":[86,23]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Query","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for the query component of a URI. Will print the value with\na `'?'` prefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/uri/v8.0.1/src/URI/Query.purs","end":[73,32]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeToString","moduleName":"URI.Query","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a query without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/uri/v8.0.1/src/URI/Query.purs","end":[66,34]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromString","moduleName":"URI.Query","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a query value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe query, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/uri/v8.0.1/src/URI/Query.purs","end":[60,26]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"toString","moduleName":"URI.Query","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a query, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo\") = \"foo\"\ntoString (unsafeFromString \"foo%23bar\") = \"foo#bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/uri/v8.0.1/src/URI/Query.purs","end":[50,28]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"fromString","moduleName":"URI.Query","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a query value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo\" = unsafeFromString \"foo\"\nfromString \"foo#bar\" = unsafeFromString \"foo%23bar\"\nfromString \"foo%23bar\" = unsafeFromString \"foo%2523bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/uri/v8.0.1/src/URI/Port.purs","end":[63,22]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Port","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for the port component of a host in a URI. Will print the value\nwith a `':'` prefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/uri/v8.0.1/src/URI/Port.purs","end":[46,27]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromInt","moduleName":"URI.Port","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a port from an integer directly: if the value is not an\nacceptable port number a runtime error will be thrown.\n\nThis is intended as a convenience when describing `Port`s statically in\nPureScript code, in all other cases `fromInt` should be preferred.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/uri/v8.0.1/src/URI/Port.purs","end":[31,19]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"toInt","moduleName":"URI.Port","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the port number as an integer.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/uri/v8.0.1/src/URI/Path.purs","end":[32,22]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _path-abempty_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[179,44]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"printSegmentNZNC","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _segment-nz-nc_ component of a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[168,61]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeSegmentNZNCToString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for the non-empty-no-colon segment without\npercent-decoding. Only \"unsafe\" in the sense that values this produces may\nneed further decoding, the name is more for symmetry with the\n`segmentNZNCFromString`/`unsafeSegmentNZNCFromString` pairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[161,63]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeSegmentNZNCFromString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a non-empty-no-colon segment, percent-decoding\nany characters that require it.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[156,55]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"segmentNZNCToString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a non-empty-no-colon segment value from a string directly - no\npercent-encoding will be applied. This is useful when using a custom\nencoding scheme for the segment, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[150,57]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"segmentNZNCFromString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a non-empty-no-colon segment value from a string,\npercent-encoding any characters that require it. Note that running this on\na string that has already had percent-encoding applied will double-encode\nit, for those situations use `unsafeSegmentNZNCFromString` instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[133,40]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"printSegmentNZ","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _segment-nz_ component of a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[122,57]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeSegmentNZToString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a non-empty segment without percent-decoding.\nOnly \"unsafe\" in the sense that values this produces may need further\ndecoding, the name is more for symmetry with the `segmentNZFromString`/\n`unsafeSegmentNZFromString` pairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[115,59]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeSegmentNZFromString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a non-empty segment value from a string directly - no\npercent-encoding will be applied. This is useful when using a custom\nencoding scheme for the segment, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[109,51]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"segmentNZToString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a non-empty segment, percent-decoding any\ncharacters that require it.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[104,53]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"segmentNZFromString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a non-empty segment value from a string, percent-encoding any\ncharacters that require it. Note that running this on a string that has\nalready had percent-encoding applied will double-encode it, for those\nsituations use `unsafeSegmentNZFromString` instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[87,36]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"printSegment","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _segment_ component of a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[76,45]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeSegmentToString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for the segment without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `segmentFromString`/\n`unsafeSegmentFromString` pairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[69,47]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeSegmentFromString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a segment value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe segment, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[63,39]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"segmentToString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a segment, percent-decoding any characters\nthat require it.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[58,41]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"segmentFromString","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a segment value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeSegmentFromString` instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/uri/v8.0.1/src/URI/Path/Rootless.purs","end":[32,30]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Path.Rootless","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _path-rootless_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/uri/v8.0.1/src/URI/Path/NoScheme.purs","end":[34,30]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Path.NoScheme","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _path-noscheme_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/uri/v8.0.1/src/URI/Path/Absolute.purs","end":[44,30]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Path.Absolute","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for a _path-absolute_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/uri/v8.0.1/src/URI/Host.purs","end":[48,22]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Host","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for host addresses.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/uri/v8.0.1/src/URI/Host/RegName.purs","end":[77,25]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Host.RegName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for reg-names.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/uri/v8.0.1/src/URI/Host/RegName.purs","end":[67,42]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeToString","moduleName":"URI.Host.RegName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for the reg-name without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/uri/v8.0.1/src/URI/Host/RegName.purs","end":[60,44]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromString","moduleName":"URI.Host.RegName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a query value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe query, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/uri/v8.0.1/src/URI/Host/RegName.purs","end":[54,36]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"toString","moduleName":"URI.Host.RegName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a reg-name, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo.com\") = \"foo.com\"\ntoString (unsafeFromString \"foo%3Abar\") = \"foo:bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/uri/v8.0.1/src/URI/Host/RegName.purs","end":[44,38]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"fromString","moduleName":"URI.Host.RegName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a reg-name value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo.com\" = unsafeFromString \"foo.com\"\nfromString \"foo:bar\" = unsafeFromString \"foo%3Abar\"\nfromString \"foo%3Abar\" = unsafeFromString \"foo%253Abar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/uri/v8.0.1/src/URI/Host/IPv6Address.purs","end":[31,38]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeToString","moduleName":"URI.Host.IPv6Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/uri/v8.0.1/src/URI/Host/IPv6Address.purs","end":[28,40]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromString","moduleName":"URI.Host.IPv6Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/uri/v8.0.1/src/URI/Host/IPv4Address.purs","end":[65,29]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Host.IPv4Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for IPv4 adddresses.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/uri/v8.0.1/src/URI/Fragment.purs","end":[82,26]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Fragment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for the fragment component of a URI. Will print the value with\na `'#'` prefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/uri/v8.0.1/src/URI/Fragment.purs","end":[69,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeToString","moduleName":"URI.Fragment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for the fragment without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/uri/v8.0.1/src/URI/Fragment.purs","end":[62,37]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeFromString","moduleName":"URI.Fragment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a fragment value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe fragment, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/uri/v8.0.1/src/URI/Fragment.purs","end":[56,29]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"toString","moduleName":"URI.Fragment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a fragment, percent-decoding any characters\nthat require it.\n\n``` purescript\ntoString (unsafeFromString \"foo\") = \"foo\"\ntoString (unsafeFromString \"foo%23bar\") = \"foo#bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/uri/v8.0.1/src/URI/Fragment.purs","end":[46,31]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"fromString","moduleName":"URI.Fragment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a fragment value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeFromString` instead.\n\n``` purescript\nfromString \"foo\" = unsafeFromString \"foo\"\nfromString \"foo#bar\" = unsafeFromString \"foo%23bar\"\nfromString \"foo%23bar\" = unsafeFromString \"foo%2523bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/uri/v8.0.1/src/URI/Extra/UserPassInfo.purs","end":[66,32]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"print","moduleName":"URI.Extra.UserPassInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A printer for `user:password` formatted user-info.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[204,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[204,37]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeValueToString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a value without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[197,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[197,39]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeValueFromString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe value, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[191,31]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"valueToString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a value, percent-decoding any characters\nthat require it.\n\n``` purescript\nvalueToString (unsafeValueFromString \"foo\") = \"foo\"\nvalueToString (unsafeValueFromString \"foo%23bar\") = \"foo#bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[176,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[176,33]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"valueFromString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeValueFromString` instead.\n\n``` purescript\nvalueFromString \"foo\" = unsafeValueFromString \"foo\"\nvalueFromString \"foo#bar\" = unsafeValueFromString \"foo%23bar\"\nvalueFromString \"foo%23bar\" = unsafeValueFromString \"foo%2523bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[152,33]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeKeyToString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a key without percent-decoding. Only\n\"unsafe\" in the sense that values this produces may need further decoding,\nthe name is more for symmetry with the `fromString`/`unsafeFromString`\npairing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[145,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[145,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"unsafeKeyFromString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a key value from a string directly - no percent-encoding\nwill be applied. This is useful when using a custom encoding scheme for\nthe key, to prevent double-encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[139,27]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"keyToString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string value for a key, percent-decoding any characters\nthat require it.\n\n``` purescript\nkeyToString (unsafeKeyFromString \"foo\") = \"foo\"\nkeyToString (unsafeKeyFromString \"foo%23bar\") = \"foo#bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[129,29]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"keyFromString","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a key value from a string, percent-encoding any characters\nthat require it. Note that running this on a string that has already had\npercent-encoding applied will double-encode it, for those situations use\n`unsafeKeyFromString` instead.\n\n``` purescript\nkeyFromString \"foo\" = unsafeKeyFromString \"foo\"\nkeyFromString \"foo#bar\" = unsafeKeyFromString \"foo%23bar\"\nkeyFromString \"foo%23bar\" = unsafeKeyFromString \"foo%2523bar\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/uri/v8.0.1/src/URI/Common.purs","end":[110,54]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"decodeURIComponent'","moduleName":"URI.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A version of [`decodeURIComponent`](https://pursuit.purescript.org/packages/purescript-jsuri/docs/JSURI#v:decodeURIComponent)\nthat operates on non-empty strings.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Attributes.purs","end":[31,30]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"number","moduleName":"Tracing.Attributes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Attribute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A Number attribute. \n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Attributes.purs","end":[27,24]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"int","moduleName":"Tracing.Attributes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Attribute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An Int attribute\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Attributes.purs","end":[23,32]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"boolean","moduleName":"Tracing.Attributes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Attribute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A Boolean attribute, which is to say a restricted sort of atom.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Attributes.purs","end":[19,26]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"atom","moduleName":"Tracing.Attributes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Attribute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An Atom attribute\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Attributes.purs","end":[15,30]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"string","moduleName":"Tracing.Attributes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Attribute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A String attribute\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[42,45]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorPosition","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[39,42]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorMessage","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[192,40]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"printSummary","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"ResultSummary"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Print a one-line summary in the form \"x/y test(s) passed.\"\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[110,55]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"acceptSuccessLocation","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Stetson","Types"],"AcceptHandlerResult"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The resource was accepted succesfully\nAnd here is the URI of its new location\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[50,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"printPath","moduleName":"Routing.Duplex.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[47,30]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"run","moduleName":"Routing.Duplex.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[44,31]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"hash","moduleName":"Routing.Duplex.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[33,30]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"put","moduleName":"Routing.Duplex.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[156,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"parsePath","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/lcg/v3.0.0/src/Random/LCG.purs","end":[83,24]},"score":2,"packageInfo":{"values":["lcg"],"tag":"Package"},"name":"lcgNext","moduleName":"Random.LCG","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Step the linear congruential generator\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/lcg/v3.0.0/src/Random/LCG.purs","end":[44,22]},"score":2,"packageInfo":{"values":["lcg"],"tag":"Package"},"name":"unSeed","moduleName":"Random.LCG","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/lcg/v3.0.0/src/Random/LCG.purs","end":[33,22]},"score":2,"packageInfo":{"values":["lcg"],"tag":"Package"},"name":"mkSeed","moduleName":"Random.LCG","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[89,67]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"parseShutdownReasonFFI","moduleName":"Pinto.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Pinto","Types"],"ShutdownReason"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing.purs","end":[148,51]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"timestampToNano","moduleName":"OpenTelemetry.Tracing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Timestamp"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[26,51]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"traceState","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"TraceState"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[22,45]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"traceId","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"TraceId"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[24,43]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"spanId","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanId"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[27,49]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"isRecording","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[23,47]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"hexTraceId","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[25,46]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"hexSpanId","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Ctx.purs","end":[22,38]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"clearCtx","moduleName":"OpenTelemetry.Tracing.Ctx","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Ctx"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Ctx"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Baggage.purs","end":[26,45]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"getAllInCtx","moduleName":"OpenTelemetry.Tracing.Baggage","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Ctx"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing","Baggage"],"Baggage"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[68,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"trunc","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Truncates the decimal portion of a number. Equivalent to `floor` if the\nnumber is positive, and `ceil` if the number is negative.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[64,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"tan","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the tangent of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[61,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sqrt","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the square root of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[58,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sin","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the sine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[55,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"round","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the integer closest to the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[43,39]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"log","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the natural logarithm of a number.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[37,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"floor","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the largest integer not larger than the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[34,39]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"exp","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `e` exponentiated to the power of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[31,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"cos","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the cosine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[28,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"ceil","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the smallest integer not smaller than the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[18,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"atan","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse tangent of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[15,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"asin","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse sine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[12,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"acos","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse cosine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[9,39]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"abs","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the absolute value of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[193,34]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"logLevelToErl","moduleName":"Logger","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Logger"],"LogLevel"]}]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[121,45]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"isArray","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a foreign value is an array\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[118,49]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"isUndefined","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a foreign value is undefined\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[115,44]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"isNull","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a foreign value is null\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[105,42]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"tagOf","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read the Javascript _tag_ of a value.\n\nThis function wraps the `Object.toString` method.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[100,43]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"typeOf","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read the Javascript _type_ of a value\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[72,45]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"renderForeignError","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"ForeignError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[130,64]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"fromFfiMilliseconds","moduleName":"Erl.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"FfiMilliseconds"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[127,62]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"toFfiMilliseconds","moduleName":"Erl.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"FfiMilliseconds"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName.purs","end":[24,51]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"nativeModuleName","moduleName":"Erl.ModuleName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"ModuleName"]}]},{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"NativeModuleName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName.purs","end":[12,35]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"moduleName","moduleName":"Erl.ModuleName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"ModuleName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[327,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[327,37]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"windowsSoReuseAddr","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Raw"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[530,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[530,45]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ntoa6","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Ip6Address"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[529,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[529,45]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ntoa4","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Ip4Address"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[532,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[532,28]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ntoa","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"IpAddress"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[322,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[322,35]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"macOsSoReusePort","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Raw"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[212,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[212,36]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"isMulticast","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"IpAddress"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[318,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[318,33]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ipMulticastAll","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Raw"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[72,55]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"nativeTimeToMilliseconds","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NativeTime"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[52,49]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"termToString","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[136,41]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"isNull","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[73,31]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"fromObject","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JObject"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[68,28]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"fromArray","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JArray"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[65,31]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"fromString","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JString"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[62,30]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"fromNumber","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JNumber"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[59,33]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"fromBoolean","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JBoolean"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[56,26]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"fromNull","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JNull"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Printer.purs","end":[10,34]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"prettyPrintJson","moduleName":"Erl.Data.Jsone.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Printer.purs","end":[7,28]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"printJson","moduleName":"Erl.Data.Jsone.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Bitstring.purs","end":[23,44]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"byteSize","moduleName":"Erl.Data.Bitstring","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Bitstring","Type"],"Bitstring"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Size in bytes of a bit string (rounded up)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Bitstring.purs","end":[20,43]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"bitSize","moduleName":"Erl.Data.Bitstring","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Bitstring","Type"],"Bitstring"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Size in bits of a bit string\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Bitstring.purs","end":[17,49]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromBinary","moduleName":"Erl.Data.Bitstring","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Bitstring","Type"],"Bitstring"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Witness that every binary is a bitstring\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Bitstring.purs","end":[14,48]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"isBinary","moduleName":"Erl.Data.Bitstring","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Bitstring","Type"],"Bitstring"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary.purs","end":[12,41]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"byteSize","moduleName":"Erl.Data.Binary","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Size in bytes of a binary\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF8.purs","end":[7,48]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toBinary","moduleName":"Erl.Data.Binary.UTF8","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF8"],"UTF8String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF32.purs","end":[11,49]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toBinary","moduleName":"Erl.Data.Binary.UTF32","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF32"],"UTF32String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF32.purs","end":[9,49]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toString","moduleName":"Erl.Data.Binary.UTF32","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF32"],"UTF32String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF32.purs","end":[7,51]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromString","moduleName":"Erl.Data.Binary.UTF32","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF32"],"UTF32String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF16.purs","end":[11,49]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toBinary","moduleName":"Erl.Data.Binary.UTF16","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF16"],"UTF16String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF16.purs","end":[9,49]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toString","moduleName":"Erl.Data.Binary.UTF16","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF16"],"UTF16String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/UTF16.purs","end":[7,51]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromString","moduleName":"Erl.Data.Binary.UTF16","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","UTF16"],"UTF16String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOList.purs","end":[30,41]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"byteSize","moduleName":"Erl.Data.Binary.IOList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOList"],"IOList"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calls iolist_size \n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOList.purs","end":[27,44]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toBinary","moduleName":"Erl.Data.Binary.IOList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOList"],"IOList"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Collapse an IOList to a Binary\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOList.purs","end":[24,46]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromBinary","moduleName":"Erl.Data.Binary.IOList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOList"],"IOList"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a binary to an IOList. This is O(1) but not just type-coercion - see also IOData's fromBinary\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[40,41]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"byteSize","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calls iolist_size\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[34,44]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"toBinary","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Collapse an iodata to binary\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[31,46]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromString","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Coerce a String to IOData (no-op)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[28,46]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromBinary","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Coerce a Binary to IOData (no-op)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[25,46]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"fromIOList","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOList"],"IOList"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Coerce an IOList to IOData (no-op)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[26,33]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"matchSpec","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"MatchSpec"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[117,41]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"headers","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Headers"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[109,35]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"qs","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[107,37]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"path","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[105,34]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"port","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[103,37]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"host","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[92,39]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"scheme","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[89,26]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"version","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Version"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[80,39]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"method","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[170,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[170,54]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"decodeReason","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"RawTerminateReason"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"TerminateReason"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[97,30]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"outFrame","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"Frame"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"OutFrame"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"TODO: Can also output iodata() versions, but input always binary\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[83,34]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"decodeInFrame","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"InFrame"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"Frame"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[120,46]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"moved","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[94,62]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"unauthorized","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"IsAuthorizedResponse"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Common.purs","end":[21,45]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"decodeReason","moduleName":"Erl.Cowboy.Handlers.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Common"],"RawReason"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Common"],"TerminateReason"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-atom/v1.2.0/src/Erl/Atom.purs","end":[11,42]},"score":0,"packageInfo":{"values":["erl-atom"],"tag":"Package"},"name":"toString","moduleName":"Erl.Atom","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/erl-atom/v1.2.0/src/Erl/Atom.purs","end":[9,38]},"score":0,"packageInfo":{"values":["erl-atom"],"tag":"Package"},"name":"atom","moduleName":"Erl.Atom","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create atom from the given String, creating it if necessary. \nFor Unicode characters > 255 this requires Erlang/OTP 20.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/exceptions/v5.0.0-erl1/src/Effect/Exception.purs","end":[38,39]},"score":5,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"name","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the error name when defined, or fallback to 'Error'\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/exceptions/v5.0.0-erl1/src/Effect/Exception.purs","end":[35,42]},"score":5,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"message","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the error message from a JavaScript error\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/exceptions/v5.0.0-erl1/src/Effect/Exception.purs","end":[32,40]},"score":5,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"error","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a JavaScript error, specifying a message\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time.purs","end":[61,35]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"millisecond","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Millisecond"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The millisecond component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time.purs","end":[53,25]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"second","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Second"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The second component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time.purs","end":[45,25]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"minute","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Minute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The minute component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time.purs","end":[37,21]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"hour","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Hour"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The hour component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Unsafe.purs","end":[15,38]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"char","moduleName":"Data.String.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a string of length `1` to a character.\n\n**Unsafe:** throws runtime exception if length is not `1`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/String/Unicode.purs","end":[68,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"caseFoldSimple","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert each code point in the string to its corresponding case-folded\ncode point. This will preserve the number of code points in the string.\n\nNote: this is not the full Unicode algorithm, see `caseFold`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/String/Unicode.purs","end":[61,34]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toLowerSimple","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert each code point in the string to its corresponding lowercase\ncode point. This will preserve the number of code points in the string.\n\nNote: this is not the full Unicode algorithm, see `toLower`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/String/Unicode.purs","end":[54,34]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toUpperSimple","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert each code point in the string to its corresponding uppercase\ncode point. This will preserve the number of code points in the string.\n\nNote: this is not the full Unicode algorithm, see `toUpper`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/String/Unicode.purs","end":[41,29]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"caseFold","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The full Unicode case folding algorithm, may increase the length of the\nstring by mapping individual code points to longer sequences.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/String/Unicode.purs","end":[36,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toLower","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert each code point in the string to its corresponding lower\nsequence. This is the full (locale-independent) Unicode algorithm,\nand may map single code points to more than one code point. For example,\n`toLower \"\\x0130\" == \"\\x0069\\x0307\"`.\n\nBecause this matches on more rules, it may be slower than `toLowerSimple`,\nbut it provides more correct results.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/String/Unicode.purs","end":[26,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toUpper","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert each code point in the string to its corresponding uppercase\nsequence. This is the full (locale-independent) Unicode algorithm,\nand may map single code points to more than one code point. For example,\n`toUpper \"ß\" == \"SS\"`.\n\nBecause this matches on more rules, it may be slower than `toUpperSimple`,\nbut it provides more correct results.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex.purs","end":[69,35]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"parseFlags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses the string representation of `RegexFlags`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex.purs","end":[59,36]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"renderFlags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string representation of the given `RegexFlags`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex.purs","end":[52,29]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"flags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `RegexFlags` used to construct the given `Regex`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex.purs","end":[49,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"source","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the pattern string used to construct the given `Regex`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[177,44]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toUpper","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper (NonEmptyString \"Hello\") == NonEmptyString \"HELLO\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[169,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[169,44]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toLower","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower (NonEmptyString \"hElLo\") == NonEmptyString \"hello\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[79,37]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a `NonEmptyString` back into a standard `String`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[75,56]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"unsafeFromString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A partial version of `fromString`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[198,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[198,32]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength (NonEmptyString \"Hello World\") == 11\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[70,36]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a character.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[102,32]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[60,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Common.purs","end":[88,40]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"trim","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n\n```purescript\ntrim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Common.purs","end":[79,43]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toUpper","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper \"Hello\" == \"HELLO\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Common.purs","end":[72,43]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toLower","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower \"hElLo\" == \"hello\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Common.purs","end":[23,26]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"null","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` if the given string is empty.\n\n```purescript\nnull \"\" == true\nnull \"Hi\" == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodeUnits.purs","end":[150,39]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength \"Hello World\" == 11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodeUnits.purs","end":[83,43]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a string of length `1` containing the given character.\n\n```purescript\nsingleton 'l' == \"l\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[215,24]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points in the string. Operates in constant\nspace and in time linear to the length of the string.\n\n```purescript\n>>> length \"b 𝐀𝐀 c 𝐀\"\n8\n-- compare to Data.String:\n>>> length \"b 𝐀𝐀 c 𝐀\"\n11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[88,33]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a string containing just the given code point. Operates in\nconstant space and time.\n\n```purescript\n>>> map singleton (toEnum 0x1D400)\nJust \"𝐀\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[77,39]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointFromChar","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a CodePoint from a given Char.\n\n```purescript\n>>> codePointFromChar 'B'\nCodePoint 0x42 -- represents 'B'\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/rationals/c883c972513380ae161d816ed42108acfe8cc8f6/src/Data/Rational.purs","end":[17,27]},"score":0,"packageInfo":{"values":["rationals"],"tag":"Package"},"name":"fromInt","moduleName":"Data.Rational","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Rational"],"Rational"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/rationals/c883c972513380ae161d816ed42108acfe8cc8f6/src/Data/Rational.purs","end":[14,31]},"score":0,"packageInfo":{"values":["rationals"],"tag":"Package"},"name":"toNumber","moduleName":"Data.Rational","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Rational"],"Rational"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ordering.purs","end":[33,31]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"invert","moduleName":"Data.Ordering","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Reverses an `Ordering` value, flipping greater than for less than while\npreserving equality.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number.purs","end":[23,45]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"isFinite","moduleName":"Data.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a number is finite\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Format.purs","end":[76,44]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"toString","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a number to a string via JavaScript's toString method.\n\n```purs\n> toString 12.34\n\"12.34\"\n\n> toString 1234.0\n\"1234\"\n\n> toString 1.2e-10\n\"1.2e-10\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Format.purs","end":[55,29]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"exponential","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Number","Format"],"Format"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `toExponential`-based format from an integer. Values smaller than\n`0` and larger than `20` will be clamped.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Format.purs","end":[50,23]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"fixed","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Number","Format"],"Format"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `toFixed`-based format from an integer. Values smaller than `0`\nand larger than `20` will be clamped.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Format.purs","end":[45,27]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"precision","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Number","Format"],"Format"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `toPrecision`-based format from an integer. Values smaller than\n`1` and larger than `21` will be clamped.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[69,34]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"millisecond","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[66,29]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"second","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[63,29]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"minute","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[60,27]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"hour","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[57,26]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"day","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[48,27]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"week","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[54,28]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"month","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[51,27]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"year","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration/Iso.purs","end":[49,31]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"prettyError","moduleName":"Data.Interval.Duration.Iso","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration","Iso"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration/Iso.purs","end":[56,41]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"unIsoDuration","moduleName":"Data.Interval.Duration.Iso","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration","Iso"],"IsoDuration"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[159,22]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"odd","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == true\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[150,23]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"even","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `Int` is an even number.\n\n``` purescript\neven 0 == true\neven 1 == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[141,24]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"parity","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `Int` is `Even` or `Odd`.\n\n``` purescript\nparity 0 == Even\nparity 1 == Odd\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[70,41]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"toNumber","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an `Int` value back into a `Number`. Any `Int` is a valid `Number`\nso there is no loss of precision with this function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[60,23]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"round","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the nearest integer to the\nargument. Values outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[48,23]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"floor","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\nless than the argument. Values outside the `Int` range are clamped, `NaN`\nand `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[54,22]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"ceil","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\ngreater than the argument. Values outside the `Int` range are clamped,\n`NaN` and `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int/Bits.purs","end":[37,40]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"complement","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise NOT.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[11,22]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn1","moduleName":"Data.Function.Uncurried","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A function of one argument\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Number.purs","end":[92,53]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"showNumberAsFloat","moduleName":"Data.Formatter.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Number.purs","end":[55,36]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"printFormatter","moduleName":"Data.Formatter.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Formatter","Number"],"Formatter"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[83,50]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"printFormatterCommand","moduleName":"Data.Formatter.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Formatter","DateTime"],"FormatterCommand"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[109,36]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"printFormatter","moduleName":"Data.Formatter.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Formatter","DateTime"],"Formatter"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[47,25]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"time","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[38,25]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"date","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime/Instant.purs","end":[77,34]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"toDateTime","moduleName":"Data.DateTime.Instant","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `DateTime` value from an `Instant`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime/Instant.purs","end":[65,28]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"fromDate","moduleName":"Data.DateTime.Instant","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates an `Instant` from a `Date` value, using the assumed time 00:00:00.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime/Instant.purs","end":[53,36]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"fromDateTime","moduleName":"Data.DateTime.Instant","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates an `Instant` from a `DateTime` value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime/Instant.purs","end":[49,37]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"unInstant","moduleName":"Data.DateTime.Instant","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lowers an `Instant` to a `Milliseconds` duration.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[120,30]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"isLeapYear","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether a year is a leap year according to the proleptic Gregorian\ncalendar.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[87,27]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"weekday","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Weekday"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The weekday for a date value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[83,19]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"day","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Day"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The day component of a date value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[79,23]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"month","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The month component of a date value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[75,21]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"year","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The year component of a date value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[174,61]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"generalCatToUnicodeCat","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode"],"GeneralCategory"]}]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"UnicodeCategory"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[142,42]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"generalCatToInt","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode"],"GeneralCategory"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[206,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[206,61]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"unicodeCatToGeneralCat","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"UnicodeCategory"]}]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode"],"GeneralCategory"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[561,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[561,41]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"caseFoldSimple","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a code point to the corresponding case-folded code point.\nAny other character is returned unchanged.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[556,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[556,40]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toTitleSimple","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a code point to the corresponding title-case or upper-case\ncode point, if any.  (Title case differs from upper case only for a small\nnumber of ligature characters.)\nAny other character is returned unchanged.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[544,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[544,40]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toUpperSimple","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a code point to the corresponding upper-case code point, if any.\nAny other character is returned unchanged.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[549,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[549,40]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"toLowerSimple","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a code point to the corresponding lower-case code point, if any.\nAny other character is returned unchanged.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[783,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[783,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isNumber","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode numeric characters, including digits from various\nscripts, Roman numerals, et cetera.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n* `DecimalNumber`\n* `LetterNumber`\n* `OtherNumber`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table),\npart of the Unicode standard. The same document defines what is\nand is not a \"Number\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isNumber (codePointFromChar 'a')\nfalse\n>>> isNumber (codePointFromChar '%')\nfalse\n>>> isNumber (codePointFromChar '3')\ntrue\n```\n\nASCII @\\'0\\'@ through @\\'9\\'@ are all numbers:\n\n```\n>>> and $ map (isNumber <<< codePointFromChar) (enumFromTo '0' '9' :: Array Char)\ntrue\n```\n\nUnicode Roman numerals are \\\"numbers\\\" as well:\n\n```\n>>> isNumber (codePointFromChar 'Ⅸ')\ntrue\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[734,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[734,31]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isMark","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode mark characters, for example accents and the\nlike, which combine with preceding characters.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `NonSpacingMark`\n- `SpacingCombiningMark`\n- `EnclosingMark`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table),\npart of the Unicode standard. The same document defines what is\nand is not a \"Mark\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isMark (codePointFromChar 'a')\nfalse\n>>> isMark (codePointFromChar '0')\nfalse\n```\n\nCombining marks such as accent characters usually need to follow\nanother character before they become printable:\n\n```\n>>> map isMark (toCodePointArray \"ò\")\n[false,true]\n```\n\nPuns are not necessarily supported:\n\n```\n>>> isMark (codePointFromChar '✓')\nfalse\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[460,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[460,38]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isPunctuation","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode punctuation characters, including various kinds\nof connectors, brackets and quotes.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `ConnectorPunctuation`\n- `DashPunctuation`\n- `OpenPunctuation`\n- `ClosePunctuation`\n- `InitialQuote`\n- `FinalQuote`\n- `OtherPunctuation`\n\nThese classes are defined in the\n[Unicode Character Database])http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table)\npart of the Unicode standard. The same document defines what is\nand is not a \"Punctuation\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isPunctuation (codePointFromChar 'a')\nfalse\n>>> isPunctuation (codePointFromChar '7')\nfalse\n>>> isPunctuation (codePointFromChar '♥')\nfalse\n>>> isPunctuation (codePointFromChar '\"')\ntrue\n>>> isPunctuation (codePointFromChar '?')\ntrue\n>>> isPunctuation (codePointFromChar '—')\ntrue\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[836,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[836,36]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isSeparator","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode space and separator characters.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `Space`\n- `LineSeparator`\n- `ParagraphSeparator`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table)\npart of the Unicode standard. The same document defines what is\nand is not a \"Separator\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isSeparator (codePointFromChar 'a')\nfalse\n>>> isSeparator (codePointFromChar '6')\nfalse\n>>> isSeparator (codePointFromChar ' ')\ntrue\n>>> isSeparator (codePointFromChar '-')\nfalse\n```\n\nWarning: newlines and tab characters are not considered\nseparators.\n\n```\n>>> isSeparator (codePointFromChar '\\n')\nfalse\n>>> isSeparator (codePointFromChar '\\t')\nfalse\n```\n\nBut some more exotic characters are (like HTML's @&nbsp;@):\n\n```\n>>> isSeparator (codePointFromChar '\\xA0')\ntrue\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[510,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[510,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isSymbol","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode symbol characters, including mathematical and\ncurrency symbols.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `MathSymbol`\n- `CurrencySymbol`\n- `ModifierSymbol`\n- `OtherSymbol`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table),\npart of the Unicode standard. The same document defines what is\nand is not a \"Symbol\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isSymbol (codePointFromChar 'a')\nfalse\n>>> isSymbol (codePointFromChar '6')\nfalse\n>>> isSymbol (codePointFromChar '=')\ntrue\n```\n\nThe definition of \\\"math symbol\\\" may be a little\ncounter-intuitive depending on one's background:\n\n```\n>>> isSymbol (codePointFromChar '+')\ntrue\n>>> isSymbol (codePointFromChar '-')\nfalse\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[369,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[369,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isSpace","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` for any Unicode space character, and the control\ncharacters `\\t`, `\\n`, `\\r`, `\\f`, `\\v`.\n\n`isSpace` includes non-breaking space.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[362,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[362,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isPrint","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects printable Unicode characters\n(letters, numbers, marks, punctuation, symbols and spaces).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[357,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[357,34]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isControl","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects control characters, which are the non-printing characters of\nthe Latin-1 subset of Unicode.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[415,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[415,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isHexDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII hexadecimal digits,\ni.e. `0..9, A..F, a..f`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[409,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[409,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isOctDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII octal digits, i.e. `0..7`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[404,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[404,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isDecDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII decimal digits, i.e. `0..9`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[420,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[420,130]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'isDigit' is deprecated, use 'isDecDigit', 'isHexDigit', or 'isOctDigit' instead"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[684,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[684,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isLetter","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects alphabetic Unicode characters (lower-case, upper-case and\ntitle-case letters, plus letters of caseless scripts and\nmodifiers letters).\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `UppercaseLetter`\n- `LowercaseLetter`\n- `TitlecaseLetter`\n- `ModifierLetter`\n- `OtherLetter`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table)\npart of the Unicode standard. The same document defines what is\nand is not a \"Letter\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isLetter (codePointFromChar 'a')\ntrue\n>>> isLetter (codePointFromChar 'A')\ntrue\n>>> isLetter (codePointFromChar '0')\nfalse\n>>> isLetter (codePointFromChar '%')\nfalse\n>>> isLetter (codePointFromChar '♥')\nfalse\n>>> isLetter (codePointFromChar '\\x1F')\nfalse\n```\n\nEnsure that 'isLetter' and 'isAlpha' are equivalent.\n\n```\n>>> chars = enumFromTo bottom top :: Array CodePoint\n>>> letters = map isLetter chars\n>>> alphas = map isAlpha chars\n>>> letters == alphas\ntrue\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[400,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[400,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAlphaNum","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects alphabetic or numeric digit Unicode characters.\n\nNote that numeric digits outside the ASCII range are selected by this\nfunction but not by `isDigit`.  Such digits may be part of identifiers\nbut are not used by the printer and reader to represent numbers.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[392,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[392,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAlpha","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects alphabetic Unicode characters (lower-case, upper-case and\ntitle-case letters, plus letters of caseless scripts and modifiers letters).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[383,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[383,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isUpper","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects upper-case or title-case alphabetic Unicode characters (letters).\nTitle case is used by a small number of letter ligatures like the\nsingle-character form of /Lj/.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[387,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[387,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isLower","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects lower-case alphabetic Unicode characters (letters).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[342,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[342,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isLatin1","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects the first 256 characters of the Unicode character set,\ncorresponding to the ISO 8859-1 (Latin-1) character set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[352,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[352,37]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAsciiUpper","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII upper-case letters,\ni.e. characters satisfying both `isAscii` and `isUpper`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[347,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[347,37]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAsciiLower","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII lower-case letters,\ni.e. characters satisfying both `isAscii` and `isLower`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[337,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[337,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAscii","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects the first 128 characters of the Unicode character set,\ncorresponding to the ASCII character set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5723,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5723,24]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uTowtitle","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5720,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5720,24]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uTowlower","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5717,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5717,24]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uTowupper","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5703,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5703,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswspace","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5697,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5697,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswalnum","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5694,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5694,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswdigit","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5691,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5691,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswalpha","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5688,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5688,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswlower","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5685,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5685,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswupper","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5677,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5677,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswprint","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5674,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5674,28]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uIswcntrl","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1648,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal/Casing.purs","end":[1648,19]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"fold","moduleName":"Data.CodePoint.Unicode.Internal.Casing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1643,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal/Casing.purs","end":[1643,27]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"findRule","moduleName":"Data.CodePoint.Unicode.Internal.Casing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal","Casing"],"CaseRec"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1637,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal/Casing.purs","end":[1637,26]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"zeroRec","moduleName":"Data.CodePoint.Unicode.Internal.Casing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal","Casing"],"CaseRec"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/strings/v5.0.0-erl2/src/Data/Char.purs","end":[11,26]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toCharCode","moduleName":"Data.Char","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the numeric Unicode value of the character.\n"}],"tag":"SearchResult"}]
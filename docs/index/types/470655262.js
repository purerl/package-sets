// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["470655262"] = [{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/uri/v8.0.1/src/URI/URIRef.purs","end":[105,4]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"URIRefPrintOptions","moduleName":"URI.URIRef","info":{"values":[{"type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"RCons","contents":["printRelPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}]},{"tag":"RCons","contents":["printQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"RCons","contents":["printFragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["relPath",null],["query",null],["fragment",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the general URI\nprinter.\n\nUsed as `Record (URIRefPrintOptions userInfo hosts path hierPath relPath query fragment ())`\nwhen type anotating an options record.\n\nAs a reverse of the parse options, this specifies how to print values back\nfrom custom representations. If this is not necessary, `id` can be used for\nall the options aside from `printHosts`, which will typically be\n`HostPortPair.printHosts id id`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair printer.\n"}],"tag":"SearchResult"}]
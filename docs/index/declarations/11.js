// This file was generated by purescript-docs-search.
window.DocsSearchIndex["11"] = [["radians",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[6,22]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"Radians","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"An alias to make types in this module more explicit.\n"}],"tag":"SearchResult"}]],["radix",[{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[164,26]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"Radix","moduleName":"Data.Int","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The number of unique digits (including zero) used to represent integers in\na specific base.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[187,28]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"radix","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Radix` from a number between 2 and 36.\n"}],"tag":"SearchResult"}]],["raise",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/erl-simplebus/v0.0.3/src/SimpleBus.purs","end":[31,61]},"score":0,"packageInfo":{"values":["erl-simplebus"],"tag":"Package"},"name":"raise","moduleName":"SimpleBus","info":{"values":[{"type":{"tag":"ForAll","contents":["name",{"tag":"ForAll","contents":["msg",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["SimpleBus"],"Bus"]},{"tag":"TypeVar","contents":"name"}]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ranchssl",[{"values":[{"sourceSpan":{"start":[76,3],"name":".spago/erl-ranch/v0.0.2/src/Erl/Ranch.purs","end":[76,13]},"score":0,"packageInfo":{"values":["erl-ranch"],"tag":"Package"},"name":"RanchSsl","moduleName":"Erl.Ranch","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ListenOptions"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ranchtcp",[{"values":[{"sourceSpan":{"start":[75,3],"name":".spago/erl-ranch/v0.0.2/src/Erl/Ranch.purs","end":[75,13]},"score":0,"packageInfo":{"values":["erl-ranch"],"tag":"Package"},"name":"RanchTcp","moduleName":"Erl.Ranch","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ListenOptions"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["random",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/random/v5.0.0-erl1/src/Effect/Random.purs","end":[11,39]},"score":2,"packageInfo":{"values":["random"],"tag":"Package"},"name":"random","moduleName":"Effect.Random","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a random number between 0 (inclusive) and 1 (exclusive). This is\na direct wrapper around JavaScript's `Math.random()`.\n"}],"tag":"SearchResult"}]],["randombool",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/random/v5.0.0-erl1/src/Effect/Random.purs","end":[44,29]},"score":2,"packageInfo":{"values":["random"],"tag":"Package"},"name":"randomBool","moduleName":"Effect.Random","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a random boolean value with an equal chance of being `true` or\n`false`.\n"}],"tag":"SearchResult"}]],["randomint",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/random/v5.0.0-erl1/src/Effect/Random.purs","end":[23,38]},"score":2,"packageInfo":{"values":["random"],"tag":"Package"},"name":"randomInt","moduleName":"Effect.Random","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Takes a range specified by `low` (the first argument) and `high` (the\nsecond), and returns a random integer uniformly distributed in the closed\ninterval `[low, high]`. It is unspecified what happens if `low > high`,\nor if either of `low` or `high` is not an integer.\n\nFor example:\n``` purescript\nrandomInt 1 10 >>= Console.print\n```\nwill print a random integer between 1 and 10.\n"}],"tag":"SearchResult"}]],["randomrange",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/random/v5.0.0-erl1/src/Effect/Random.purs","end":[37,49]},"score":2,"packageInfo":{"values":["random"],"tag":"Package"},"name":"randomRange","moduleName":"Effect.Random","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a random number between a minimum value (inclusive) and a maximum\nvalue (exclusive). It is unspecified what happens if `maximum < minimum`.\n\nFor example:\n``` purescript\nrandomRange 1.0 2.0 >>= Console.print\n```\nwill print a random number between 1 and 2.\n"}],"tag":"SearchResult"}]],["randomsample",[{"values":[{"sourceSpan":{"start":[253,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[253,52]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"randomSample","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get a random sample of 10 values. For a single value, use `randomSampleOne`.\n"}],"tag":"SearchResult"}]],["randomsample'",[{"values":[{"sourceSpan":{"start":[247,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[247,61]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"randomSample'","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Sample a random generator, using a randomly generated seed\n"}],"tag":"SearchResult"}]],["randomsampleone",[{"values":[{"sourceSpan":{"start":[241,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[241,47]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"randomSampleOne","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate a single value using a randomly generated seed.\n"}],"tag":"SearchResult"}]],["randomseed",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/lcg/v3.0.0/src/Random/LCG.purs","end":[48,26]},"score":2,"packageInfo":{"values":["lcg"],"tag":"Package"},"name":"randomSeed","moduleName":"Random.LCG","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random seed\n"}],"tag":"SearchResult"}]],["range",[{"values":[{"sourceSpan":{"start":[199,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[199,41]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"range","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[187,48]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"range","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an array containing a range of integers, including both endpoints.\n```purescript\nrange 2 5 = [2, 3, 4, 5]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[148,32]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"range","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list containing a range of integers, including both endpoints.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[148,32]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"range","moduleName":"Data.List","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list containing a range of integers, including both endpoints.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/unfoldable/v5.0.0-erl1/src/Data/Unfoldable1.purs","end":[107,56]},"score":12,"packageInfo":{"values":["unfoldable"],"tag":"Package"},"name":"range","moduleName":"Data.Unfoldable1","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an `Unfoldable1` containing a range of values, including both\nendpoints.\n\n``` purescript\nrange 0 0 == (NEL.singleton 0 :: NEL.NonEmptyList Int)\nrange 1 2 == (NEL.cons 1 (NEL.singleton 2) :: NEL.NonEmptyList Int)\nrange 2 0 == (NEL.cons 2 (NEL.cons 1 (NEL.singleton 0)) :: NEL.NonEmptyList Int)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[106,32]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"range","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list containing a range of integers, including both endpoints.\n"}],"tag":"SearchResult"}]],["ratio",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/rationals/c883c972513380ae161d816ed42108acfe8cc8f6/src/Data/Ratio.purs","end":[12,25]},"score":0,"packageInfo":{"values":["rationals"],"tag":"Package"},"name":"Ratio","moduleName":"Data.Ratio","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["rational",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/rationals/c883c972513380ae161d816ed42108acfe8cc8f6/src/Data/Rational.purs","end":[12,26]},"score":0,"packageInfo":{"values":["rationals"],"tag":"Package"},"name":"Rational","moduleName":"Data.Rational","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ratio"],"Ratio"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["raw",[{"values":[{"sourceSpan":{"start":[258,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[258,8]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Raw","moduleName":"Erl.Gun","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[310,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[311,35]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Raw","moduleName":"Erl.Kernel.Inet","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[311,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[311,8]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Raw","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rawreason",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Common.purs","end":[17,38]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"RawReason","moduleName":"Erl.Cowboy.Handlers.Common","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["rawterminatereason",[{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[148,47]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"RawTerminateReason","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"This is different from other callback modules terminate reasons\n"}],"tag":"SearchResult"}]],["pctencoded",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/uri/v8.0.1/src/URI/Common.purs","end":[80,42]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"pctEncoded","moduleName":"URI.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parser for a percent-encoded character.\n"}],"tag":"SearchResult"}]],["odd",[{"values":[{"sourceSpan":{"start":[101,20],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[101,25]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"Odd","moduleName":"Data.Int","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[159,22]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"odd","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == true\n```\n"}],"tag":"SearchResult"}]],["nearly",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Prism.purs","end":[136,57]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"nearly","moduleName":"Data.Lens.Prism","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`nearly` is a variant of `only`. Like `only`, `nearly` produces\na prism that matches\na single value. Unlike `only`, it uses a predicate you supply\ninstead of depending on `class Eq`: \n\n```purescript\nsolidWhiteFocus :: Prism' Fill Unit\nsolidWhiteFocus = nearly (Solid Color.white) predicate\n  where\n    predicate candidate =\n      color.toHexString == Color.white.toHexString\n```\n"}],"tag":"SearchResult"}]],["negate",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ring.purs","end":[53,37]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"negate","moduleName":"Data.Ring","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`negate x` can be used as a shorthand for `zero - x`.\n"}],"tag":"SearchResult"}]],["negateduration",[{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time/Duration.purs","end":[98,49]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"negateDuration","moduleName":"Data.Time.Duration","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Negates a duration, turning a positive duration negative or a negative\nduration positive.\n"}],"tag":"SearchResult"}]],["nelcons",[{"values":[{"sourceSpan":{"start":[197,1],"name":".spago/lists/v6.0.1/src/Data/List/Types.purs","end":[197,59]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"nelCons","moduleName":"Data.List.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/Types.purs","end":[248,59]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"nelCons","moduleName":"Erl.Data.List.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["neqapproximate",[{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Approximate.purs","end":[73,46]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"neqApproximate","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The complement of `eqApproximate`.\n"}],"tag":"SearchResult"}]],["nes",[{"values":[{"sourceSpan":{"start":[44,3],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[44,49]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"nes","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"typeClassArguments":[["s",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]],"typeClass":[["Data","String","NonEmpty","Internal"],"MakeNonEmpty"],"type":{"tag":"ForAll","contents":["s",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]},{"tag":"ForAll","contents":["proxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","String","NonEmpty","Internal"],"MakeNonEmpty"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["new",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/refs/v5.0.0-erl2/src/Effect/Ref.purs","end":[44,52]},"score":2,"packageInfo":{"values":["refs"],"tag":"Package"},"name":"new","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new mutable reference containing the specified value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Ets.purs","end":[39,63]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"new","moduleName":"Erl.Kernel.Ets","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Ets"],"Table"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Ets"],"CreateOption"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Ets"],"Ref"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-nativerefs/v0.1.0/src/NativeRef.purs","end":[11,52]},"score":0,"packageInfo":{"values":["erl-nativerefs"],"tag":"Package"},"name":"new","moduleName":"NativeRef","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["NativeRef"],"Ref"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new ref containing value 'a'\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Ctx.purs","end":[11,26]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"new","moduleName":"OpenTelemetry.Tracing.Ctx","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Ctx"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["newactions",[{"values":[{"sourceSpan":{"start":[116,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[116,24]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"newActions","moduleName":"Pinto.GenStatem","info":{"values":[{"typeClassArguments":[["builder",null]],"typeClass":[["Pinto","GenStatem"],"SupportsNewActions"],"type":{"tag":"ForAll","contents":["builder",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pinto","GenStatem"],"SupportsNewActions"],"constraintArgs":[{"tag":"TypeVar","contents":"builder"}]},{"tag":"TypeVar","contents":"builder"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["newinstrument",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/Meter.purs","end":[9,117]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"newInstrument","moduleName":"OpenTelemetry.Metrics.Meter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["d",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Meter"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentDefinition"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Instrument"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["newinstruments",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/Meter.purs","end":[10,125]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"newInstruments","moduleName":"OpenTelemetry.Metrics.Meter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["d",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Meter"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentDefinition"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"d"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Instrument"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"d"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["news",[{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[192,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"news","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"USENET news ([RFC5538](https://tools.ietf.org/html/rfc5538))\n"}],"tag":"SearchResult"}]],["newtype",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/newtype/v4.0.0/src/Data/Newtype.purs","end":[30,44]},"score":25,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"Newtype","moduleName":"Data.Newtype","info":{"values":[{"superclasses":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}],"fundeps":[[["t"],["a"]]],"arguments":[["t",null],["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A type class for `newtype`s to enable convenient wrapping and unwrapping,\nand the use of the other functions in this module.\n\nThe compiler can derive instances of `Newtype` automatically:\n\n``` purescript\nnewtype EmailAddress = EmailAddress String\n\nderive instance newtypeEmailAddress :: Newtype EmailAddress _\n```\n\nNote that deriving for `Newtype` instances requires that the type be\ndefined as `newtype` rather than `data` declaration (even if the `data`\nstructurally fits the rules of a `newtype`), and the use of a wildcard for\nthe wrapped type.\n```\n"}],"tag":"SearchResult"}]],["newwithself",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/refs/v5.0.0-erl2/src/Effect/Ref.purs","end":[48,71]},"score":2,"packageInfo":{"values":["refs"],"tag":"Package"},"name":"newWithSelf","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new mutable reference containing a value that can refer to the\n`Ref` being created.\n"}],"tag":"SearchResult"}]],["nextevent",[{"values":[{"sourceSpan":{"start":[331,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[331,14]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"NextEvent","moduleName":"Pinto.GenStatem","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenStatem"],"Event"]},{"tag":"TypeVar","contents":"info"}]},{"tag":"TypeVar","contents":"internal"}]},{"tag":"TypeVar","contents":"timerName"}]},{"tag":"TypeVar","contents":"timerContent"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["global",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex/Flags.purs","end":[32,21]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"global","moduleName":"Data.String.Regex.Flags","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Only global flag set to true\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[40,11]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Global","moduleName":"Pinto.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enametoolong",[{"values":[{"sourceSpan":{"start":[55,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[55,17]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENametoolong","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enclosingmark",[{"values":[{"sourceSpan":{"start":[118,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[118,24]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"EnclosingMark","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["encodeformurlcomponent",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/js-uri/v2.0.0-erl1/src/JSURI.purs","end":[49,49]},"score":2,"packageInfo":{"values":["js-uri"],"tag":"Package"},"name":"encodeFormURLComponent","moduleName":"JSURI","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI-encode a string according to RFC3896, except with spaces encoded using\n'+' instead of '%20' to comply with application/x-www-form-urlencoded.\n\n```purs\n> encodeURIComponent \"abc ABC\"\nJust \"abc%20ABC\"\n\n> encodeFormURLComponent \"abc ABC\"\nJust \"abc+ABC\"\n```\n"}],"tag":"SearchResult"}]],["encodejson",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Encode/Class.purs","end":[13,26]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"EncodeJson","moduleName":"Erl.Data.Jsone.Encode.Class","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,3],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Encode/Class.purs","end":[13,26]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"encodeJson","moduleName":"Erl.Data.Jsone.Encode.Class","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Erl","Data","Jsone","Encode","Class"],"EncodeJson"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Data","Jsone","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["encodeuricomponent",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/js-uri/v2.0.0-erl1/src/JSURI.purs","end":[34,45]},"score":2,"packageInfo":{"values":["js-uri"],"tag":"Package"},"name":"encodeURIComponent","moduleName":"JSURI","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI-encode a string according to RFC3896. Implemented using JavaScript's\n`encodeURIComponent`.\n\n```purs\n> encodeURIComponent \"https://purescript.org\"\nJust \"https%3A%2F%2Fpurescript.org\"\n```\n\nEncoding a URI can fail with a `URIError` if the string contains malformed\ncharacters. If you are confident you are encoding a well-formed string then\nyou can run this function unsafely:\n\n```purs\nimport Partial.Unsafe (unsafePartial)\nimport Data.Maybe (fromJust)\n\nunsafeEncode :: String -> String\nunsafeEncode str = unsafePartial $ fromJust $ encodeURIComponent str\n```\n"}],"tag":"SearchResult"}]],["encoding",[{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[177,16]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Encoding","moduleName":"Erl.Kernel.File","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["end",[{"values":[{"sourceSpan":{"start":[254,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[254,24]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"end","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[140,54]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"end","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`end codec` will only suceed if `codec` succeeds and there are no\nadditional path segments remaining to be processed.\n\n```purescript\nparse (end segment) \"abc\" == Right \"abc\"\nparse (end segment) \"abc/def\" == Left (ExpectedEndOfPath \"def\")\n```\n"}],"tag":"SearchResult"}]],["endby",[{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Combinators.purs","end":[134,95]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"endBy","moduleName":"Text.Parsing.Parser.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sep",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse phrases delimited and terminated by a separator.\n"}],"tag":"SearchResult"}]],["endby1",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Combinators.purs","end":[130,104]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"endBy1","moduleName":"Text.Parsing.Parser.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["sep",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"sep"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse phrases delimited and terminated by a separator, requiring at least one match.\n"}],"tag":"SearchResult"}]],["endo",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid/Endo.purs","end":[15,32]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Endo","moduleName":"Data.Monoid.Endo","info":{"values":[{"typeArguments":[["c",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid and semigroup for category endomorphisms.\n\nWhen `c` is instantiated with `->` this composes functions of type\n`a -> a`:\n\n``` purescript\nEndo f <> Endo g == Endo (f <<< g)\n(mempty :: Endo _) == Endo identity\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,18],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid/Endo.purs","end":[15,32]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Endo","moduleName":"Data.Monoid.Endo","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["endofpath",[{"values":[{"sourceSpan":{"start":[61,3],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[61,14]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"EndOfPath","moduleName":"Routing.Duplex.Parser","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["endspan",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[33,49]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"endSpan","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enetdown",[{"values":[{"sourceSpan":{"start":[150,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[150,13]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENetdown","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enetunreach",[{"values":[{"sourceSpan":{"start":[151,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[151,16]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENetunreach","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enfile",[{"values":[{"sourceSpan":{"start":[56,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[56,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENfile","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["engineref",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/erl-otp-types/v0.0.2/src/Erl/Otp/Types/Crypto.purs","end":[12,38]},"score":0,"packageInfo":{"values":["erl-otp-types"],"tag":"Package"},"name":"EngineRef","moduleName":"Erl.Otp.Types.Crypto","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["enobufs",[{"values":[{"sourceSpan":{"start":[57,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[57,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENobufs","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enodev",[{"values":[{"sourceSpan":{"start":[58,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[58,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENodev","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enoent",[{"values":[{"sourceSpan":{"start":[61,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[61,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENoent","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enolck",[{"values":[{"sourceSpan":{"start":[59,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[59,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENolck","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enolink",[{"values":[{"sourceSpan":{"start":[60,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[60,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENolink","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enomem",[{"values":[{"sourceSpan":{"start":[62,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[62,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENomem","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enopkg",[{"values":[{"sourceSpan":{"start":[152,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[152,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENopkg","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enoprotoopt",[{"values":[{"sourceSpan":{"start":[153,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[153,16]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENoprotoopt","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enospc",[{"values":[{"sourceSpan":{"start":[63,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[63,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENospc","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enosr",[{"values":[{"sourceSpan":{"start":[64,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[64,10]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENosr","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enostr",[{"values":[{"sourceSpan":{"start":[65,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[65,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENostr","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enosys",[{"values":[{"sourceSpan":{"start":[66,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[66,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENosys","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enotblk",[{"values":[{"sourceSpan":{"start":[67,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[67,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENotblk","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enotconn",[{"values":[{"sourceSpan":{"start":[154,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[154,13]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENotconn","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enotdir",[{"values":[{"sourceSpan":{"start":[68,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[68,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENotdir","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enotsock",[{"values":[{"sourceSpan":{"start":[156,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[156,13]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENotsock","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enotsup",[{"values":[{"sourceSpan":{"start":[69,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[69,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENotsup","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enotty",[{"values":[{"sourceSpan":{"start":[155,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[155,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENotty","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ensureallstarted",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Application.purs","end":[13,64]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ensureAllStarted","moduleName":"Erl.Kernel.Application","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]}}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ensuredir",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-file/v0.0.3/src/Erl/FileLib.purs","end":[16,51]},"score":0,"packageInfo":{"values":["erl-file"],"tag":"Package"},"name":"ensureDir","moduleName":"Erl.FileLib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Erl","StandardResult"],"Reason"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enterfn",[{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[299,138]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"EnterFn","moduleName":"Pinto.GenStatem","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"stateId"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"stateId"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"commonData"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenStatem"],"StateEnterT"]},{"tag":"TypeVar","contents":"info"}]},{"tag":"TypeVar","contents":"internal"}]},{"tag":"TypeVar","contents":"timerName"}]},{"tag":"TypeVar","contents":"timerContent"}]},{"tag":"TypeVar","contents":"commonData"}]},{"tag":"TypeVar","contents":"stateId"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenStatem"],"StateEnterResult"]},{"tag":"TypeVar","contents":"timerName"}]},{"tag":"TypeVar","contents":"timerContent"}]},{"tag":"TypeVar","contents":"commonData"}]}}]}]}]}]}]},"arguments":[["info",null],["internal",null],["timerName",null],["timerContent",null],["commonData",null],["stateId",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["enum",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[52,23]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"Enum","moduleName":"Data.Enum","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Type class for enumerations.\n\nLaws:\n- Successor: `all (a < _) (succ a)`\n- Predecessor: `all (_ < a) (pred a)`\n- Succ retracts pred: `pred >=> succ >=> pred = pred`\n- Pred retracts succ: `succ >=> pred >=> succ = succ`\n- Non-skipping succ: `b <= a || any (_ <= b) (succ a)`\n- Non-skipping pred: `a <= b || any (b <= _) (pred a)`\n\nThe retraction laws can intuitively be understood as saying that `succ` is\nthe opposite of `pred`; if you apply `succ` and then `pred` to something,\nyou should end up with what you started with (although of course this\ndoesn't apply if you tried to `succ` the last value in an enumeration and\ntherefore got `Nothing` out).\n\nThe non-skipping laws can intuitively be understood as saying that `succ`\nshouldn't skip over any elements of your type. For example, _without_ the\nnon-skipping laws, it would be permissible to write an `Enum Int` instance\nwhere `succ x = Just (x+2)`, and similarly `pred x = Just (x-2)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[193,41]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"enum","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator for a finite enumeration.\n`toEnum i` must be well-behaved:\nIt must return a value wrapped in Just for all Ints between\n`fromEnum bottom` and `fromEnum top`.\n"}],"tag":"SearchResult"}]],["enumfromthento",[{"values":[{"sourceSpan":{"start":[208,1],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[208,95]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"enumFromThenTo","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a sequence of elements from the first value, taking steps\naccording to the difference between the first and second value, up to\n(but not exceeding) the third value.\n\n``` purescript\nenumFromThenTo 0 2 6 = [0, 2, 4, 6]\nenumFromThenTo 0 3 5 = [0, 3]\n```\n\nNote that there is no `BoundedEnum` instance for integers, they're just\nbeing used here for illustrative purposes to help clarify the behaviour.\n\nThe example shows `Array` return values, but the result can be any type\nwith an `Unfoldable1` instance.\n"}],"tag":"SearchResult"}]],["enumfromto",[{"values":[{"sourceSpan":{"start":[185,1],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[185,67]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"enumFromTo","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["u",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"u"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a contiguous sequence of elements from the first value to the\nsecond value (inclusive).\n\n``` purescript\nenumFromTo 0 3 = [0, 1, 2, 3]\nenumFromTo 'c' 'a' = ['c', 'b', 'a']\n```\n\nThe example shows `Array` return values, but the result can be any type\nwith an `Unfoldable1` instance.\n"}],"tag":"SearchResult"}]],["enumsumrep",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/simple-json-generics/v0.1.0/src/Simple/JSON/Generics/EnumSumRep.purs","end":[16,17]},"score":0,"packageInfo":{"values":["simple-json-generics"],"tag":"Package"},"name":"enumSumRep","moduleName":"Simple.JSON.Generics.EnumSumRep","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["rep",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"rep"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Simple","JSON","Generics","EnumSumRep"],"GenericEnumSumRep"],"constraintArgs":[{"tag":"TypeVar","contents":"rep"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign"],"F"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["env",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env.purs","end":[24,29]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Env","moduleName":"Control.Comonad.Env","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["e",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Env` comonad is a synonym for the `EnvT` comonad transformer, applied\nto the `Identity` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env.purs","end":[39,37]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"env","moduleName":"Control.Comonad.Env","info":{"values":[{"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a value in context in the `Env` comonad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy.purs","end":[75,28]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Env","moduleName":"Erl.Cowboy","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Map"],"Map"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["envt",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env/Trans.purs","end":[22,42]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"EnvT","moduleName":"Control.Comonad.Env.Trans","info":{"values":[{"typeArguments":[["e",null],["w",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The environment comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad with a _global environment_ of\ntype `e`.\n\nThe `ComonadEnv` type class describes the operations supported by this comonad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,20],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env/Trans.purs","end":[22,42]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"EnvT","moduleName":"Control.Comonad.Env.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enxio",[{"values":[{"sourceSpan":{"start":[70,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[70,10]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ENxio","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["doc",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Doc","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Doc` is the kind of type-level documents.\n\nThis kind is used with the `Fail` and `Warn` type classes.\nBuild up a `Doc` with `Text`, `Quote`, `QuoteLabel`, `Beside`, and `Above`.\n"}],"tag":"SearchResult"}]],["done",[{"values":[{"sourceSpan":{"start":[72,3],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[72,9]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Done","moduleName":"Control.Monad.List.Trans","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,24],"name":".spago/tailrec/v5.0.1-erl1/src/Control/Monad/Rec/Class.purs","end":[25,30]},"score":8,"packageInfo":{"values":["tailrec"],"tag":"Package"},"name":"Done","moduleName":"Control.Monad.Rec.Class","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"b"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/free/v6.0.1/src/Control/Monad/Trampoline.purs","end":[24,36]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"done","moduleName":"Control.Monad.Trampoline","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return a value immediately\n"}],"tag":"SearchResult"}]],["dotall",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex/Flags.purs","end":[87,21]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dotAll","moduleName":"Data.String.Regex.Flags","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Only dotAll flag set to true\n"}],"tag":"SearchResult"}]],["dotescaper",[{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Printer.purs","end":[172,22]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"dotEscaper","moduleName":"Pathy.Printer","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Pathy","Printer"],"Escaper"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An escaper that replaces names `\".\"` and `\"..\"` with `\"$dot\"` and\n`\"$dot$dot\"`.\n"}],"tag":"SearchResult"}]],["down",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/orders/v5.0.0/src/Data/Ord/Down.purs","end":[12,24]},"score":1,"packageInfo":{"values":["orders"],"tag":"Package"},"name":"Down","moduleName":"Data.Ord.Down","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype wrapper which provides a reversed `Ord` instance. For example:\n\n    sortBy (comparing Down) [1,2,3] = [3,2,1]\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,16],"name":".spago/orders/v5.0.0/src/Data/Ord/Down.purs","end":[12,24]},"score":1,"packageInfo":{"values":["orders"],"tag":"Package"},"name":"Down","moduleName":"Data.Ord.Down","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[613,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[613,9]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Down","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[41,9]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Down","moduleName":"Pinto.Monitor","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","MessageRouting"],"RouterRef"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorRef"]}]}},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorType"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorObject"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorInfo"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["downfrom",[{"values":[{"sourceSpan":{"start":[232,1],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[232,59]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"downFrom","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["u",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"u"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Produces all predecessors of an `Enum` value, excluding the start value.\n"}],"tag":"SearchResult"}]],["downfromincluding",[{"values":[{"sourceSpan":{"start":[239,1],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[239,69]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"downFromIncluding","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["u",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"u"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Produces all predecessors of an `Enum` value, including the start value.\n\n`downFromIncluding top` will return all values in an `Enum`, in reverse\norder.\n"}],"tag":"SearchResult"}]],["downprotocol",[{"values":[{"sourceSpan":{"start":[324,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[328,11]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"DownProtocol","moduleName":"Erl.Gun","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["downreason",[{"values":[{"sourceSpan":{"start":[330,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[331,12]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"DownReason","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[113,22]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"DownReason","moduleName":"Pinto.GenStatem","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["arbitrary",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[53,21]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Arbitrary","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Arbitrary` class represents those types whose values can be\n_randomly-generated_.\n\n`arbitrary` uses the `Gen` monad to express a random generator for\nthe type `t`. Combinators in the `Test.QuickCheck.Gen`\nmodule can be used to construct random generators.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,3],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[53,21]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"arbitrary","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Test","QuickCheck","Arbitrary"],"Arbitrary"],"type":{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck","Arbitrary"],"Arbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"t"}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["arbitrarygenericsum",[{"values":[{"sourceSpan":{"start":[199,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[200,39]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"ArbitraryGenericSum","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"To be able to evenly distribute over chains of Sum types we build up\na collection of generators and choose between.  Each right component\nof a Sum is either a Constructor or another Sum.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[200,3],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[200,39]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"arbitraryGenericSum","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Test","QuickCheck","Arbitrary"],"ArbitraryGenericSum"],"type":{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck","Arbitrary"],"ArbitraryGenericSum"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"t"}]}}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["arbitraryrecord",[{"values":[{"sourceSpan":{"start":[243,3],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[243,70]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"arbitraryRecord","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"typeClassArguments":[["list",null],["row",null]],"typeClass":[["Test","QuickCheck","Arbitrary"],"ArbitraryRowList"],"type":{"tag":"ForAll","contents":["list",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck","Arbitrary"],"ArbitraryRowList"],"constraintArgs":[{"tag":"TypeVar","contents":"list"},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"list"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["arbitraryrowlist",[{"values":[{"sourceSpan":{"start":[242,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[243,70]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"ArbitraryRowList","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"superclasses":[],"fundeps":[[["list"],["row"]]],"arguments":[["list",null],["row",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["argument",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[49,32]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Argument","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for an argument in a data constructor.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,20],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[49,32]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Argument","moduleName":"Data.Generic.Rep","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["arr",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor.purs","end":[34,69]},"score":6,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"arr","moduleName":"Data.Profunctor","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Category"],"Category"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lift a pure function into any `Profunctor` which is also a `Category`.\n"}],"tag":"SearchResult"}]],["array",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Array","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"An Array: a data structure supporting efficient random access. In\nthe JavaScript backend, values of this type are represented as JavaScript\nArrays at runtime.\n\nConstruct values using literals:\n\n    x = [1,2,3,4,5] :: Array Int\n"}],"tag":"SearchResult"}]],["arrayof",[{"values":[{"sourceSpan":{"start":[176,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[176,44]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"arrayOf","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which generates an array of random values.\n"}],"tag":"SearchResult"}]],["arrayof1",[{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[182,53]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"arrayOf1","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which generates a non-empty array of random values.\n"}],"tag":"SearchResult"}]]]
// This file was generated by purescript-docs-search.
window.DocsSearchIndex["10"] = [["|$|",[{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[95,27]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"type (|$|)","moduleName":"Erl.Untagged.Union","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["octal",[{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[171,15]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"octal","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The base-8 system.\n"}],"tag":"SearchResult"}]],["octdigit",[{"values":[{"sourceSpan":{"start":[800,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Token.purs","end":[800,56]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"octDigit","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an octal digit.  Matches any char that satisfies `Data.CodePoint.Unicode.isOctDigit`.\n"}],"tag":"SearchResult"}]],["octdigittoint",[{"values":[{"sourceSpan":{"start":[630,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[630,40]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"octDigitToInt","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a single digit `Char` to the corresponding `Just Int` if its argument\nsatisfies `isOctDigit` (one of `0..7`). Anything else converts to `Nothing`\n\n```\n>>> import Data.Traversable\n\n>>> traverse octDigitToInt ['0','1','2','3','4','5','6','7']\n(Just [0,1,2,3,4,5,6,7])\n\n>>> octDigitToInt '8'\nNothing\n```\n"}],"tag":"SearchResult"}]],["octet",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[57,14]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Octet","moduleName":"Erl.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Octet","moduleName":"Erl.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[69,28]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"octet","moduleName":"Erl.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Octet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["october",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"October","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["n",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"N","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["measure",[{"values":[{"sourceSpan":{"start":[46,3],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Internal.purs","end":[46,20]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"measure","moduleName":"Data.Sequence.Internal","info":{"values":[{"typeClassArguments":[["a",null],["v",null]],"typeClass":[["Data","Sequence","Internal"],"Measured"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"v"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["measured",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Internal.purs","end":[46,20]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Measured","moduleName":"Data.Sequence.Internal","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null],["v",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["mediatype",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType.purs","end":[11,37]},"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"MediaType","moduleName":"Data.MediaType","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A media type (also known as a **Multipurpose Internet Mail Extensions or\nMIME type**) is a standard that indicates the nature and format of a\ndocument, file, or assortment of bytes. It is defined and standardized in\nIETF's [RFC 6838](https://tools.ietf.org/html/rfc6838).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"MediaType","moduleName":"Data.MediaType","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["member",[{"values":[{"sourceSpan":{"start":[419,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[419,55]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"member","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a key is a member of a map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set/NonEmpty.purs","end":[108,59]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"member","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a value is a member of a set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set.purs","end":[116,51]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"member","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a value is a member of a set\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/erl-maps/v0.5.0/src/Erl/Data/Map.purs","end":[99,61]},"score":0,"packageInfo":{"values":["erl-maps"],"tag":"Package"},"name":"member","moduleName":"Erl.Data.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempty",[{"values":[{"sourceSpan":{"start":[45,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid.purs","end":[45,14]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"mempty","moduleName":"Data.Monoid","info":{"values":[{"typeClassArguments":[["m",null]],"typeClass":[["Data","Monoid"],"Monoid"],"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempty_",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[11,33]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"mempty_","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["memptyrecord",[{"values":[{"sourceSpan":{"start":[102,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid.purs","end":[102,67]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"memptyRecord","moduleName":"Data.Monoid","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Monoid"],"MonoidRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"MonoidRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["merge",[{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[164,61]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"merge","moduleName":"Data.Sequence.Ordered","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(m*log(n/m)), where m and n are the lengths of the longer and shorter\nsequences respectively. Create a new sequence containing every element\nin both of the given sequences.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[393,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[393,55]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"merge","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/record/v3.0.0-erl1/src/Record/Builder.purs","end":[121,37]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"merge","moduleName":"Record.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r4",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"TypeVar","contents":"r3"},{"tag":"TypeVar","contents":"r4"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r4"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Build by merging existing fields from another record, taking precedence\nin the case of overlaps.\n\nFor example:\n\n```purescript\nbuild (merge { x: 1, y: \"y\" }) { y: 2, z: true }\n :: { x :: Int, y :: String, z :: Boolean }\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[162,1],"name":".spago/record/v3.0.0-erl1/src/Record.purs","end":[168,15]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"merge","moduleName":"Record","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r4",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"TypeVar","contents":"r3"},{"tag":"TypeVar","contents":"r4"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r4"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Merges two records with the first record's labels taking precedence in the\ncase of overlaps.\n\nFor example:\n\n```purescript\nmerge { x: 1, y: \"y\" } { y: 2, z: true }\n :: { x :: Int, y :: String, z :: Boolean }\n```\n"}],"tag":"SearchResult"}]],["mergeby",[{"values":[{"sourceSpan":{"start":[396,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[396,72]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"mergeBy","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["meridiem",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"Meridiem","moduleName":"Data.Formatter.DateTime","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[223,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[223,24]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"Meridiem","moduleName":"Data.Formatter.DateTime","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["message",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/exceptions/v5.0.0-erl1/src/Effect/Exception.purs","end":[35,42]},"score":5,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"message","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the error message from a JavaScript error\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Message","moduleName":"Erl.Gun.WsGun","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Gun","WsGun"],"WebSocket"]},{"tag":"TypeVar","contents":"clientMsg"}]},{"tag":"TypeVar","contents":"serverMsg"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Gun","WsGun"],"WebSocketPayload"]},{"tag":"TypeVar","contents":"serverMsg"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["meter",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[35,34]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Meter","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["metername",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[58,37]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"MeterName","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"MeterName","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["meterversion",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[62,43]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"MeterVersion","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"MeterVersion","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["method",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[80,39]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"method","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[348,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[349,11]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Method","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["lfor",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Bitraversable.purs","end":[126,15]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"lfor","moduleName":"Data.Bitraversable","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flag",[{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[209,38]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"flag","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[39,42]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"flag","moduleName":"Routing.Duplex.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[181,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[181,52]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"flag","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Consumes or prints a query flag (i.e. parameter without value).\n**Note:** that this combinator ignores the value of the parameter. It only cares about its presence/absence.\nPresence is interpreted as `true`, absence as `false`.\n\n```purescript\nparse (flag (param \"x\")) \"?x\"        == Right true\nparse (flag (param \"x\")) \"?x=true\",  == Right true\nparse (flag (param \"x\")) \"?x=false\", == Right true -- value is ignored, what matters is presence of the parameter x\nparse (flag (param \"x\")) \"?y\",       == Right false\n```\n"}],"tag":"SearchResult"}]],["flags",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex.purs","end":[52,29]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"flags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `RegexFlags` used to construct the given `Regex`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[106,6]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Flags","moduleName":"Pinto.Supervisor","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["strategy",{"tag":"TypeConstructor","contents":[["Pinto","Supervisor"],"Strategy"]},{"tag":"RCons","contents":["intensity",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["period",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Seconds"]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The flags for a supervision tree, mapping onto sup_flags from the underlying supervisor API\n"}],"tag":"SearchResult"}]],["flap",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Functor.purs","end":[97,58]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"flap","moduleName":"Data.Functor","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a value in a computational context to a value in no context.\n\nGeneralizes `flip`.\n\n```purescript\nlongEnough :: String -> Bool\nhasSymbol :: String -> Bool\nhasDigit :: String -> Bool\npassword :: String\n\nvalidate :: String -> Array Bool\nvalidate = flap [longEnough, hasSymbol, hasDigit]\n```\n\n```purescript\nflap (-) 3 4 == 1\nthreeve <$> Just 1 <@> 'a' <*> Just true == Just (threeve 1 'a' true)\n```\n"}],"tag":"SearchResult"}]],["flip",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Function.purs","end":[26,51]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"flip","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given a function that takes two arguments, applies the arguments\nto the function in a swapped order.\n\n```purescript\nflip append \"1\" \"2\" == append \"2\" \"1\" == \"21\"\n\nconst 1 \"two\" == 1\n\nflip const 1 \"two\" == const \"two\" 1 == \"two\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Flip.purs","end":[14,34]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Flip","moduleName":"Data.Functor.Flip","info":{"values":[{"typeArguments":[["p",null],["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Flips the order of the type arguments of a `Bifunctor`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Flip","moduleName":"Data.Functor.Flip","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/record/v3.0.0-erl1/src/Record/Builder.purs","end":[56,120]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"flip","moduleName":"Record.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r3"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r3"}]}}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flip a function of one argument returning a builder.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Function.purs","end":[28,20]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"FLIP","moduleName":"Type.Function","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",null],["f",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Reversed polymorphic Type application\n\nFor example...\n```\nFLIP Int Maybe == Maybe Int\n```\nNote: an infix for FLIP (e.g. `Int # Maybe`) is not allowed.\nBefore the `0.14.0` release, we used `# Type` to refer to a row of types.\nIn  the `0.14.0` release, the `# Type` syntax was deprecated,\nand `Row Type` is the correct way to do this now. To help mitigate\nbreakage, `# Type` was made an alias to `Row Type`. When the `# Type`\nsyntax is fully dropped in a later language release, we can then\nsupport the infix version: `Int # Maybe`.\n"}],"tag":"SearchResult"}]],["flipped",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Iso.purs","end":[54,91]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"flipped","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"f"}]}]}}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["float",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/Counter.purs","end":[16,74]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"float","moduleName":"OpenTelemetry.Metrics.Counter","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics","Counter"],"Definition"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/SumObserver.purs","end":[16,74]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"float","moduleName":"OpenTelemetry.Metrics.SumObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics","SumObserver"],"Definition"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/UpDownCounter.purs","end":[16,74]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"float","moduleName":"OpenTelemetry.Metrics.UpDownCounter","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics","UpDownCounter"],"Definition"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/UpDownSumObserver.purs","end":[16,74]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"float","moduleName":"OpenTelemetry.Metrics.UpDownSumObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics","UpDownSumObserver"],"Definition"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/ValueObserver.purs","end":[16,74]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"float","moduleName":"OpenTelemetry.Metrics.ValueObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics","ValueObserver"],"Definition"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/ValueRecorder.purs","end":[11,74]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"float","moduleName":"OpenTelemetry.Metrics.ValueRecorder","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"InstrumentName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics","ValueRecorder"],"Definition"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["floor",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[48,23]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"floor","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\nless than the argument. Values outside the `Int` range are clamped, `NaN`\nand `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[37,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"floor","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the largest integer not larger than the argument.\n"}],"tag":"SearchResult"}]],["flushconnection",[{"values":[{"sourceSpan":{"start":[689,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[689,42]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"flushConnection","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flushstream",[{"values":[{"sourceSpan":{"start":[694,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[694,40]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"flushStream","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emergency",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[141,108]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"emergency","moduleName":"Logger","info":{"values":[{"type":{"tag":"ForAll","contents":["metadata",{"tag":"ForAll","contents":["report",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"MinimalMetadata"]},{"tag":"TypeVar","contents":"metadata"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"report"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"Emergency","moduleName":"Logger","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emergency'",[{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[165,120]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"emergency'","moduleName":"Logger","info":{"values":[{"type":{"tag":"ForAll","contents":["metadata",{"tag":"ForAll","contents":["report",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Logger"],"Location"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"MinimalMetadata"]},{"tag":"TypeVar","contents":"metadata"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"report"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emfile",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EMfile","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emlink",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EMlink","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["empty",[{"values":[{"sourceSpan":{"start":[24,3],"name":".spago/control/v5.0.0-erl1/src/Control/Plus.purs","end":[24,25]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"empty","moduleName":"Control.Plus","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Control","Plus"],"Plus"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatList.purs","end":[51,29]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"empty","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an empty catenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatQueue.purs","end":[44,30]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"empty","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an empty queue.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Empty","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[181,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[181,29]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"empty","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[75,28]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"empty","moduleName":"Data.Sequence.Ordered","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[173,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[173,25]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"empty","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A sequence with no elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set.purs","end":[90,25]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"empty","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty set\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[16,16]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"empty","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/erl-maps/v0.5.0/src/Erl/Data/Map.purs","end":[52,44]},"score":0,"packageInfo":{"values":["erl-maps"],"tag":"Package"},"name":"empty","moduleName":"Erl.Data.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Map"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/erl-queue/v0.0.2/src/Erl/Data/Queue/Types.purs","end":[45,42]},"score":0,"packageInfo":{"values":["erl-queue"],"tag":"Package"},"name":"empty","moduleName":"Erl.Data.Queue.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Queue","Types"],"Queue"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/erl-test-eunit/v0.0.4/src/Erl/Test/EUnit.purs","end":[66,19]},"score":0,"packageInfo":{"values":["erl-test-eunit"],"tag":"Package"},"name":"empty","moduleName":"Erl.Test.EUnit","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSuite"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptydef",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Language.purs","end":[67,24]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"emptyDef","moduleName":"Text.Parsing.Parser.Language","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"LanguageDef"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This is the most minimal token definition. It is recommended to use\nthis definition as the basis for other definitions. `emptyDef` has\nno reserved names or operators, is case sensitive and doesn't accept\ncomments, identifiers or operators.\n"}],"tag":"SearchResult"}]],["emptyhandler",[{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[294,80]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"emptyHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"InitHandler"]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptyroutestate",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Types.purs","end":[13,30]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"emptyRouteState","moduleName":"Routing.Duplex.Types","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptyset",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/lists/v6.0.1/src/Data/List/Internal.purs","end":[12,28]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"emptySet","moduleName":"Data.List.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Internal"],"Set"]},{"tag":"TypeVar","contents":"k"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emsgsize",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EMsgsize","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emultihop",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EMultihop","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dns",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[76,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"dns","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Domain Name System ([RFC4501](https://tools.ietf.org/html/rfc4501))\n"}],"tag":"SearchResult"}]],["coap",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[36,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"coap","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"coap ([RFC7252](https://tools.ietf.org/html/rfc7252))\n"}],"tag":"SearchResult"}]],["coaps",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[48,15]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"coaps","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"coaps ([RFC7252](https://tools.ietf.org/html/rfc7252))\n"}],"tag":"SearchResult"}]],["coapstcp",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[52,18]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"coapstcp","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"coaps+tcp ([RFC8323](https://tools.ietf.org/html/rfc8323))\n"}],"tag":"SearchResult"}]],["coapsws",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[56,17]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"coapsws","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"coaps+ws ([RFC8323](https://tools.ietf.org/html/rfc8323))\n"}],"tag":"SearchResult"}]],["coaptcp",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[40,17]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"coaptcp","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"coap+tcp ([RFC8323](https://tools.ietf.org/html/rfc8323))\n"}],"tag":"SearchResult"}]],["coapws",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[44,16]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"coapws","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"coap+ws ([RFC8323](https://tools.ietf.org/html/rfc8323))\n"}],"tag":"SearchResult"}]],["coarbitrary",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[64,47]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Coarbitrary","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Coarbitrary` class represents types which appear on the left of\nan `Arbitrary` function arrow.\n\nTo construct an `Arbitrary` instance for the type `a -> b`, we need to\nuse the input of type `a` to _perturb_ a random generator for `b`. This\nis the role of the `coarbitrary` function.\n\n`Coarbitrary` instances can be written using the `perturbGen` function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,3],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Arbitrary.purs","end":[64,47]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"coarbitrary","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cochoice",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor/Cochoice.purs","end":[9,64]},"score":6,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Cochoice","moduleName":"Data.Profunctor.Cochoice","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]}],"fundeps":[],"arguments":[["p",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Cochoice` class provides the dual operations of the `Choice` class.\n"}],"tag":"SearchResult"}]],["codepoint",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[47,34]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"CodePoint","moduleName":"Data.String.CodePoints","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"CodePoint is an Int bounded between 0 and 0x10FFFF, corresponding to\nUnicode code points.\n"}],"tag":"SearchResult"}]],["codepointat",[{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[160,48]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointAt","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the first code point of the string after dropping the given number\nof code points from the beginning, if there is such a code point. Operates\nin constant space and in time linear to the given index.\n\n```purescript\n>>> codePointAt 1 \"𝐀𝐀𝐀𝐀\"\nJust (CodePoint 0x1D400) -- represents \"𝐀\"\n-- compare to Data.String:\n>>> charAt 1 \"𝐀𝐀𝐀𝐀\"\nJust '�'\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[78,56]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointAt","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["codepointfromchar",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[77,39]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointFromChar","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a CodePoint from a given Char.\n\n```purescript\n>>> codePointFromChar 'B'\nCodePoint 0x42 -- represents 'B'\n```\n\n"}],"tag":"SearchResult"}]],["coerce",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/contravariant/v5.0.0/src/Data/Functor/Contravariant.purs","end":[27,67]},"score":1,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"coerce","moduleName":"Data.Functor.Contravariant","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor","Contravariant"],"Contravariant"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/safe-coerce/v1.0.0/src/Safe/Coerce.purs","end":[26,46]},"score":1,"packageInfo":{"values":["safe-coerce"],"tag":"Package"},"name":"coerce","moduleName":"Safe.Coerce","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Coerce a value of one type to a value of some other type, without changing\nits runtime representation. This function behaves identically to\n`unsafeCoerce` at runtime. Unlike `unsafeCoerce`, it is safe, because the\n`Coercible` constraint prevents any use of this function from compiling\nunless the compiler can prove that the two types have the same runtime\nrepresentation.\n\nOne application for this function is to avoid doing work that you know is a\nno-op because of newtypes. For example, if you have an `Array (Conj a)` and you\nwant an `Array (Disj a)`, you could do `Data.Array.map (un Conj >>> Disj)`, but\nthis performs an unnecessary traversal of the array, with O(n) cost.\n`coerce` accomplishes the same with only O(1) cost:\n\n```purescript\nmapConjToDisj :: forall a. Array (Conj a) -> Array (Disj a)\nmapConjToDisj = coerce\n```\n"}],"tag":"SearchResult"}]],["coercible",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Coercible","moduleName":"Prim.Coerce","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",{"tag":"TypeVar","contents":"k"}],["b",{"tag":"TypeVar","contents":"k"}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Coercible is a two-parameter type class that has instances for types `a`\nand `b` if the compiler can infer that they have the same representation.\nCoercible constraints are solved according to the following rules:\n\n* _reflexivity_, any type has the same representation as itself:\n`Coercible a a` holds.\n\n* _symmetry_, if a type `a` can be coerced to some other type `b`, then `b`\ncan also be coerced back to `a`: `Coercible a b` implies `Coercible b a`.\n\n* _transitivity_, if a type `a` can be coerced to some other type `b` which\ncan be coerced to some other type `c`, then `a` can also be coerced to `c`:\n`Coercible a b` and `Coercible b c` imply `Coercible a c`.\n\n* Newtypes can be freely wrapped and unwrapped when their constructor is\nin scope:\n\n      newtype Age = Age Int\n\n`Coercible Int Age` and `Coercible Age Int` hold since `Age` has the same\nruntime representation than `Int`.\n\nNewtype constructors have to be in scope to preserve abstraction. It's\ncommon to declare a newtype to encode some invariants (non emptiness of\narrays with `Data.Array.NonEmpty.NonEmptyArray` for example), hide its\nconstructor and export smart constructors instead. Without this restriction,\nthe guarantees provided by such newtypes would be void.\n\n* If none of the above are applicable, two types of kind `Type` may be\ncoercible, but only if their heads are the same. For example,\n`Coercible (Maybe a) (Either a b)` does not hold because `Maybe` and\n`Either` are different. Those types don't share a common runtime\nrepresentation so coercing between them would be unsafe. In addition their\narguments may need to be identical or coercible, depending on the _roles_\nof the head's type parameters. Roles are documented in [the PureScript\nlanguage reference](https://github.com/purescript/documentation/blob/master/language/Roles.md).\n\nCoercible being polykinded, we can also coerce more than types of kind `Type`:\n\n* Rows are coercible when they have the same labels, when the corresponding\npairs of types are coercible and when their tails are coercible:\n`Coercible ( label :: a | r ) ( label :: b | s )` holds when\n`Coercible a b` and `Coercible r s` do. Closed rows cannot be coerced to\nopen rows.\n\n* Higher kinded types are coercible if they are coercible when fully\nsaturated: `Coercible (f :: _ -> Type) (g :: _ -> Type)` holds when\n`Coercible (f a) (g a)` does.\n\nThis rule may seem puzzling since there is no term of type `_ -> Type` to\napply `coerce` to, but it is necessary when coercing types with higher\nkinded parameters.\n"}],"tag":"SearchResult"}]],["cofree",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/free/v6.0.1/src/Control/Comonad/Cofree.purs","end":[38,62]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Cofree","moduleName":"Control.Comonad.Cofree","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Cofree` `Comonad` for a functor.\n\nA value of type `Cofree f a` consists of an `f`-branching\ntree, annotated with labels of type `a`.\n\nThe `Comonad` instance supports _redecoration_, recomputing\nlabels from the local context.\n"}],"tag":"SearchResult"}]],["collect",[{"values":[{"sourceSpan":{"start":[26,3],"name":".spago/distributive/v5.0.0/src/Data/Distributive.purs","end":[26,69]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"collect","moduleName":"Data.Distributive","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Distributive"],"Distributive"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[296,1],"name":".spago/newtype/v4.0.0/src/Data/Newtype.purs","end":[303,7]},"score":25,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"collect","moduleName":"Data.Newtype","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeVar","contents":"t"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to the function from the `Distributive` class, but operating within\na newtype instead.\n"}],"tag":"SearchResult"}]],["collectdefault",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/distributive/v5.0.0/src/Data/Distributive.purs","end":[56,13]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"collectDefault","moduleName":"Data.Distributive","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `collect`, based on `distribute`.\n"}],"tag":"SearchResult"}]],["collectof",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Grate.purs","end":[44,97]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"collectOf","moduleName":"Data.Lens.Grate","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Costar"],"Costar"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["collecttests",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/erl-test-eunit/v0.0.4/src/Erl/Test/EUnit.purs","end":[81,42]},"score":0,"packageInfo":{"values":["erl-test-eunit"],"tag":"Package"},"name":"collectTests","moduleName":"Erl.Test.EUnit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSuite"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["command",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"Command","moduleName":"Logger","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["commandmetadata",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[115,105]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"commandMetadata","moduleName":"Logger","info":{"values":[{"type":{"tag":"ForAll","contents":["commandType",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"commandType"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"CommandMetadata"]},{"tag":"TypeVar","contents":"commandType"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[105,69]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"CommandMetadata","moduleName":"Logger","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"MinimalMetadata"]},{"tag":"RCons","contents":["command",{"tag":"TypeVar","contents":"commandType"},{"tag":"RCons","contents":["text",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["commandType",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["commonaction",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"CommonAction","moduleName":"Pinto.GenStatem","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenStatem"],"CommonAction"]},{"tag":"TypeVar","contents":"timerName"}]},{"tag":"TypeVar","contents":"timerContent"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[342,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[346,22]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"CommonAction","moduleName":"Pinto.GenStatem","info":{"values":[{"typeArguments":[["timerName",null],["timerContent",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["commonoptions",[{"values":[{"sourceSpan":{"start":[348,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[368,6]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"CommonOptions","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"RCons","contents":["active",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"SocketActive"]}]},{"tag":"RCons","contents":["buffer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["dontroute",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["header",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["high_msgq_watermark",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["low_msgq_watermark",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["priority",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["raw",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Raw"]}]}}]},{"tag":"RCons","contents":["recbuf",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["reuseaddr",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["sndbuf",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["tos",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["tclass",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["ttl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["recvtos",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["recvtclass",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["recvttl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["ipv6_v6only",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[660,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[689,6]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"CommonOptions","moduleName":"Erl.Ssl","info":{"values":[{"type":{"tag":"RCons","contents":["protocol",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"Protocol"]}]},{"tag":"RCons","contents":["handshake",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"HandshakeCompletion"]}]},{"tag":"RCons","contents":["cert",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Otp","Types","PublicKey"],"DerEncoded"]}]}}]},{"tag":"RCons","contents":["certfile",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","File"],"FileName"]}]},{"tag":"RCons","contents":["key",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"Key"]}]},{"tag":"RCons","contents":["keyfile",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","File"],"FileName"]}]},{"tag":"RCons","contents":["password",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"KeyPassword"]}]},{"tag":"RCons","contents":["ciphers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"Ciphers"]}]},{"tag":"RCons","contents":["eccs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"NamedCurve"]}]}}]},{"tag":"RCons","contents":["signature_algs_cert",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"SignScheme"]}]}}]},{"tag":"RCons","contents":["supported_groups",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"Group"]}]}}]},{"tag":"RCons","contents":["secure_renegotiate",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["keep_secrets",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["depth",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["crl_check",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"CrlCheck"]}]},{"tag":"RCons","contents":["max_handshake_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["versions",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ProtocolVersion"]}]}}]},{"tag":"RCons","contents":["log_level",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"LogLevel"]}]},{"tag":"RCons","contents":["hibernate_after",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["padding_check",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["beast_mitigation",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"BeastMitigation"]}]},{"tag":"RCons","contents":["key_update_at",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"PosInt"]}]},{"tag":"RCons","contents":["middlebox_comp_mode",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["commutativering",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/CommutativeRing.purs","end":[23,34]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"CommutativeRing","moduleName":"Data.CommutativeRing","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `CommutativeRing` class is for rings where multiplication is\ncommutative.\n\nInstances must satisfy the following law in addition to the `Ring`\nlaws:\n\n- Commutative multiplication: `a * b = b * a`\n"}],"tag":"SearchResult"}]],["commutativeringrecord",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/CommutativeRing.purs","end":[36,100]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"CommutativeRingRecord","moduleName":"Data.CommutativeRing","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ring"],"RingRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]}],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `CommutativeRing` instances, used\nto implement the `CommutativeRing` instance for records.\n"}],"tag":"SearchResult"}]],["comonad",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/control/v5.0.0-erl1/src/Control/Comonad.purs","end":[21,32]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Comonad","moduleName":"Control.Comonad","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[],"arguments":[["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Comonad` extends the `Extend` class with the `extract` function\nwhich extracts a value, discarding the comonadic context.\n\n`Comonad` is the dual of `Monad`, and `extract` is the dual of `pure`.\n\nLaws:\n\n- Left Identity: `extract <<= xs = xs`\n- Right Identity: `extract (f <<= xs) = f xs`\n"}],"tag":"SearchResult"}]],["comonadask",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env/Class.purs","end":[15,28]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadAsk","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["e"]]],"arguments":[["e",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadEnv` type class represents those comonads which support a\nglobal environment that can be provided via the `ask` function.\n\nAn implementation is provided for `EnvT`.\n"}],"tag":"SearchResult"}]],["comonadcofree",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/free/v6.0.1/src/Control/Comonad/Cofree/Class.purs","end":[17,43]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"ComonadCofree","moduleName":"Control.Comonad.Cofree.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["f"]]],"arguments":[["f",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Based on <http://hackage.haskell.org/package/free/docs/Control-Comonad-Cofree-Class.html>\n"}],"tag":"SearchResult"}]],["comonadenv",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env/Class.purs","end":[33,44]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadEnv","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["e"]]],"arguments":[["e",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadEnv` type class extends `ComonadAsk` with a function\n`local f x` that allows the value of the local context to be modified for\nthe duration of the execution of action `x`.\n\nAn implementation is provided for `EnvT`.\n\nLaws:\n\n- `ask (local f x) = f (ask x)`\n- `extract (local _ x) = extract a`\n- `extend g (local f x) = extend (g <<< local f) x`\n"}],"tag":"SearchResult"}]],["comonadstore",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Store/Class.purs","end":[36,34]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadStore","moduleName":"Control.Comonad.Store.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["s"]]],"arguments":[["s",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadStore` type class represents those monads which support local position information via\n`pos` and `peek`.\n\n- `pos` reads the current position.\n- `peek` reads the value at the specified position in the specified context.\n\nAn implementation is provided for `StoreT`.\n\nLaws:\n\n- `pos (extend _ x) = pos x`\n- `peek (pos x) x = extract x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadStore Number w) -> w Number -> w Number\nblur = extend \\r -> (peeks (\\n -> n - 1) r + peeks (\\n -> n + 1) r) / 2)\n```\n"}],"tag":"SearchResult"}]],["comonadtraced",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Traced/Class.purs","end":[30,35]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadTraced","moduleName":"Control.Comonad.Traced.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["t"]]],"arguments":[["t",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadTraced` type class represents those monads which support relative (monoidal)\nposition information via `track`.\n\n- `track` extracts a value at the specified relative position.\n\nAn implementation is provided for `TracedT`.\n\nLaws:\n\n- `track mempty = extract`\n- `(track s =<= track t) x = track (s <> t) x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadTraced (Additive Number) w) -> w Number -> w Number\nblur = extend \\r -> (track (Additive (-1)) r + track (Additive 1) r) / 2\n```\n"}],"tag":"SearchResult"}]],["comonadtrans",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Trans/Class.purs","end":[23,49]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadTrans","moduleName":"Control.Comonad.Trans.Class","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadTrans` type class represents _comonad transformers_.\n\nA comonad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Comonad` as its first argument, and returns another `Comonad`.\n\nThis allows us to extend a comonad to provide additional context. By iterating this\nprocess, we create comonad transformer _stacks_, which contain all of the contextual information\nrequired for a particular computation.\n\nThe laws state that `lower` is a `Comonad` morphism.\n\nLaws:\n\n- `extract (lower a) = extract a`\n- `lower (extend w (f <<< lower)) = extend (lower w) f`\n"}],"tag":"SearchResult"}]],["compact",[{"values":[{"sourceSpan":{"start":[63,3],"name":".spago/filterable/v3.0.1/src/Data/Compactable.purs","end":[64,23]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"compact","moduleName":"Data.Compactable","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Compactable"],"Compactable"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Compactable"],"Compactable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["compactable",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/filterable/v3.0.1/src/Data/Compactable.purs","end":[67,52]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"Compactable","moduleName":"Data.Compactable","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Compactable` represents data structures which can be _compacted_/_filtered_.\nThis is a generalization of catMaybes as a new function `compact`. `compact`\nhas relations with `Functor`, `Applicative`, `Monad`, `Plus`, and `Traversable`\nin that we can use these classes to provide the ability to operate on a data type\nby eliminating intermediate Nothings. This is useful for representing the\nfiltering out of values, or failure.\n\nTo be compactable alone, no laws must be satisfied other than the type signature.\n\nIf the data type is also a Functor the following should hold:\n\n- Functor Identity: `compact <<< map Just ≡ id`\n\nAccording to Kmett, (Compactable f, Functor f) is a functor from the\nkleisli category of Maybe to the category of Hask.\n`Kleisli Maybe -> Hask`.\n\nIf the data type is also `Applicative` the following should hold:\n\n- `compact <<< (pure Just <*> _) ≡ id`\n- `applyMaybe (pure Just) ≡ id`\n- `compact ≡ applyMaybe (pure id)`\n\nIf the data type is also a `Monad` the following should hold:\n\n- `flip bindMaybe (pure <<< Just) ≡ id`\n- `compact <<< (pure <<< (Just (=<<))) ≡ id`\n- `compact ≡ flip bindMaybe pure`\n\nIf the data type is also `Plus` the following should hold:\n\n- `compact empty ≡ empty`\n- `compact (const Nothing <$> xs) ≡ empty`\n"}],"tag":"SearchResult"}]],["compactdefault",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/filterable/v3.0.1/src/Data/Compactable.purs","end":[70,21]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"compactDefault","moduleName":"Data.Compactable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Compactable"],"Compactable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["compare",[{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[38,32]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compare","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Ord"],"Ord"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Compare","moduleName":"Prim.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["left","right"],["ordering"]]],"arguments":[["left",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["right",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["ordering",{"tag":"TypeConstructor","contents":[["Prim","Ordering"],"Ordering"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for comparing two `Symbol`s.\nProduces an `Ordering`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Symbol.purs","end":[17,78]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"compare","moduleName":"Type.Data.Symbol","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Symbol"],"Compare"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["compare1",[{"values":[{"sourceSpan":{"start":[221,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[221,56]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compare1","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Ord"],"Ord1"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparefingertree",[{"values":[{"sourceSpan":{"start":[169,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[170,47]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"compareFingerTree","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparerecord",[{"values":[{"sourceSpan":{"start":[228,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[228,91]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compareRecord","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null]],"typeClass":[["Data","Ord"],"OrdRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"OrdRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparing",[{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[160,67]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"comparing","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares two values by mapping them to a type with an `Ord` instance.\n"}],"tag":"SearchResult"}]],["comparison",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/contravariant/v5.0.0/src/Data/Comparison.purs","end":[10,55]},"score":1,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Comparison","moduleName":"Data.Comparison","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An adaptor allowing `>$<` to map over the inputs of a comparison function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Comparison","moduleName":"Data.Comparison","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparisonequivalence",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/contravariant/v5.0.0/src/Data/Equivalence.purs","end":[30,65]},"score":1,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"comparisonEquivalence","moduleName":"Data.Equivalence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An equivalence relation for any `Comparison`.\n"}],"tag":"SearchResult"}]],["compile",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[30,49]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"compile","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"Route"]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"Dispatch"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["complement",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int/Bits.purs","end":[37,40]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"complement","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise NOT.\n"}],"tag":"SearchResult"}]],["compose",[{"values":[{"sourceSpan":{"start":[14,3],"name":".spago/prelude/v5.0.1-erl1/src/Control/Semigroupoid.purs","end":[14,51]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compose","moduleName":"Control.Semigroupoid","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Control","Semigroupoid"],"Semigroupoid"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Semigroupoid"],"Semigroupoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Compose.purs","end":[15,42]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Compose","moduleName":"Data.Functor.Compose","info":{"values":[{"typeArguments":[["f",null],["g",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Compose f g` is the composition of the two functors `f` and `g`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Compose","moduleName":"Data.Functor.Compose","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composecokleisli",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[44,85]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"composeCoKleisli","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forwards co-Kleisli composition.\n"}],"tag":"SearchResult"}]],["composecokleisliflipped",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[50,92]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"composeCoKleisliFlipped","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Backwards co-Kleisli composition.\n"}],"tag":"SearchResult"}]],["composeflipped",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Semigroupoid.purs","end":[22,76]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"composeFlipped","moduleName":"Control.Semigroupoid","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Semigroupoid"],"Semigroupoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forwards composition, or `compose` with its arguments reversed.\n"}],"tag":"SearchResult"}]],["composekleisli",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Bind.purs","end":[129,81]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"composeKleisli","moduleName":"Control.Bind","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forwards Kleisli composition.\n\nFor example:\n\n```purescript\nimport Data.Array (head, tail)\n\nthird = tail >=> tail >=> head\n```\n"}],"tag":"SearchResult"}]],["composekleisliflipped",[{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Bind.purs","end":[135,88]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"composeKleisliFlipped","moduleName":"Control.Bind","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Backwards Kleisli composition.\n"}],"tag":"SearchResult"}]],["concat",[{"values":[{"sourceSpan":{"start":[315,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[315,71]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concat","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[626,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[626,62]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concat","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten an array of arrays, creating a new array.\n\n```purescript\nconcat [[1, 2, 3], [], [4, 5, 6]] = [1, 2, 3, 4, 5, 6]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[400,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[400,44]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concat","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten a list of lists.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[228,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[228,68]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concat","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[378,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[378,44]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concat","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten a list of lists.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[195,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[195,41]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"concat","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(m*log(n)), where m is the number of sequences, and n is the length of\nthe longest sequence within it. Flatten a sequence of sequences.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[37,47]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"concat","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenate a list of IOData to an IOData. This is a no-op O(1).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOList.purs","end":[21,47]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"concat","moduleName":"Erl.Data.Binary.IOList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOList"],"IOList"]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOList"],"IOList"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenate a list of IOList to an IOList. This is a no-op O(1).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[222,68]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"concat","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[312,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[312,59]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"concat","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten a list of lists.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"}]],["concatmap",[{"values":[{"sourceSpan":{"start":[318,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[318,86]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concatMap","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[636,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[636,62]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concatMap","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in an array, and flatten the results\ninto a single, new array.\n\n```purescript\nconcatMap (split $ Pattern \" \") [\"Hello World\", \"other thing\"]\n   = [\"Hello\", \"World\", \"other\", \"thing\"]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[78,83]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[407,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[407,59]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in a list, and flatten the results\ninto a single, new list.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[231,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[231,83]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[385,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[385,59]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in a list, and flatten the results\ninto a single, new list.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[201,56]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"concatMap","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(m*n), where m is the number of sequences, and n is the length of the\nlongest sequence within it. Map a function over a sequence and then\nflatten the results.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[225,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[225,83]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"concatMap","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[318,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[318,59]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"concatMap","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in a list, and flatten the results\ninto a single, new list.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"}]],["config",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/erl-stetson/v0.13.0/src/RoutingDuplexMiddleware.purs","end":[33,6]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"Config","moduleName":"RoutingDuplexMiddleware","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["dispatch",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["RoutingDuplexMiddleware"],"UnmatchedHandler"]}]},{"tag":"TypeConstructor","contents":[["RoutingDuplexMiddleware"],"ModuleInfo"]}]}}]}]}]},{"tag":"RCons","contents":["unmatched",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteError"]}]},{"tag":"TypeConstructor","contents":[["RoutingDuplexMiddleware"],"UnmatchedHandler"]}]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[334,6]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"Config","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"InitResult"]},{"tag":"TypeVar","contents":"state"}]}}]}]},{"tag":"TypeVar","contents":"r"}]}]},"arguments":[["state",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["configure",[{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson.purs","end":[55,51]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"configure","moduleName":"Stetson","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonConfig"]},{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"NoArguments"]}]},{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"NoArguments"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a blank stetson config with default settings and no routes\n"}],"tag":"SearchResult"}]],["conj",[{"values":[{"sourceSpan":{"start":[42,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/HeytingAlgebra.purs","end":[42,22]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"conj","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid/Conj.purs","end":[15,24]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Conj","moduleName":"Data.Monoid.Conj","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid and semigroup for conjunction.\n\n``` purescript\nConj x <> Conj y == Conj (x && y)\n(mempty :: Conj _) == Conj tt\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Conj","moduleName":"Data.Monoid.Conj","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conjmodifying",[{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Setter.purs","end":[117,96]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"conjModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conjover",[{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Setter.purs","end":[83,76]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"conjOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conjrecord",[{"values":[{"sourceSpan":{"start":[117,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/HeytingAlgebra.purs","end":[117,93]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"conjRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connect",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Tcp.purs","end":[338,122]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connect","moduleName":"Erl.Kernel.Tcp","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"CanReceiveMessage"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"TcpMessage"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"REmpty","contents":{}}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"TcpSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ActiveSocket"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectedSocket"]}]}}]}}]}]}]}]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectaddress",[{"values":[{"sourceSpan":{"start":[281,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[283,25]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectAddress","moduleName":"Erl.Kernel.Inet","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["connectedsocket",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[115,50]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectedSocket","moduleName":"Erl.Kernel.Inet","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"SocketType"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["connecterror",[{"values":[{"sourceSpan":{"start":[289,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[291,28]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectError","moduleName":"Erl.Kernel.Inet","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["connecterrortopurs",[{"values":[{"sourceSpan":{"start":[300,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[300,52]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectErrorToPurs","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectError"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connection_error",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Connection_error","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectionerror",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"ConnectionError","moduleName":"Erl.Gun.WsGun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ErrorReason"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectip4any",[{"values":[{"sourceSpan":{"start":[557,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[557,32]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectIp4Any","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectip4loopback",[{"values":[{"sourceSpan":{"start":[554,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[554,37]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectIp4Loopback","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectip6any",[{"values":[{"sourceSpan":{"start":[563,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[563,32]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectIp6Any","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectip6loopback",[{"values":[{"sourceSpan":{"start":[560,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[560,37]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectIp6Loopback","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectlistenoptions",[{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Tcp.purs","end":[197,8]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectListenOptions","moduleName":"Erl.Kernel.Tcp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"Options"]},{"tag":"RCons","contents":["ip",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"SocketAddress"]}]},{"tag":"RCons","contents":["fd",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["ifaddr",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"SocketAddress"]}]},{"tag":"RCons","contents":["family",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"AddressFamily"]}]},{"tag":"RCons","contents":["port",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Port"]}]},{"tag":"RCons","contents":["netns",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","File"],"FileName"]}]},{"tag":"RCons","contents":["bind_to_device",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["connectoptions",[{"values":[{"sourceSpan":{"start":[199,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Tcp.purs","end":[200,28]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectOptions","moduleName":"Erl.Kernel.Tcp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectListenOptions"]},{"tag":"REmpty","contents":{}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[202,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Tcp.purs","end":[205,35]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectOptions","moduleName":"Erl.Kernel.Tcp","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[885,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[886,58]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"ConnectOptions","moduleName":"Erl.Ssl","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ClientOptions"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"CommonOptions"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"CommonOptions"]},{"tag":"REmpty","contents":{}}]}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[903,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[906,35]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"connectOptions","moduleName":"Erl.Ssl","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ConnectOptions"]}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ConnectOptions"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ConnectOptions"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectorpunctuation",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ConnectorPunctuation","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectpassive",[{"values":[{"sourceSpan":{"start":[346,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Tcp.purs","end":[352,128]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"connectPassive","moduleName":"Erl.Kernel.Tcp","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"tag":"TypeLevelString","contents":"active"},{"tag":"TypeVar","contents":"options"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"REmpty","contents":{}}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ForcedOptions"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}]}}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"TcpSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"PassiveSocket"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectedSocket"]}]}}]}}]}]}]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[919,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[925,128]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"connectPassive","moduleName":"Erl.Ssl","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Lacks"],"constraintArgs":[{"tag":"TypeLevelString","contents":"active"},{"tag":"TypeVar","contents":"options"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ForcedOptions"]},{"tag":"REmpty","contents":{}}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ConnectOptions"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ForcedOptions"]},{"tag":"TypeVar","contents":"options"}]}}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ForcedOptions"]},{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ConnectOptions"]}]}}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectAddress"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"SslSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"PassiveSocket"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectedSocket"]}]}}]}}]}]}]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectposix",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectPosix","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"PosixError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttimeout",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ConnectTimeout","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connpid",[{"values":[{"sourceSpan":{"start":[309,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[310,17]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"ConnPid","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Process"],"Process"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["conquer",[{"values":[{"sourceSpan":{"start":[13,3],"name":".spago/contravariant/v5.0.0/src/Data/Divisible.purs","end":[13,27]},"score":1,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"conquer","moduleName":"Data.Divisible","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Divisible"],"Divisible"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Divisible"],"Divisible"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cons",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[88,77]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"cons","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attach an element to the front of a list.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[218,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[218,58]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"cons","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[245,42]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"cons","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches an element to the front of an array, creating a new array.\n\n```purescript\ncons 1 [2, 3, 4] = [1, 2, 3, 4]\n```\n\nNote, the running time of this function is `O(n)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatList.purs","end":[78,46]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"cons","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the beginning of the catenable list, creating a new\ncatenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatQueue.purs","end":[69,48]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"cons","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the beginning of the queue, creating a new queue.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[234,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[235,40]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"cons","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Cons","moduleName":"Data.List.Lazy.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/Types.purs","end":[54,40]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons","moduleName":"Data.List.Lazy.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attach an element to the front of a lazy list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[136,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Cons","moduleName":"Data.List.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[69,38]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"cons","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Add an element to the left end of a sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[181,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[181,38]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"cons","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Add an element to the left end of a Seq.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set/NonEmpty.purs","end":[67,55]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"cons","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptySet` from an item and a `Set`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[63,46]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"cons","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[79,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"cons","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a string by prepending a character.\n\n```purescript\ncons 'a' \"bc\" = NonEmptyString \"abc\"\ncons 'a' \"\" = NonEmptyString \"a\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[129,56]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"cons","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/Types.purs","end":[45,55]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"cons","moduleName":"Erl.Data.List.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Cons","moduleName":"Prim.Row","info":{"values":[{"superclasses":[],"fundeps":[[["label","a","tail"],["row"]],[["label","row"],["a","tail"]]],"arguments":[["label",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["a",{"tag":"TypeVar","contents":"k"}],["tail",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeVar","contents":"k"}]}],["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeVar","contents":"k"}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The Cons type class is a 4-way relation which asserts that one row of\ntypes can be obtained from another by inserting a new label/type pair on\nthe left.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Cons","moduleName":"Prim.RowList","info":{"values":[{"kind":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeVar","contents":"k"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeVar","contents":"k"}]}]}]}]},null]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"Constructs a new `RowList` from a label, a type, and an existing tail\n`RowList`.  E.g: `Cons \"x\" Int (Cons \"y\" Int Nil)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Cons","moduleName":"Prim.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["head","tail"],["symbol"]],[["symbol"],["head","tail"]]],"arguments":[["head",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["tail",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["symbol",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for either splitting up a symbol into its\nhead and tail or for combining a head and tail into a new symbol.\nRequires the head to be a single character and the combined string\ncannot be empty.\n"}],"tag":"SearchResult"}]],["cons'",[{"values":[{"sourceSpan":{"start":[223,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[223,51]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"cons'","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[139,51]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons'","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[132,51]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"cons'","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consall",[{"values":[{"sourceSpan":{"start":[276,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[277,42]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"consAll","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consdigit",[{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[105,58]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"consDigit","moduleName":"Data.FingerTree.Digit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prepend a single element. This is partial because the result is not defined\nin the case where the argument has 4 elements.\n"}],"tag":"SearchResult"}]],["consl",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"ConsL","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["const",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/const/v5.0.0/src/Data/Const.purs","end":[18,28]},"score":6,"packageInfo":{"values":["const"],"tag":"Package"},"name":"Const","moduleName":"Data.Const","info":{"values":[{"typeArguments":[["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Const` type constructor, which wraps its first type argument\nand ignores its second. That is, `Const a b` is isomorphic to `a`\nfor any `b`.\n\n`Const` has some useful instances. For example, the `Applicative`\ninstance allows us to collect results using a `Monoid` while\nignoring return values.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":6,"packageInfo":{"values":["const"],"tag":"Package"},"name":"Const","moduleName":"Data.Const","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Function.purs","end":[40,33]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"const","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns its first argument and ignores its second.\n\n```purescript\nconst 1 \"hello\" = 1\n```\n\nIt can also be thought of as creating a function that ignores its argument:\n\n```purescript\nconst 1 = \\_ -> 1\n```\n"}],"tag":"SearchResult"}]],["constfolding",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/heterogeneous/v0.5.1/src/Heterogeneous/Folding.purs","end":[39,40]},"score":1,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstFolding","moduleName":"Heterogeneous.Folding","info":{"values":[{"typeArguments":[["f",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstFolding","moduleName":"Heterogeneous.Folding","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"f"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constmapping",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/heterogeneous/v0.5.1/src/Heterogeneous/Mapping.purs","end":[30,40]},"score":1,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstMapping","moduleName":"Heterogeneous.Mapping","info":{"values":[{"typeArguments":[["f",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstMapping","moduleName":"Heterogeneous.Mapping","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"f"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constraint",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Constraint","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Constraint` is the kind of type class constraints.\nFor example, a type class declaration like this:\n\n    class Semigroup a where\n      append :: a -> a -> a\n\nhas the kind signature:\n\n    class Semigroup :: Type -> Constraint\n"}],"tag":"SearchResult"}]],["constructor",[{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[43,55]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Constructor","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[["name",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for constructors which includes the data constructor name\nas a type-level string.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Constructor","moduleName":"Data.Generic.Rep","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consume",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[125,51]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"consume","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set the consumed flag.\n"}],"tag":"SearchResult"}]],["cont",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Cont.purs","end":[23,31]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Cont","moduleName":"Control.Monad.Cont","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Cont` monad is a synonym for the `ContT` monad transformer applied to\nthe `Identity` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Cont.purs","end":[26,48]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"cont","moduleName":"Control.Monad.Cont","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont"],"Cont"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a computation in the `Cont` monad.\n"}],"tag":"SearchResult"}]],["contains",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodeUnits.purs","end":[70,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"contains","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") \"haystack with needle\" == true\ncontains (Pattern \"needle\") \"haystack\" == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[132,49]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"contains","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") (NonEmptyString \"haystack with needle\") == true\ncontains (Pattern \"needle\") (NonEmptyString \"haystack\") == false\n```\n"}],"tag":"SearchResult"}]],["containsnegativevalue",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"ContainsNegativeValue","moduleName":"Data.Interval.Duration.Iso","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"DurationComponent"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["content_types_accepted",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[137,101]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"content_types_accepted","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypesAcceptedHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["content_types_provided",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[155,101]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"content_types_provided","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypesProvidedHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contenttype",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[42,90]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentType","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentType","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypeParams"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contenttypeparams",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[44,85]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentTypeParams","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentTypeParams","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contenttypesaccepted",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Rest.purs","end":[64,187]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"contentTypesAccepted","moduleName":"Stetson.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RestResult"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"AcceptHandler"]},{"tag":"TypeVar","contents":"state"}]}}]}}]}}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a contentTypesAccepted callback to the provided StetsonHandler\n"}],"tag":"SearchResult"}]],["contenttypesacceptedhandler",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[57,78]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentTypesAcceptedHandler","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"RestHandler"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypesAcceptedResult"]}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Handler for content_types_accepted callback\n"}],"tag":"SearchResult"}]],["contenttypesacceptedresult",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[46,55]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentTypesAcceptedResult","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[54,116]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"contentTypesAcceptedResult","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentType"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"AcceptCallback"]}]}}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypesAcceptedResult"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contenttypesprovided",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Rest.purs","end":[68,188]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"contentTypesProvided","moduleName":"Stetson.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RestResult"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"ProvideHandler"]},{"tag":"TypeVar","contents":"state"}]}}]}}]}}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a contentTypesProvided callback to the provided StetsonHandler\n"}],"tag":"SearchResult"}]],["contenttypesprovidedhandler",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[70,78]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentTypesProvidedHandler","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"RestHandler"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypesProvidedResult"]}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Handler for content_types_provided callback\n"}],"tag":"SearchResult"}]],["contenttypesprovidedresult",[{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[59,55]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"ContentTypesProvidedResult","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[67,117]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"contentTypesProvidedResult","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentType"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ProvideCallback"]}]}}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"ContentTypesProvidedResult"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["context",[{"values":[{"sourceSpan":{"start":[301,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[307,4]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Context","moduleName":"Pinto.GenServer","info":{"values":[{"typeArguments":[["cont",null],["stop",null],["msg",null],["state",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["continue",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Loop.purs","end":[33,62]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"continue","moduleName":"Erl.Cowboy.Handlers.Loop","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Loop"],"InfoResult"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"ok response\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Continue","moduleName":"Pinto.GenServer","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"cont"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["continuefn",[{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[172,80]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"ContinueFn","moduleName":"Pinto.GenServer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"ResultT"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"ReturnResult"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]},"arguments":[["cont",null],["stop",null],["msg",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The type of the handleContinue callback see gen_server:handle_continue\n"}],"tag":"SearchResult"}]],["continuehibernate",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Loop.purs","end":[36,71]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"continueHibernate","moduleName":"Erl.Cowboy.Handlers.Loop","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Loop"],"InfoResult"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"ok, hibernate response\n"}],"tag":"SearchResult"}]],["contract",[{"values":[{"sourceSpan":{"start":[270,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[275,22]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"contract","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A `VariantF gt a` can be cast to some `VariantF lt a`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `VariantF`'s runtime tag is\nwithin the subset of `lt`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[192,19]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"contract","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A `Variant gt` can be cast to some `Variant lt`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `Variant`'s runtime tag is\nwithin the subset of `lt`.\n"}],"tag":"SearchResult"}]],["contractable",[{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/variant/v7.0.3/src/Data/Variant/Internal.purs","end":[249,95]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"Contractable","moduleName":"Data.Variant.Internal","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["gt",null],["lt",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["contractwith",[{"values":[{"sourceSpan":{"start":[249,3],"name":".spago/variant/v7.0.3/src/Data/Variant/Internal.purs","end":[249,95]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"contractWith","moduleName":"Data.Variant.Internal","info":{"values":[{"typeClassArguments":[["gt",null],["lt",null]],"typeClass":[["Data","Variant","Internal"],"Contractable"],"type":{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["proxy2",{"tag":"ForAll","contents":["proxy1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy1"},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy2"},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contravariant",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/contravariant/v5.0.0/src/Data/Functor/Contravariant.purs","end":[17,45]},"score":1,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Contravariant","moduleName":"Data.Functor.Contravariant","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `Contravariant` functor can be seen as a way of changing the input type\nof a consumer of input, in contrast to the standard covariant `Functor`\nthat can be seen as a way of changing the output type of a producer of\noutput.\n\n`Contravariant` instances should satisfy the following laws:\n\n- Identity `cmap id = id`\n- Composition `cmap f <<< cmap g = cmap (g <<< f)`\n"}],"tag":"SearchResult"}]],["control",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"Control","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contt",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Cont/Trans.purs","end":[23,48]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ContT","moduleName":"Control.Monad.Cont.Trans","info":{"values":[{"typeArguments":[["r",null],["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The CPS monad transformer.\n\nThis monad transformer extends the base monad with the operation `callCC`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ContT","moduleName":"Control.Monad.Cont.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convchars",[{"values":[{"sourceSpan":{"start":[4259,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[4259,29]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"convchars","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convchars1",[{"values":[{"sourceSpan":{"start":[4262,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[4262,30]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"convchars1","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convchars2",[{"values":[{"sourceSpan":{"start":[4896,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[4896,30]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"convchars2","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conversionrule",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[87,42]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ConversionRule","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ConversionRule","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["category",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["unicodeCat",{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"UnicodeCategory"]},{"tag":"RCons","contents":["possible",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["updist",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["lowdist",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["titledist",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertduration",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time/Duration.purs","end":[93,66]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"convertDuration","moduleName":"Data.Time.Duration","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts directly between durations of differing types.\n"}],"tag":"SearchResult"}]],["convertoption",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[29,42]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"ConvertOption","moduleName":"ConvertableOptions","info":{"values":[{"superclasses":[],"fundeps":[[["t","p"],["o"]]],"arguments":[["t",null],["p",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["i",null],["o",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[29,42]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"convertOption","moduleName":"ConvertableOptions","info":{"values":[{"typeClassArguments":[["t",null],["p",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["i",null],["o",null]],"typeClass":[["ConvertableOptions"],"ConvertOption"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["p",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]},{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOption"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"p"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertoptions",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[26,32]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"ConvertOptions","moduleName":"ConvertableOptions","info":{"values":[{"superclasses":[],"fundeps":[[["t"],["o"]]],"arguments":[["t",null],["i",null],["o",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,3],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[26,32]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"convertOptions","moduleName":"ConvertableOptions","info":{"values":[{"typeClassArguments":[["t",null],["i",null],["o",null]],"typeClass":[["ConvertableOptions"],"ConvertOptions"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptions"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertoptionswithdefaults",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[15,65]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"ConvertOptionsWithDefaults","moduleName":"ConvertableOptions","info":{"values":[{"superclasses":[],"fundeps":[[["t"],["defaults","all"]]],"arguments":[["t",null],["defaults",null],["provided",null],["all",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,3],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[15,65]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"convertOptionsWithDefaults","moduleName":"ConvertableOptions","info":{"values":[{"typeClassArguments":[["t",null],["defaults",null],["provided",null],["all",null]],"typeClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["defaults",{"tag":"ForAll","contents":["provided",{"tag":"ForAll","contents":["all",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"defaults"},{"tag":"TypeVar","contents":"provided"},{"tag":"TypeVar","contents":"all"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"defaults"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"provided"}]},{"tag":"TypeVar","contents":"all"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertpassivetoactive",[{"values":[{"sourceSpan":{"start":[310,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Tcp.purs","end":[314,84]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"convertPassiveToActive","moduleName":"Erl.Kernel.Tcp","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"CanReceiveMessage"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"TcpMessage"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"TcpSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"PassiveSocket"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectedSocket"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"TcpSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ActiveSocket"]}]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ConnectedSocket"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[223,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Udp.purs","end":[227,52]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"convertPassiveToActive","moduleName":"Erl.Kernel.Udp","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"CanReceiveMessage"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Udp"],"UdpMessage"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Udp"],"UdpSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"PassiveSocket"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Kernel","Udp"],"UdpSocket"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"ActiveSocket"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertrecordoptions",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[32,50]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"ConvertRecordOptions","moduleName":"ConvertableOptions","info":{"values":[{"superclasses":[],"fundeps":[[["t","rl"],["o"]]],"arguments":[["t",null],["rl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["i",null],["o",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/convertable-options/v1.0.0/src/ConvertableOptions.purs","end":[32,50]},"score":0,"packageInfo":{"values":["convertable-options"],"tag":"Package"},"name":"convertRecordOptions","moduleName":"ConvertableOptions","info":{"values":[{"typeClassArguments":[["t",null],["rl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["i",null],["o",null]],"typeClass":[["ConvertableOptions"],"ConvertRecordOptions"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["rl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertRecordOptions"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cookieopts",[{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[147,6]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"CookieOpts","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["max_age",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["domain",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["path",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["secure",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["http_only",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["same_site",{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["coproduct",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct.purs","end":[15,57]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct","moduleName":"Data.Functor.Coproduct","info":{"values":[{"typeArguments":[["f",null],["g",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Coproduct f g` is the coproduct of two functors `f` and `g`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct","moduleName":"Data.Functor.Coproduct","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct.purs","end":[27,78]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct","moduleName":"Data.Functor.Coproduct","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Eliminate a coproduct by providing eliminators for the left and\nright components\n"}],"tag":"SearchResult"}]],["coproduct1",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[11,38]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct1","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[135,42]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct1","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct1"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct10",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[29,76]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct10","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C11"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["i",null],["j",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[252,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[252,226]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct10","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["j",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"j"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct2",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[13,42]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct2","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[140,80]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct2","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct3",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[15,46]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct3","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[147,98]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct3","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct4",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[17,50]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct4","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[156,116]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct4","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct5",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[19,54]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct5","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[167,134]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct5","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct6",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[21,58]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct6","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[180,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[180,152]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct6","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct7",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[23,62]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct7","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[195,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[195,170]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct7","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct8",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[25,66]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct8","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[212,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[212,188]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct8","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct9",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[27,71]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct9","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["i",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[231,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[231,206]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct9","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cos",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[31,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"cos","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the cosine of the argument.\n"}],"tag":"SearchResult"}]],["costar",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Costar.purs","end":[21,41]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Costar","moduleName":"Data.Functor.Costar","info":{"values":[{"typeArguments":[["f",null],["b",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Costar` turns a `Functor` into a `Profunctor` \"backwards\".\n\n`Costar f` is also the co-Kleisli category for `f`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Costar","moduleName":"Data.Functor.Costar","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costrong",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor/Costrong.purs","end":[9,63]},"score":6,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Costrong","moduleName":"Data.Profunctor.Costrong","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]}],"fundeps":[],"arguments":[["p",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Costrong` class provides the dual operations of the `Strong` class.\n"}],"tag":"SearchResult"}]],["cotraverse",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/distributive/v5.0.0/src/Data/Distributive.purs","end":[66,9]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"cotraverse","moduleName":"Data.Distributive","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Zip an arbitrary collection of containers and summarize the results\n"}],"tag":"SearchResult"}]],["cotraversed",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Grate.purs","end":[35,69]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"cotraversed","moduleName":"Data.Lens.Grate","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Grate"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["countprefix",[{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[227,55]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points in the leading sequence of code points\nwhich all match the given predicate. Operates in constant space and in\ntime linear to the length of the string.\n\n```purescript\n>>> countPrefix (\\c -> fromEnum c == 0x1D400) \"𝐀𝐀 b c 𝐀\"\n2\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodeUnits.purs","end":[159,65]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of contiguous characters at the beginning\nof the string for which the predicate holds.\n\n```purescript\ncountPrefix (_ /= ' ') \"Hello World\" == 5 -- since length \"Hello\" == 5\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[129,63]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[289,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[289,58]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of contiguous characters at the beginning of the string\nfor which the predicate holds.\n\n```purescript\ncountPrefix (_ /= 'o') (NonEmptyString \"Hello World\") == 4\n```\n"}],"tag":"SearchResult"}]],["cowboyhandler",[{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[89,21]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"CowboyHandler","moduleName":"Stetson.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The different handlers exposed by Cowboy and loosely mapping onto the\nRest/Loop/WebSocket namespaces\n"}],"tag":"SearchResult"}]],["cowboyhandlerbehaviour",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Simple.purs","end":[25,57]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"CowboyHandlerBehaviour","moduleName":"Erl.Cowboy.Handlers.Simple","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Attribute"],"Behaviour"]},{"tag":"TypeLevelString","contents":"cowboy_handler"}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Simple.purs","end":[28,92]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"cowboyHandlerBehaviour","moduleName":"Erl.Cowboy.Handlers.Simple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Simple"],"InitHandler"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Simple"],"CowboyHandlerBehaviour"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A simple cowboy_handler behaviour. A terminate callback is optional.\n"}],"tag":"SearchResult"}]],["cowboyloopbehaviour",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Loop.purs","end":[45,51]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"CowboyLoopBehaviour","moduleName":"Erl.Cowboy.Handlers.Loop","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Attribute"],"Behaviour"]},{"tag":"TypeLevelString","contents":"cowboy_loop"}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Loop.purs","end":[51,27]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"cowboyLoopBehaviour","moduleName":"Erl.Cowboy.Handlers.Loop","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Loop"],"InitHandler"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["info",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Loop"],"InfoHandler"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Loop"],"CowboyLoopBehaviour"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A cowboy_loop behaviour. A terminate callback is optional.\n"}],"tag":"SearchResult"}]],["cowboyrestbehaviour",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[159,51]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"CowboyRestBehaviour","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Attribute"],"Behaviour"]},{"tag":"TypeLevelString","contents":"cowboy_rest"}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[162,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[164,27]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"cowboyRestBehaviour","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"InitHandler"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"CowboyRestBehaviour"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A cowboy_rest behaviour. Note that while may callbacks are defined only init is mandatory\n"}],"tag":"SearchResult"}]],["cowboyroutefallthrough",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"CowboyRouteFallthrough","moduleName":"Stetson.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cowboyrouteplaceholder",[{"values":[{"sourceSpan":{"start":[256,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[257,27]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"CowboyRoutePlaceholder","moduleName":"Stetson.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"CowboyRoutePlaceholder","moduleName":"Stetson.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cowboyrouterfallback",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"CowboyRouterFallback","moduleName":"RoutingDuplexMiddleware","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cowboyroutes",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson.purs","end":[101,80]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"cowboyRoutes","moduleName":"Stetson","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"Path"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonConfig"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonConfig"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Introduce a list of native Erlang cowboy handlers to this config\n"}],"tag":"SearchResult"}]],["cowboywebsocketbehaviour",[{"values":[{"sourceSpan":{"start":[175,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[175,61]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"CowboyWebsocketBehaviour","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Attribute"],"Behaviour"]},{"tag":"TypeLevelString","contents":"cowboy_websocket"}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[181,32]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"cowboyWebsocketBehaviour","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"InitHandler"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["websocket_handle",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"FrameHandler"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"RCons","contents":["websocket_info",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"InfoHandler"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"CowboyWebsocketBehaviour"]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coyoneda",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/free/v6.0.1/src/Data/Coyoneda.purs","end":[50,57]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Coyoneda","moduleName":"Data.Coyoneda","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Coyoneda` `Functor`.\n\n`Coyoneda f` is a `Functor` for any type constructor `f`. In fact,\nit is the _free_ `Functor` for `f`, i.e. any natural transformation\n`nat :: f ~> g`, can be factor through `liftCoyoneda`.  The natural\ntransformation from `Coyoneda f ~> g` is given by `lowerCoyoneda <<<\nhoistCoyoneda nat`:\n```purescript\nlowerCoyoneda <<< hoistCoyoneda nat <<< liftCoyoneda $ fi\n= lowerCoyoneda (hoistCoyoneda nat (Coyoneda $ mkExists $ CoyonedaF identity fi))    (by definition of liftCoyoneda)\n= lowerCoyoneda (coyoneda identity (nat fi))                                         (by definition of hoistCoyoneda)\n= unCoyoneda map (coyoneda identity (nat fi))                                        (by definition of lowerCoyoneda)\n= unCoyoneda map (Coyoneda $ mkExists $ CoyonedaF  identity (nat fi))                (by definition of coyoneda)\n= map identity (nat fi)                                                              (by definition of unCoyoneda)\n= nat fi                                                                       (since g is a Functor)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Coyoneda","moduleName":"Data.Coyoneda","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"CoyonedaF"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/free/v6.0.1/src/Data/Coyoneda.purs","end":[141,58]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"coyoneda","moduleName":"Data.Coyoneda","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Construct a value of type `Coyoneda f b` from a mapping function and a\nvalue of type `f a`.\n"}],"tag":"SearchResult"}]],["coyonedaf",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/free/v6.0.1/src/Data/Coyoneda.purs","end":[32,48]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"CoyonedaF","moduleName":"Data.Coyoneda","info":{"values":[{"typeArguments":[["f",null],["a",null],["i",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Coyoneda` is encoded as an existential type using `Data.Exists`.\n\nThis type constructor encodes the contents of the existential package.\n"}],"tag":"SearchResult"}]],["bproxy",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[23,26]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"BProxy","moduleName":"Type.Data.Boolean","info":{"values":[{"typeArguments":[["bool",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Value proxy for `Boolean` types\n**Deprecated:** Use `Type.Proxy` instead\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"BProxy","moduleName":"Type.Data.Boolean","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_scheme",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/uri/v8.0.1/src/URI/AbsoluteURI.purs","end":[125,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_scheme","moduleName":"URI.AbsoluteURI","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["query",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The scheme component of an absolute URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":".spago/uri/v8.0.1/src/URI/URI.purs","end":[131,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_scheme","moduleName":"URI.URI","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["fragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The scheme component of a URI.\n"}],"tag":"SearchResult"}]],["<",[{"values":[{"sourceSpan":{"start":[154,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[154,23]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<)","moduleName":"Data.Ord","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
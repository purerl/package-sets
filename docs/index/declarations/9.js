// This file was generated by purescript-docs-search.
window.DocsSearchIndex["9"] = [["paragraphseparator",[{"values":[{"sourceSpan":{"start":[135,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[135,29]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ParagraphSeparator","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parallel",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel/Class.purs","end":[26,23]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"Parallel","moduleName":"Control.Parallel.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[[["m"],["f"]],[["f"],["m"]]],"arguments":[["f",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Parallel` class abstracts over monads which support\nparallel composition via some related `Applicative`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,3],"name":".spago/parallel/v5.0.0/src/Control/Parallel/Class.purs","end":[25,21]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parallel","moduleName":"Control.Parallel.Class","info":{"values":[{"typeClassArguments":[["f",null],["m",null]],"typeClass":[["Control","Parallel","Class"],"Parallel"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"f"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["param",[{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[203,38]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"param","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[36,42]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"param","moduleName":"Routing.Duplex.Printer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[167,39]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"param","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`param name` consumes or prints a query parameter with the given `name`.\nParsing will fail if the parameter is not there.\n\n```purescript\nparse (param \"search\") \"?search=keyword\" == Right \"keyword\"\nparse (param \"search\") \"/\"               == Left (MissingParam \"search\")\nparse (optional (param \"search\")) \"/\"    == Right Nothing\n```\n"}],"tag":"SearchResult"}]],["params",[{"values":[{"sourceSpan":{"start":[345,3],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[345,46]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"params","moduleName":"Routing.Duplex","info":{"values":[{"typeClassArguments":[["r1",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["r2",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]],"typeClass":[["Routing","Duplex"],"RouteDuplexParams"],"type":{"tag":"ForAll","contents":["r1",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["r2",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Routing","Duplex"],"RouteDuplexParams"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":"Builds a `RouteDuplex` from a record of query parameter parsers/printers, where\neach property corresponds to a query parameter with the same name.\n\n```purescript\nsearch =\n  params\n    { page: int\n    , filter: optional <<< string\n    }\n\nparse search \"?page=3&filter=Galaxy%20Quest\" ==\n  Right { page: 3, filter: Just \"Galaxy Quest\" }\n```\n"}],"tag":"SearchResult"}]],["parapply",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[26,10]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parApply","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to an argument under a type constructor in parallel.\n"}],"tag":"SearchResult"}]],["parcont",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel/Class.purs","end":[68,47]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"ParCont","moduleName":"Control.Parallel.Class","info":{"values":[{"typeArguments":[["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `ParCont` type constructor provides an `Applicative` instance\nbased on `ContT Unit m`, which waits for multiple continuations to be\nresumed simultaneously.\n\nParCont sections of code can be embedded in sequential code by using\nthe `parallel` and `sequential` functions:\n\n```purescript\nloadModel :: ContT Unit (Eff (ajax :: AJAX)) Model\nloadModel = do\n  token <- authenticate\n  sequential $\n    Model <$> parallel (get \"/products/popular/\" token)\n          <*> parallel (get \"/categories/all\" token)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,21],"name":".spago/parallel/v5.0.0/src/Control/Parallel/Class.purs","end":[68,47]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"ParCont","moduleName":"Control.Parallel.Class","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parentappend",[{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[179,81]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parentAppend","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pathy","Phantom"],"IsRelOrAbs"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Rel"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Ascends into the parent of the specified directory, then descends into\nthe specified path.\n\n```purescript\nrootDir </> dir \"foo\" <..> dir \"bar\" = rootDir </> dir \"bar\"\n```\n"}],"tag":"SearchResult"}]],["parentof",[{"values":[{"sourceSpan":{"start":[151,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[151,63]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parentOf","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pathy","Phantom"],"IsRelOrAbs"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a path that points to the parent directory of the specified path.\n\nCalling `parentOf` on `rootDir` will return `rootDir`.\n"}],"tag":"SearchResult"}]],["parity",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[101,25]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"Parity","moduleName":"Data.Int","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A type for describing whether an integer is even or odd.\n\nThe `Ord` instance considers `Even` to be less than `Odd`.\n\nThe `Semiring` instance allows you to ask about the parity of the results\nof arithmetical operations, given only the parities of the inputs. For\nexample, the sum of an odd number and an even number is odd, so\n`Odd + Even == Odd`. This also works for multiplication, eg. the product\nof two odd numbers is odd, and therefore `Odd * Odd == Odd`.\n\nMore generally, we have that\n\n```purescript\nparity x + parity y == parity (x + y)\nparity x * parity y == parity (x * y)\n```\n\nfor any integers `x`, `y`. (A mathematician would say that `parity` is a\n*ring homomorphism*.)\n\nAfter defining addition and multiplication on `Parity` in this way, the\n`Semiring` laws now force us to choose `zero = Even` and `one = Odd`.\nThis `Semiring` instance actually turns out to be a `Field`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[141,24]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"parity","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `Int` is `Even` or `Odd`.\n\n``` purescript\nparity 0 == Even\nparity 1 == Odd\n```\n"}],"tag":"SearchResult"}]],["paroneof",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[73,9]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parOneOf","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Race a collection in parallel.\n"}],"tag":"SearchResult"}]],["paroneofmap",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[85,9]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parOneOfMap","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Race a collection in parallel while mapping to some effect.\n"}],"tag":"SearchResult"}]],["parse",[{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[79,77]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"parse","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["o",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteError"]}]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Uses a given codec to parse a value of type `o` out of String representing\nthe path, query and fragment (hash) of a URI (see\n[URI - generic syntax](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Generic_syntax))\nor produce a `RouteError` if parsing fails.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/uri/v8.0.1/src/URI/Extra/QueryPairs.purs","end":[68,46]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parse","moduleName":"URI.Extra.QueryPairs","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Key"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"k"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","QueryPairs"],"QueryPairs"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses a query into key/value pairs.\n\nThis function allows for the `Key` and `Value` components to be parsed\ninto custom representations. If this is not necessary, use `pure` for both\nthese arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/uri/v8.0.1/src/URI/Extra/UserPassInfo.purs","end":[48,57]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parse","moduleName":"URI.Extra.UserPassInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeConstructor","contents":[["URI","Extra","UserPassInfo"],"UserPassInfo"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for `user:password` formatted user-info.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/uri/v8.0.1/src/URI/Path/Absolute.purs","end":[34,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parse","moduleName":"URI.Path.Absolute","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _path-absolute_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/uri/v8.0.1/src/URI/Path/NoScheme.purs","end":[27,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parse","moduleName":"URI.Path.NoScheme","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","NoScheme"],"PathNoScheme"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _path-noscheme_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/uri/v8.0.1/src/URI/Path/Rootless.purs","end":[25,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parse","moduleName":"URI.Path.Rootless","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _path-rootless_ URI component.\n"}],"tag":"SearchResult"}]],["parseabsdir",[{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[111,48]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parseAbsDir","moduleName":"Pathy.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Parser"],"Parser"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AbsDir"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to parse an absolute directory.\n"}],"tag":"SearchResult"}]],["parseabsfile",[{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[103,50]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parseAbsFile","moduleName":"Pathy.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Parser"],"Parser"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AbsFile"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to parse an absolute file.\n"}],"tag":"SearchResult"}]],["parsecookies",[{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[164,66]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"parseCookies","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsedatetime",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Interval.purs","end":[75,59]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseDateTime","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsedigit",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Number.purs","end":[40,66]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseDigit","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseerror",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[37,45]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseError","moduleName":"Text.Parsing.Parser","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A parsing error, consisting of a message and position information.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,17],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[37,29]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseError","moduleName":"Text.Parsing.Parser","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseerrormessage",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[39,42]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorMessage","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseerrorposition",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[42,45]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorPosition","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseflags",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex.purs","end":[69,35]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"parseFlags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses the string representation of `RegexFlags`.\n"}],"tag":"SearchResult"}]],["parseformatstring",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[112,53]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseFormatString","moduleName":"Data.Formatter.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Formatter","DateTime"],"Formatter"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Number.purs","end":[64,53]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseFormatString","moduleName":"Data.Formatter.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Formatter","Number"],"Formatter"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsefulldatetime",[{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/datetime-parsing/10c0a9aecc60a2a5e8cff35bebe45be4dacaa7f8/src/Data/DateTime/Parsing.purs","end":[157,74]},"score":0,"packageInfo":{"values":["datetime-parsing"],"tag":"Package"},"name":"parseFullDateTime","moduleName":"Data.DateTime.Parsing","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Parsing"],"FullDateTime"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseinteger",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Number.purs","end":[21,68]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseInteger","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseinterval",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Interval.purs","end":[31,96]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseInterval","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseip4address",[{"values":[{"sourceSpan":{"start":[527,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[527,61]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"parseIp4Address","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Ip4Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseip6address",[{"values":[{"sourceSpan":{"start":[528,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[528,61]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"parseIp6Address","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"Ip6Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseipaddress",[{"values":[{"sourceSpan":{"start":[526,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[526,59]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"parseIpAddress","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"IpAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseisoduration",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Interval.purs","end":[39,47]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseIsoDuration","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration","Iso"],"IsoDuration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsejson",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/simple-json/baad5dd0d613df6fb2f054fd241d46e11a92e181/src/Simple/JSON.purs","end":[138,33]},"score":1,"packageInfo":{"values":["simple-json"],"tag":"Package"},"name":"parseJSON","moduleName":"Simple.JSON","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsemaybeinteger",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Number.purs","end":[24,81]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseMaybeInteger","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsenumber",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Number.purs","end":[34,70]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseNumber","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsepath",[{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[95,7]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parsePath","moduleName":"Pathy.Parser","info":{"values":[{"type":{"tag":"ForAll","contents":["z",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Parser"],"Parser"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"RelDir"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AbsDir"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"RelFile"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AbsFile"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[156,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"parsePath","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsequence",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[54,13]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parSequence","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsequence_",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[62,12]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parSequence_","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parser",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[36,8]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"Parser","moduleName":"Pathy.Parser","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,16],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[36,8]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"Parser","moduleName":"Pathy.Parser","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["z",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"RelDir"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AbsDir"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"RelFile"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AbsFile"]}]},{"tag":"TypeVar","contents":"z"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"z"}]}]}]}]}]}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[69,35]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"Parser","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Parser` monad is a synonym for the parser monad transformer applied to the `Identity` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/uri/v8.0.1/src/URI/AbsoluteURI.purs","end":[100,67]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.AbsoluteURI","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]}}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for an absolute URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/uri/v8.0.1/src/URI/Authority.purs","end":[74,45]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Authority","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"AuthorityParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the authority part of a URI. Expects values with a `\"//\"`\nprefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/uri/v8.0.1/src/URI/Extra/MultiHostPortPair.purs","end":[48,48]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Extra.MultiHostPortPair","info":{"values":[{"type":{"tag":"ForAll","contents":["host",{"tag":"ForAll","contents":["port",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"host"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"port"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Extra","MultiHostPortPair"],"MultiHostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for multiple host/port pairs embedded in a URI.\n\nThis function allows for the `Host` and `Port` components to be parsed into\ncustom representations. If this is not necessary, use `pure` for both of\nthese arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/uri/v8.0.1/src/URI/Fragment.purs","end":[74,32]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Fragment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Fragment"],"Fragment"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the fragment component of a URI. Expects values with a `'#'`\nprefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[98,66]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.HierarchicalPart","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the hierarchical-part of a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/uri/v8.0.1/src/URI/Host/IPv4Address.purs","end":[56,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Host.IPv4Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for IPv4 addresses.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/uri/v8.0.1/src/URI/Host/IPv6Address.purs","end":[34,35]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Host.IPv6Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/uri/v8.0.1/src/URI/Host/RegName.purs","end":[71,31]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Host.RegName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","RegName"],"RegName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for reg-names.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/uri/v8.0.1/src/URI/Host.purs","end":[41,28]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Host","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for host addresses.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/uri/v8.0.1/src/URI/HostPortPair.purs","end":[37,43]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.HostPortPair","info":{"values":[{"type":{"tag":"ForAll","contents":["host",{"tag":"ForAll","contents":["port",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"host"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"port"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HostPortPair"],"HostPortPair"]},{"tag":"TypeVar","contents":"host"}]},{"tag":"TypeVar","contents":"port"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a spec-conformant host/port pair.\n\nThis function allows for the `Host` and `Port` components to be parsed into\ncustom representations. If this is not necessary, use `pure` for both of\nthese arguments.\n\nHost parsing is dealt with a little differently to all the other URI\ncomponents, as for hosts the control is passed entirely to the component\nparser. This is to accomodate multi-host URIs that are used sometimes for\nconnection strings and the like, but as these are not spec-conforming this\npart of parsing may need to bend the rules a little. See\n[`URI.Extra.MultiHostPortPair`](../URI.Extra.MultiHostPortPair) for an\nexample of this.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/uri/v8.0.1/src/URI/Path.purs","end":[28,28]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _path-abempty_ URI component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/uri/v8.0.1/src/URI/Port.purs","end":[54,28]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Port","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Port"],"Port"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the port component of a host in a URI. Expects values with a\n`':'` prefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/uri/v8.0.1/src/URI/Query.purs","end":[78,29]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Query","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the query component of a URI. Expects values with a `'?'`\nprefix.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/uri/v8.0.1/src/URI/RelativePart.purs","end":[98,61]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.RelativePart","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the relative-part of a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/uri/v8.0.1/src/URI/RelativeRef.purs","end":[98,75]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.RelativeRef","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRefParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a relative URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/uri/v8.0.1/src/URI/Scheme.purs","end":[68,30]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.Scheme","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the scheme component of a URI. Expects a scheme string\nfollowed by `':'`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/uri/v8.0.1/src/URI/URI.purs","end":[104,68]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.URI","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URI"],"URI"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/uri/v8.0.1/src/URI/URIRef.purs","end":[111,79]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.URIRef","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["hierPath",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["fragment",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRefParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","URIRef"],"URIRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a general URI.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[74,32]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parser","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for the user-info component of a URI.\n"}],"tag":"SearchResult"}]],["parserecurringinterval",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Interval.purs","end":[27,114]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseRecurringInterval","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Interval"],"RecurringInterval"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsereldir",[{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[107,48]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parseRelDir","moduleName":"Pathy.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Parser"],"Parser"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"RelDir"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to parse a relative directory.\n"}],"tag":"SearchResult"}]],["parserelfile",[{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Parser.purs","end":[99,50]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"parseRelFile","moduleName":"Pathy.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Parser"],"Parser"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Pathy","Path"],"RelFile"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to parse a relative file.\n"}],"tag":"SearchResult"}]],["parsert",[{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[59,81]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParserT","moduleName":"Text.Parsing.Parser","info":{"values":[{"typeArguments":[["s",null],["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The Parser monad transformer.\n\nThe first type argument is the stream type. Typically, this is either `String`,\nor some sort of token stream.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,23],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[59,81]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParserT","moduleName":"Text.Parsing.Parser","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsesegment",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[80,41]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parseSegment","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _segment_ component of a URI.\n"}],"tag":"SearchResult"}]],["parsesegmentnz",[{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[126,45]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parseSegmentNZ","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _segment-nz_ component of a URI.\n"}],"tag":"SearchResult"}]],["parsesegmentnznc",[{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[172,49]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"parseSegmentNZNC","moduleName":"URI.Path.Segment","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A parser for a _segment-nz-nc_ component of a URI.\n"}],"tag":"SearchResult"}]],["parseshutdownreasonffi",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[89,67]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"parseShutdownReasonFFI","moduleName":"Pinto.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Pinto","Types"],"ShutdownReason"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsestate",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[53,50]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseState","moduleName":"Text.Parsing.Parser","info":{"values":[{"typeArguments":[["s",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Contains the remaining input and current position.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,19],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser.purs","end":[53,31]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseState","moduleName":"Text.Parsing.Parser","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsetrappedexitffi",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[87,102]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"parseTrappedExitFFI","moduleName":"Pinto.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Process","Raw"],"Pid"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Pinto","Types"],"ExitMessage"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Pinto","Types"],"ExitMessage"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["part",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary.purs","end":[21,45]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"part","moduleName":"Erl.Data.Binary","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract part of binary.\n\nStart: zero-based offset into the binary\nLen: A negative length can be used to extract bytes at the end of a binary\nBinary: The binary to extract from\n"}],"tag":"SearchResult"}]],["partial",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Partial","moduleName":"Prim","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The Partial type class is used to indicate that a function is *partial,*\nthat is, it is not defined for all inputs. In practice, attempting to use\na partial function with a bad input will usually cause an error to be\nthrown, although it is not safe to assume that this will happen in all\ncases. For more information, see\n[purescript-partial](https://pursuit.purescript.org/packages/purescript-partial/).\n"}],"tag":"SearchResult"}]],["partialchainfn",[{"values":[{"sourceSpan":{"start":[399,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[400,60]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"PartialChainFn","moduleName":"Erl.Ssl","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Otp","Types","PublicKey"],"DerEncoded"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Otp","Types","PublicKey"],"DerEncoded"]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["partialdata",[{"values":[{"sourceSpan":{"start":[122,3],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[122,16]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"PartialData","moduleName":"Erl.Cowboy.Req","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["partialreq",[{"values":[{"sourceSpan":{"start":[128,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[128,39]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"PartialReq","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Cowboy does not provide the full Req object to terminate, so currently completely opaque\n"}],"tag":"SearchResult"}]],["partition",[{"values":[{"sourceSpan":{"start":[324,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[328,38]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"partition","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[656,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[660,39]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"partition","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Partition an array using a predicate function, creating a set of\nnew arrays. One for the values satisfying the predicate function\nand one for values that don't.\n\n```purescript\npartition (_ > 0) [-1, 4, -5, 7] = { yes: [4, 7], no: [-1, -5] }\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,3],"name":".spago/filterable/v3.0.1/src/Data/Filterable.purs","end":[74,55]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partition","moduleName":"Data.Filterable","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Filterable"],"Filterable"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[586,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[586,83]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"partition","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a tuple of lists of elements which do\nand do not satisfy a predicate, respectively.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[280,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[280,95]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"partition","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[644,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[644,83]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"partition","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a lists of elements which do and do not satisfy a predicate.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[135,77]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"partition","moduleName":"Data.Sequence.Ordered","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(log(n)). Split an ordered sequence into two halves. The first element\nof the returned tuple contains all elements which compared less than or\nequal to the argument; the second element contains the rest.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[262,95]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"partition","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["partitiondefault",[{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/filterable/v3.0.1/src/Data/Filterable.purs","end":[100,53]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partitionDefault","moduleName":"Data.Filterable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `partition` using `partitionMap`.\n"}],"tag":"SearchResult"}]],["partitiondefaultfilter",[{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/filterable/v3.0.1/src/Data/Filterable.purs","end":[108,53]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partitionDefaultFilter","moduleName":"Data.Filterable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `partition` using `filter`. Note that this is\nalmost certainly going to be suboptimal compared to direct implementations.\n"}],"tag":"SearchResult"}]],["partitiondefaultfiltermap",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/filterable/v3.0.1/src/Data/Filterable.purs","end":[121,53]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partitionDefaultFilterMap","moduleName":"Data.Filterable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `partition` using `filterMap`. Note that this\nis almost certainly going to be suboptimal compared to direct\nimplementations.\n"}],"tag":"SearchResult"}]],["partitionmap",[{"values":[{"sourceSpan":{"start":[70,3],"name":".spago/filterable/v3.0.1/src/Data/Filterable.purs","end":[71,62]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partitionMap","moduleName":"Data.Filterable","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Filterable"],"Filterable"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["left",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"l"}]},{"tag":"RCons","contents":["right",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["partitionmapbywilt",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/filterable/v3.0.1/src/Data/Witherable.purs","end":[76,60]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partitionMapByWilt","moduleName":"Data.Witherable","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Witherable"],"Witherable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["left",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"l"}]},{"tag":"RCons","contents":["right",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"r"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `parititonMap` given a `Witherable`.\n"}],"tag":"SearchResult"}]],["partitionmapdefault",[{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/filterable/v3.0.1/src/Data/Filterable.purs","end":[95,60]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"partitionMapDefault","moduleName":"Data.Filterable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Filterable"],"Filterable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["left",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"l"}]},{"tag":"RCons","contents":["right",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `partitionMap` using `separate`. Note that this is\nalmost certainly going to be suboptimal compared to direct implementations.\n"}],"tag":"SearchResult"}]],["partraverse",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[36,13]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parTraverse","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a collection in parallel.\n"}],"tag":"SearchResult"}]],["partraverse_",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/parallel/v5.0.0/src/Control/Parallel.purs","end":[46,12]},"score":0,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parTraverse_","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a collection in parallel, discarding any results.\n"}],"tag":"SearchResult"}]],["pass",[{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Class.purs","end":[38,48]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"pass","moduleName":"Control.Monad.Writer.Class","info":{"values":[{"typeClassArguments":[["w",null],["m",null]],"typeClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"constraintArgs":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["passive",[{"values":[{"sourceSpan":{"start":[336,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[336,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Passive","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["passivesocket",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[120,60]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"PassiveSocket","moduleName":"Erl.Kernel.Inet","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["password",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/erl-otp-types/v0.0.2/src/Erl/Otp/Types/Crypto.purs","end":[21,11]},"score":0,"packageInfo":{"values":["erl-otp-types"],"tag":"Package"},"name":"Password","moduleName":"Erl.Otp.Types.Crypto","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["patch",[{"values":[{"sourceSpan":{"start":[537,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[537,58]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"patch","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[172,3],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[172,10]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"PATCH","moduleName":"Stetson.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["patchwithbody",[{"values":[{"sourceSpan":{"start":[544,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[544,76]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"patchWithBody","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["path",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req/Monad.purs","end":[46,53]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"path","moduleName":"Erl.Cowboy.Req.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[107,37]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"path","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[18,69]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Path","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,14],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[18,69]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Path","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple3"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"MatchSpec"]}]},{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"NativeModuleName"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"InitialState"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[41,59]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"path","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"NativeModuleName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"InitialState"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"Path"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[65,29]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"Path","moduleName":"Pathy.Path","info":{"values":[{"typeArguments":[["a",null],["b",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A type that describes a Path. All flavors of paths are described by this\ntype, whether they are absolute or relative paths and whether they\nrefer to files or directories.\n\n* The type parameter `a` describes whether the path is `Rel` or `Abs`.\n* The type parameter `b` describes whether the path is `File` or `Dir`.\n\nTo ensure type safety, there is no way for users to create a value of\nthis type directly. Instead, helpers should be used, such as `rootDir`,\n`currentDir`, `file`, `dir`,  `(</>)`, and `parsePath`.\n\nThis ADT allows invalid paths (e.g. paths inside files), but there is no\npossible way for such paths to be constructed by user-land code.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[117,65]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"path","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Strips (when parsing) or adds (when printing) a given String prefix,\npotentially consisting of multiple path segments. Constrast this with `prefix`,\nwhich only deals with single segment.\n\n```purescript\nparse (path \"/api/v1\" segment) \"/api/v1/a\" == Right \"a\"\nparse (path \"/api/v1\" segment) \"/api/v2/a\" == Left (Expected \"v1\" \"v2\")\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/uri/v8.0.1/src/URI/Path.purs","end":[18,40]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"Path","moduleName":"URI.Path","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A generic absolute-or-empty path, used in both hierarchical-part and\nrelative-parts when an authority component is present. Corresponds to\n_path-abempty_ in the spec.\n\nA path value of `/` corresponds to `Path [\"\"]`, an empty path is `Path []`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,14],"name":".spago/uri/v8.0.1/src/URI/Path.purs","end":[18,40]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"Path","moduleName":"URI.Path","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pathabsolute",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/uri/v8.0.1/src/URI/Path/Absolute.purs","end":[26,86]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathAbsolute","moduleName":"URI.Path.Absolute","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An absolute path, corresponding to _path-absolute_ in the spec. This path\ncannot represent the value `//` - it must either be `/`, or start with a\nsegment that is not empty, for example: `/something`, `/.`, `/..`. This\ntype can appear in both hierarchical-part and relative-parts to represent\nan absolute path when no authority component is present.\n\nThis restriction exists as a value begining with `//` at this point in the\ngrammar must be an authority, attempting to decide whether a value is an\nauthority or a path would be ambiguous if `//` paths were allowed. The `//`\npath means the same thing as `/` anyway!\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,22],"name":".spago/uri/v8.0.1/src/URI/Path/Absolute.purs","end":[26,86]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathAbsolute","moduleName":"URI.Path.Absolute","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pathinfo",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[101,46]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"pathInfo","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pathnoscheme",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/uri/v8.0.1/src/URI/Path/NoScheme.purs","end":[19,80]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathNoScheme","moduleName":"URI.Path.NoScheme","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A relative path that doesn't look like a URI scheme, corresponding to\n_path-noscheme_ in the spec. This path cannot start with the character\n`/`, contain the character `:` before the first `/`, or be entirely empty.\nThis type can appear in a relative-part when there is no authority\ncomponent.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,22],"name":".spago/uri/v8.0.1/src/URI/Path/NoScheme.purs","end":[19,80]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathNoScheme","moduleName":"URI.Path.NoScheme","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZNC"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pathrootless",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/uri/v8.0.1/src/URI/Path/Rootless.purs","end":[17,78]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathRootless","moduleName":"URI.Path.Rootless","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A relative path, corresponding to _path-rootless_ in the spec. This path\ncannot start with the character `/` or be entirely empty. This type can\nappear in a hierarchical-part when there is no authority component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,22],"name":".spago/uri/v8.0.1/src/URI/Path/Rootless.purs","end":[17,78]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathRootless","moduleName":"URI.Path.Rootless","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegmentNZ"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["URI","Path","Segment"],"PathSegment"]}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pathsegment",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[46,41]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathSegment","moduleName":"URI.Path.Segment","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A path segment. Can be empty, as this is required to represent some paths -\nsegments are joined together with slashes, so in cases where a path\ncontains multiple contiguous slashes this is represented by a group of\nempty path segments. Corresponds to _segment_ in the spec.\n"}],"tag":"SearchResult"}]],["pathsegmentnz",[{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[92,53]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathSegmentNZ","moduleName":"URI.Path.Segment","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A path segment that cannot be empty. Corresponds to _segment-nz_ in the\nspec.\n"}],"tag":"SearchResult"}]],["pathsegmentnznc",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/uri/v8.0.1/src/URI/Path/Segment.purs","end":[138,57]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"PathSegmentNZNC","moduleName":"URI.Path.Segment","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A path segment that cannot be empty or contain the `:` character.\nCorresponds to _segment-nz-nc_ in the spec.\n"}],"tag":"SearchResult"}]],["pattern",[{"values":[{"sourceSpan":{"start":[467,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[467,37]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List.Lazy","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases where there is a list to be matched.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[467,19],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[467,37]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List.Lazy","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[489,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[489,37]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases where there is a list to be matched.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[489,19],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[489,37]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Pattern.purs","end":[16,33]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"Pattern","moduleName":"Data.String.Pattern","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases where there is a string to be matched.\n\n```purescript\npursPattern = Pattern \".purs\"\n--can be used like this:\ncontains pursPattern \"Test.purs\"\n   == true\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,17],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Pattern.purs","end":[16,33]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"Pattern","moduleName":"Data.String.Pattern","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["observe",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/Meter.purs","end":[21,95]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"observe","moduleName":"OpenTelemetry.Metrics.Meter","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["d",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"ObserverResult"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Label"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["observerresult",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[76,43]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"ObserverResult","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[["a",null],["m",null],["d",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["least",[{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[193,48]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"least","moduleName":"Data.Sequence.Ordered","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Access the least element of the sequence, or Nothing if the sequence\nis empty.\n"}],"tag":"SearchResult"}]],["left",[{"values":[{"sourceSpan":{"start":[17,17],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[17,23]},"score":23,"packageInfo":{"values":["either"],"tag":"Package"},"name":"Left","moduleName":"Data.Either","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct.purs","end":[18,45]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"left","moduleName":"Data.Functor.Coproduct","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Left injection\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor/Choice.purs","end":[29,61]},"score":6,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"left","moduleName":"Data.Profunctor.Choice","info":{"values":[{"typeClassArguments":[["p",null]],"typeClass":[["Data","Profunctor","Choice"],"Choice"],"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Choice"],"Choice"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leftdiv",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/DivisionRing.purs","end":[40,51]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"leftDiv","moduleName":"Data.DivisionRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Left division, defined as `leftDiv a b = recip b * a`. Left and right\ndivision are distinct in this module because a `DivisionRing` is not\nnecessarily commutative.\n\nIf the type `a` is also a `EuclideanRing`, then this function is\nequivalent to `div` from the `EuclideanRing` class. When working\nabstractly, `div` should generally be preferred, unless you know that you\nneed your code to work with noncommutative rings.\n"}],"tag":"SearchResult"}]],["length",[{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[215,43]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"length","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[232,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[232,50]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"length","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the number of elements in an array.\n```purescript\nlength [\"Hello\", \"World\"] = 2\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatList.purs","end":[64,37]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"length","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Number of elements in queue.\n\nRunning time: `O(n)` in length of queue.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatQueue.purs","end":[63,38]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"length","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Number of elements in queue.\n\nRunning time: `O(n)` in length of queue.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[466,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[466,61]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"length","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the size/length of a finite structure.\nOptimized for structures that are similar to cons-lists, because there\nis no general way to do better.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[75,42]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[212,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[212,34]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the length of a list\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[169,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[169,42]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[197,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[197,34]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the length of a list\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[81,33]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"length","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). The number of elements in the sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[129,36]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"length","moduleName":"Data.Sequence.Ordered","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(n). Return the length of the sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[205,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[205,33]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"length","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). The number of elements in the sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[215,24]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points in the string. Operates in constant\nspace and in time linear to the length of the string.\n\n```purescript\n>>> length \"b 𝐀𝐀 c 𝐀\"\n8\n-- compare to Data.String:\n>>> length \"b 𝐀𝐀 c 𝐀\"\n11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodeUnits.purs","end":[150,39]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength \"Hello World\" == 11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[102,32]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[198,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[198,32]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength (NonEmptyString \"Hello World\") == 11\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[163,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[163,42]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"length","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[132,49]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"length","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the length of a list\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"}]],["lengthof",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Fold.purs","end":[132,68]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lengthOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The number of foci of a `Fold`.\n"}],"tag":"SearchResult"}]],["lens",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Lens.purs","end":[47,66]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lens","moduleName":"Data.Lens.Lens","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Lens` from a getter/setter pair.\n\n```purescript\n> species = lens _.species $ _ {species = _}\n> view species {species : \"bovine\"}\n\"bovine\"\n\n> _2 = lens Tuple.snd $ \\(Tuple keep _) new -> Tuple keep new\n```\n\nNote: `_2` is predefined in `Data.Lens.Tuple`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[60,58]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Lens","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Strong"],"Strong"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Given a type whose \"focus element\" always exists,\na lens provides a convenient way to view, set, and transform\nthat element.\n\nFor example, `_2` is a tuple-specific `Lens` available from `Data.Lens`, so:\n```purescript\nover _2 String.length $ Tuple \"ignore\" \"four\" == Tuple \"ignore\" 4\n```\nNote the result has a different type than the original tuple.\nThat is, the four `Lens` type variables have been narrowed to:\n\n* `s` is `Tuple String String`\n* `t` is `Tuple String Int`\n* `a` is `String`\n* `b` is `Int`\n\nSee `Data.Lens.Getter` and `Data.Lens.Setter` for functions and operators\nfrequently used with lenses.\n"}],"tag":"SearchResult"}]],["lens'",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Lens.purs","end":[50,65]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lens'","moduleName":"Data.Lens.Lens","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[87,30]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Lens'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"`Lens'` is a specialization of `Lens`. An optic of type `Lens'`\ncan change only the value of its focus,\nnot its type. As an example, consider the `Lens` `_2`, which has this type:\n\n```purescript\n_2 :: forall s t a b. Lens (Tuple s a) (Tuple t b) a b\n```\n\n`_2` can produce a `Tuple Int String` from a `Tuple Int Int`:\n\n```purescript\nset _2 \"NEW\" (Tuple 1 2) == (Tuple 1 \"NEW\")\n```\n\nIf we specialize `_2`'s type with `Lens'`, the following will not\ntype check:\n\n```purescript\nset (_2 :: Lens' (Tuple Int Int) Int) \"NEW\" (Tuple 1 2)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\nSee `Data.Lens.Getter` and `Data.Lens.Setter` for functions and operators\nfrequently used with lenses.\n"}],"tag":"SearchResult"}]],["lensstore",[{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Lens.purs","end":[99,68]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lensStore","moduleName":"Data.Lens.Lens","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"ALens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a lens into the form that `lens'` accepts.\n\nCan be useful when defining a lens where the focus appears under multiple\nconstructors of an algebraic data type.  This function would be called for\neach case of the data type.\n\nFor example:\n\n```\ndata LensStoreExample = LensStoreA Int | LensStoreB (Tuple Boolean Int)\n\nlensStoreExampleInt :: Lens' LensStoreExample Int\nlensStoreExampleInt = lens' case _ of\n  LensStoreA i -> map LensStoreA <$> lensStore identity i\n  LensStoreB i -> map LensStoreB <$> lensStore _2 i\n```\n"}],"tag":"SearchResult"}]],["lessthan",[{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[131,49]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"lessThan","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _strictly less than_ another.\n"}],"tag":"SearchResult"}]],["lessthanoreq",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[143,53]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"lessThanOrEq","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _non-strictly less than_ another.\n"}],"tag":"SearchResult"}]],["letter",[{"values":[{"sourceSpan":{"start":[812,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Token.purs","end":[812,54]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"letter","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an alphabetical character.  Matches any char that satisfies `Data.CodePoint.Unicode.isAlpha`.\n"}],"tag":"SearchResult"}]],["letternumber",[{"values":[{"sourceSpan":{"start":[120,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[120,23]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"LetterNumber","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hibernate",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Loop.purs","end":[26,63]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"hibernate","moduleName":"Erl.Cowboy.Handlers.Loop","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Loop"],"InitResult"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[101,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[101,14]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Hibernate","moduleName":"Pinto.GenServer","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[343,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[343,14]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Hibernate","moduleName":"Pinto.GenStatem","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,3],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[192,14]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"Hibernate","moduleName":"Stetson.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"state"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hibernateresult",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[110,62]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"hibernateResult","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"CallResult"]},{"tag":"TypeVar","contents":"s"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hierarchicalpart",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[46,44]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierarchicalPart","moduleName":"URI.HierarchicalPart","info":{"values":[{"typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The \"hierarchical part\" of a generic or absolute URI. This combines an\nauthority (optional) with a path value.\n\nWhen the authority is present a generic path representation can be used,\notherwise there are some restrictions on the path construction to ensure\nno ambiguity in parsing (this is per the spec, not a restriction of the\nlibrary).\n"}],"tag":"SearchResult"}]],["hierarchicalpartauth",[{"values":[{"sourceSpan":{"start":[45,3],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[45,25]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierarchicalPartAuth","moduleName":"URI.HierarchicalPart","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}},{"tag":"TypeVar","contents":"path"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hierarchicalpartnoauth",[{"values":[{"sourceSpan":{"start":[46,3],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[46,27]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierarchicalPartNoAuth","moduleName":"URI.HierarchicalPart","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"hierPath"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hierarchicalpartoptions",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[60,67]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierarchicalPartOptions","moduleName":"URI.HierarchicalPart","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPartPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"REmpty","contents":{}}]}}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the hierarchical-part\nparser and printer.\n\nUsed as `Record (HierarchicalPartOptions userInfo hosts path hierPath)`\nwhen type anotating an options record.\n"}],"tag":"SearchResult"}]],["hierarchicalpartparseoptions",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[73,4]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierarchicalPartParseOptions","moduleName":"URI.HierarchicalPart","info":{"values":[{"type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the hierarchical-part\nparser.\n\nUsed as `Record (HierarchicalPartParseOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n"}],"tag":"SearchResult"}]],["hierarchicalpartprintoptions",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[86,4]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierarchicalPartPrintOptions","moduleName":"URI.HierarchicalPart","info":{"values":[{"type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierPath"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the hierarchical-part\nprinter.\n\nUsed as `Record (HierarchicalPartPrintOptions userInfo hosts path hierPath ())`\nwhen type anotating an options record.\n"}],"tag":"SearchResult"}]],["hierpath",[{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/uri/v8.0.1/src/URI/HierarchicalPart.purs","end":[92,49]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"HierPath","moduleName":"URI.HierarchicalPart","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The specific path types supported in a hierarchical-part when there is no\nauthority present. See [`URI.Path.Absolute`](../URI.Path.Absolute) and\n[`URI.Path.Rootless`](../URI.Path.Rootless) for an explanation of these\nforms.\n"}],"tag":"SearchResult"}]],["elem",[{"values":[{"sourceSpan":{"start":[264,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[264,58]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elem","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[414,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[414,50]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elem","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns true if the array has the given element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[386,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[386,62]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"elem","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a value is an element of a data structure.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Internal.purs","end":[54,24]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Elem","moduleName":"Data.Sequence.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,16],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Internal.purs","end":[54,24]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Elem","moduleName":"Data.Sequence.Internal","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["element",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Traversal.purs","end":[117,21]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"element","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Internal","Wander"],"Wander"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine an index and a traversal to narrow the focus to a single\nelement. Compare to `Data.Lens.Index`.\n\n```purescript\nset     (element 2 traversed) 8888 [0, 0, 3] == [0, 0, 8888]\npreview (element 2 traversed)      [0, 0, 3] == Just 3\n```\nThe resulting traversal is called an *affine traversal*, which\nmeans that the traversal focuses on one or zero (if the index is out of range)\nresults.\n"}],"tag":"SearchResult"}]],["elements",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen.purs","end":[74,66]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"elements","moduleName":"Control.Monad.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a generator that outputs a value chosen from a selection with\nuniform probability.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[216,47]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"elements","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which selects a value from a non-empty array with\nuniform probability.\n"}],"tag":"SearchResult"}]],["elementsof",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Traversal.purs","end":[126,30]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"elementsOf","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Internal","Wander"],"Wander"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedTraversal"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedOptic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse elements of an `IndexedTraversal` whose index satisfy a predicate.\n"}],"tag":"SearchResult"}]],["elemindex",[{"values":[{"sourceSpan":{"start":[270,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[270,65]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[428,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[428,57]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n\n```purescript\nelemIndex \"a\" [\"a\", \"b\", \"a\", \"c\"] = Just 0\nelemIndex \"Earth\" [\"Hello\", \"World\", \"!\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[310,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[310,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[179,64]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[294,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[173,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[173,64]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[224,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[224,56]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n"}],"tag":"SearchResult"}]],["elemlastindex",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[273,69]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[438,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[438,61]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n\n```purescript\nelemLastIndex \"a\" [\"a\", \"b\", \"a\", \"c\"] = Just 2\nelemLastIndex \"Earth\" [\"Hello\", \"World\", \"!\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[314,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[314,60]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[182,68]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[298,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[298,60]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[176,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[176,68]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[228,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[228,60]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n"}],"tag":"SearchResult"}]],["elemof",[{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Fold.purs","end":[116,83]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"elemOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Whether a `Fold` contains a given element.\n"}],"tag":"SearchResult"}]],["elidedinitresult",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[27,45]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"ElidedInitResult","moduleName":"Stetson.HandlerProxy","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["eloop",[{"values":[{"sourceSpan":{"start":[51,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[51,10]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"ELoop","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["body",[{"values":[{"sourceSpan":{"start":[659,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[659,9]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Body","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bodywithtrailers",[{"values":[{"sourceSpan":{"start":[660,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[660,21]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"BodyWithTrailers","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Trailers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["boolean",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Boolean","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A JavaScript Boolean value.\n\nConstruct values of this type with the literals `true` and `false`.\n\nThe `True` and `False` types defined in `Prim.Boolean` have this type as their kind.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[260,43]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"boolean","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[292,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[292,55]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"boolean","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Refines a codec of Strings to Booleans, where `true` and `false` are the\nstrings `\"true\"` and `\"false\"`, and other strings are rejected.\n\n```purescript\nparse (boolean segment) \"true\"  == Right true\nparse (boolean segment) \"x\"     == Left (Expected \"Boolean\" \"x\")\n\nprint (boolean segment) true    == \"true\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Attributes.purs","end":[23,32]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"boolean","moduleName":"Tracing.Attributes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Attribute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A Boolean attribute, which is to say a restricted sort of atom.\n"}],"tag":"SearchResult"}]],["booleanalgebra",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/BooleanAlgebra.purs","end":[22,43]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"BooleanAlgebra","moduleName":"Data.BooleanAlgebra","info":{"values":[{"superclasses":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `BooleanAlgebra` type class represents types that behave like boolean\nvalues.\n\nInstances should satisfy the following laws in addition to the\n`HeytingAlgebra` law:\n\n- Excluded middle:\n  - `a || not a = tt`\n"}],"tag":"SearchResult"}]],["booleanalgebrarecord",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/BooleanAlgebra.purs","end":[35,109]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"BooleanAlgebraRecord","moduleName":"Data.BooleanAlgebra","info":{"values":[{"superclasses":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]}],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `BooleanAlgebra` instances, used\nto implement the `BooleanAlgebra` instance for records.\n"}],"tag":"SearchResult"}]],["both",[{"values":[{"sourceSpan":{"start":[151,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Traversal.purs","end":[151,71]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"both","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,3],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[18,9]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"Both","moduleName":"Data.These","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[161,51]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"both","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `a` and `b` values if and only if they are constructed\nwith `Both`.\n"}],"tag":"SearchResult"}]],["bottom",[{"values":[{"sourceSpan":{"start":[25,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Bounded.purs","end":[25,14]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"bottom","moduleName":"Data.Bounded","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Bounded"],"Bounded"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bottomrecord",[{"values":[{"sourceSpan":{"start":[63,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Bounded.purs","end":[63,88]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"bottomRecord","moduleName":"Data.Bounded","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Bounded"],"BoundedRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rproxy",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bounded"],"BoundedRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rproxy"},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bound",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/Counter.purs","end":[13,78]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Bound","moduleName":"OpenTelemetry.Metrics.Counter","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"BoundInstrument"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Synchronous"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Additive"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Monotonic"]}]},{"tag":"TypeVar","contents":"d"}]},"arguments":[["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/SumObserver.purs","end":[13,79]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Bound","moduleName":"OpenTelemetry.Metrics.SumObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"BoundInstrument"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Asynchronous"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Additive"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Monotonic"]}]},{"tag":"TypeVar","contents":"d"}]},"arguments":[["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/UpDownCounter.purs","end":[13,81]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Bound","moduleName":"OpenTelemetry.Metrics.UpDownCounter","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"BoundInstrument"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Synchronous"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Additive"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"NonMonotonic"]}]},{"tag":"TypeVar","contents":"d"}]},"arguments":[["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/UpDownSumObserver.purs","end":[13,82]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Bound","moduleName":"OpenTelemetry.Metrics.UpDownSumObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"BoundInstrument"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Asynchronous"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Additive"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"NonMonotonic"]}]},{"tag":"TypeVar","contents":"d"}]},"arguments":[["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/ValueObserver.purs","end":[13,85]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Bound","moduleName":"OpenTelemetry.Metrics.ValueObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"BoundInstrument"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Asynchronous"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"NonAdditive"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"NonMonotonic"]}]},{"tag":"TypeVar","contents":"d"}]},"arguments":[["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics/ValueRecorder.purs","end":[8,84]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Bound","moduleName":"OpenTelemetry.Metrics.ValueRecorder","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"BoundInstrument"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Synchronous"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"NonAdditive"]}]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"NonMonotonic"]}]},{"tag":"TypeVar","contents":"d"}]},"arguments":[["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["bounded",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Bounded.purs","end":[25,14]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Bounded","moduleName":"Data.Bounded","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Bounded` type class represents totally ordered types that have an\nupper and lower boundary.\n\nInstances should satisfy the following law in addition to the `Ord` laws:\n\n- Bounded: `bottom <= a <= top`\n"}],"tag":"SearchResult"}]],["boundeddict",[{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/variant/v7.0.3/src/Data/Variant/Internal.purs","end":[265,4]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"BoundedDict","moduleName":"Data.Variant.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["top",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["bottom",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["boundedenum",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[116,23]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"BoundedEnum","moduleName":"Data.Enum","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Type class for finite enumerations.\n\nThis should not be considered a part of a numeric hierarchy, as in Haskell.\nRather, this is a type class for small, ordered sum types with\nstatically-determined cardinality and the ability to easily compute\nsuccessor and predecessor elements like `DayOfWeek`.\n\nLaws:\n\n- ```succ bottom >>= succ >>= succ ... succ [cardinality - 1 times] == top```\n- ```pred top    >>= pred >>= pred ... pred [cardinality - 1 times] == bottom```\n- ```forall a > bottom: pred a >>= succ == Just a```\n- ```forall a < top:  succ a >>= pred == Just a```\n- ```forall a > bottom: fromEnum <$> pred a = pred (fromEnum a)```\n- ```forall a < top:  fromEnum <$> succ a = succ (fromEnum a)```\n- ```e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2```\n- ```toEnum (fromEnum a) = Just a```\n"}],"tag":"SearchResult"}]],["boundedenumdict",[{"values":[{"sourceSpan":{"start":[267,1],"name":".spago/variant/v7.0.3/src/Data/Variant/Internal.purs","end":[273,4]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"BoundedEnumDict","moduleName":"Data.Variant.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pred",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"RCons","contents":["succ",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"RCons","contents":["fromEnum",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["toEnum",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"RCons","contents":["cardinality",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["boundedrecord",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Bounded.purs","end":[63,88]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"BoundedRecord","moduleName":"Data.Bounded","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ord"],"OrdRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]}],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["boundinstrument",[{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[73,78]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"BoundInstrument","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[["s",null],["a",null],["m",null],["d",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ap",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Monad.purs","end":[82,56]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"ap","moduleName":"Control.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`ap` provides a default implementation of `(<*>)` for any `Monad`, without\nusing `(<*>)` as provided by the `Apply`-`Monad` superclass relationship.\n\n`ap` can therefore be used to write `Apply` instances as follows:\n\n```purescript\ninstance applyF :: Apply F where\n  apply = ap\n```\n"}],"tag":"SearchResult"}]],["app",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/functors/v4.1.1/src/Data/Functor/App.purs","end":[19,28]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"App","moduleName":"Data.Functor.App","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,17],"name":".spago/functors/v4.1.1/src/Data/Functor/App.purs","end":[19,28]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"App","moduleName":"Data.Functor.App","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["app3",[{"values":[{"sourceSpan":{"start":[372,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[373,70]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"app3","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["append",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatList.purs","end":[71,56]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"append","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append all elements of a catenable list to the end of another\ncatenable list, create a new catenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[400,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[401,59]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"append","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Semigroup.purs","end":[32,24]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"append","moduleName":"Data.Semigroup","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semigroup"],"Semigroup"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[77,44]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"append","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(log(min(i,n-i))). Join two sequence values together.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[190,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[190,44]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"append","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(log(min(n1,n2)), where n1 and n2 are the lengths of the arguments. Join\ntwo Seqs together.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[156,11]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Append","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Append","moduleName":"Prim.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["left","right"],["appended"]],[["right","appended"],["left"]],[["appended","left"],["right"]]],"arguments":[["left",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["right",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["appended",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for appending `Symbol`s together.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Ordering.purs","end":[43,48]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Append","moduleName":"Type.Data.Ordering","info":{"values":[{"superclasses":[],"fundeps":[[["lhs"],["rhs","output"]]],"arguments":[["lhs",null],["rhs",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Append two `Ordering` types together\nReflective of the semigroup for value level `Ordering`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Ordering.purs","end":[48,76]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"append","moduleName":"Type.Data.Ordering","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Ordering"],"Append"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Symbol.purs","end":[20,76]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"append","moduleName":"Type.Data.Symbol","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Symbol"],"Append"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["append_",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Binary/IOData.purs","end":[19,53]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"append_","moduleName":"Erl.Data.Binary.IOData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","IOData"],"IOData"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendarray",[{"values":[{"sourceSpan":{"start":[232,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[232,71]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"appendArray","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendfoldable",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[81,84]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"appendFoldable","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[234,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[234,84]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"appendFoldable","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[228,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[228,84]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"appendFoldable","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendmodifying",[{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Setter.purs","end":[140,93]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"appendModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendover",[{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Setter.purs","end":[106,73]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"appendOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendpath",[{"values":[{"sourceSpan":{"start":[163,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[163,79]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"appendPath","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pathy","Phantom"],"IsRelOrAbs"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Rel"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given a directory path, appends a relative path to extend the original\npath.\n"}],"tag":"SearchResult"}]],["appendrecord",[{"values":[{"sourceSpan":{"start":[70,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Semigroup.purs","end":[70,95]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"appendRecord","moduleName":"Data.Semigroup","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Semigroup"],"SemigroupRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"SemigroupRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendstring",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[89,59]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"appendString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends a string to this non-empty string. Since one of the strings is\nnon-empty we know the result will be too.\n\n```purescript\nappendString (NonEmptyString \"Hello\") \" world\" == NonEmptyString \"Hello world\"\nappendString (NonEmptyString \"Hello\") \"\" == NonEmptyString \"Hello\"\n```\n"}],"tag":"SearchResult"}]],["applevelprotocol",[{"values":[{"sourceSpan":{"start":[733,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[734,11]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"AppLevelProtocol","moduleName":"Erl.Ssl","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["applicationformurlencoded",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[6,39]},"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationFormURLEncoded","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/x-www-form-urlencoded` media type.\n"}],"tag":"SearchResult"}]],["applicationjavascript",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[14,35]},"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationJavascript","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/javascript` media type.\n"}],"tag":"SearchResult"}]],["applicationjson",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[10,29]},"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationJSON","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/json` media type.\n"}],"tag":"SearchResult"}]],["applicationoctetstream",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[18,36]},"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationOctetStream","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/octet-stream` media type.\n"}],"tag":"SearchResult"}]],["applicationxml",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[22,28]},"score":0,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationXML","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/xml` media type.\n"}],"tag":"SearchResult"}]],["applicative",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Applicative.purs","end":[34,29]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Applicative","moduleName":"Control.Applicative","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Applicative` type class extends the [`Apply`](#apply) type class\nwith a `pure` function, which can be used to create values of type `f a`\nfrom values of type `a`.\n\nWhere [`Apply`](#apply) provides the ability to lift functions of two or\nmore arguments to functions whose arguments are wrapped using `f`, and\n[`Functor`](#functor) provides the ability to lift functions of one\nargument, `pure` can be seen as the function which lifts functions of\n_zero_ arguments. That is, `Applicative` functors support a lifting\noperation for any number of function arguments.\n\nInstances must satisfy the following laws in addition to the `Apply`\nlaws:\n\n- Identity: `(pure identity) <*> v = v`\n- Composition: `pure (<<<) <*> f <*> g <*> h = f <*> (g <*> h)`\n- Homomorphism: `(pure f) <*> (pure x) = pure (f x)`\n- Interchange: `u <*> (pure y) = (pure (_ $ y)) <*> u`\n"}],"tag":"SearchResult"}]],["apply",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Apply.purs","end":[46,48]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Apply","moduleName":"Control.Apply","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Apply` class provides the `(<*>)` which is used to apply a function\nto an argument under a type constructor.\n\n`Apply` can be used to lift functions of two or more arguments to work on\nvalues wrapped with the type constructor `f`. It might also be understood\nin terms of the `lift2` function:\n\n```purescript\nlift2 :: forall f a b c. Apply f => (a -> b -> c) -> f a -> f b -> f c\nlift2 f a b = f <$> a <*> b\n```\n\n`(<*>)` is recovered from `lift2` as `lift2 ($)`. That is, `(<*>)` lifts\nthe function application operator `($)` to arguments wrapped with the\ntype constructor `f`.\n\nPut differently...\n```\nfoo =\n  functionTakingNArguments <$> computationProducingArg1\n                           <*> computationProducingArg2\n                           <*> ...\n                           <*> computationProducingArgN\n```\n\nInstances must satisfy the following law in addition to the `Functor`\nlaws:\n\n- Associative composition: `(<<<) <$> f <*> g <*> h = f <*> (g <*> h)`\n\nFormally, `Apply` represents a strong lax semi-monoidal endofunctor.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[46,3],"name":".spago/prelude/v5.0.1-erl1/src/Control/Apply.purs","end":[46,48]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"apply","moduleName":"Control.Apply","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Control","Apply"],"Apply"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Function.purs","end":[46,40]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"apply","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Applies a function to an argument. This is primarily used as the operator\n`($)` which allows parentheses to be omitted in some cases, or as a\nnatural way to apply a chain of composed functions to a value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[94,8]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"Apply","moduleName":"Erl.Untagged.Union","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Function.purs","end":[10,21]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"APPLY","moduleName":"Type.Function","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},"arguments":[["f",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Polymorphic Type application\n\nFor example...\n```\nAPPLY Maybe Int == Maybe $ Int == Maybe Int\n```\n"}],"tag":"SearchResult"}]],["applyeither",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/filterable/v3.0.1/src/Data/Compactable.purs","end":[137,62]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"applyEither","moduleName":"Data.Compactable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Compactable"],"Compactable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"r"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["left",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"l"}]},{"tag":"RCons","contents":["right",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["applyfirst",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Apply.purs","end":[62,57]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applyFirst","moduleName":"Control.Apply","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two effectful actions, keeping only the result of the first.\n"}],"tag":"SearchResult"}]],["applyflipped",[{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Function.purs","end":[72,47]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applyFlipped","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Applies an argument to a function. This is primarily used as the `(#)`\noperator, which allows parentheses to be omitted in some cases, or as a\nnatural way to apply a value to a chain of composed functions.\n"}],"tag":"SearchResult"}]],["applyloopinit",[{"values":[{"sourceSpan":{"start":[305,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[305,101]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"applyLoopInit","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandlerCallbacks"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"state"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["applymaybe",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/filterable/v3.0.1/src/Data/Compactable.purs","end":[133,33]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"applyMaybe","moduleName":"Data.Compactable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Compactable"],"Compactable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["applyn",[{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Function.purs","end":[102,46]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applyN","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`applyN f n` applies the function `f` to its argument `n` times.\n\nIf n is less than or equal to 0, the function is not applied.\n\n```purescript\napplyN (_ + 1) 10 0 == 10\n```\n"}],"tag":"SearchResult"}]],["applysecond",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Apply.purs","end":[68,58]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applySecond","moduleName":"Control.Apply","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two effectful actions, keeping only the result of the second.\n"}],"tag":"SearchResult"}]],["april",[{"values":[{"sourceSpan":{"start":[50,3],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[50,10]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"April","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["aprism",[{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[135,49]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"APrism","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Internal","Market"],"Market"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A prism defined in terms of `Market` to be safe from impredicativity\nissues in the type checker. See the `docs/` folder for a more detailed\nexplanation.\n"}],"tag":"SearchResult"}]],["aprism'",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[136,34]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"APrism'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["_relpart",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/uri/v8.0.1/src/URI/RelativeRef.purs","end":[124,49]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_relPart","moduleName":"URI.RelativeRef","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["relPath",{"tag":"ForAll","contents":["query",{"tag":"ForAll","contents":["fragment",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativeRef"],"RelativeRef"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeVar","contents":"fragment"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The relative-part component of a relative URI.\n"}],"tag":"SearchResult"}]],["_relpath",[{"values":[{"sourceSpan":{"start":[146,1],"name":".spago/uri/v8.0.1/src/URI/RelativePart.purs","end":[150,22]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_relPath","moduleName":"URI.RelativePart","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"ForAll","contents":["path",{"tag":"ForAll","contents":["relPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","RelativePart"],"RelativePart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"relPath"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"relPath"}]}}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An affine traversal for the path component of a relative-part, this\nsucceeds when the authority is not present.\n"}],"tag":"SearchResult"}]],["_right",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Prism/Coproduct.purs","end":[15,80]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_Right","moduleName":"Data.Lens.Prism.Coproduct","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prism for the `right` of a `Coproduct`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Prism/Either.purs","end":[16,60]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_Right","moduleName":"Data.Lens.Prism.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prism for the `Right` constructor of `Either`.\n"}],"tag":"SearchResult"}]],[".?",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Decode/Combinators.purs","end":[23,23]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"(.?)","moduleName":"Erl.Data.Jsone.Decode.Combinators","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],[".??",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Decode/Combinators.purs","end":[34,32]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"(.??)","moduleName":"Erl.Data.Jsone.Decode.Combinators","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
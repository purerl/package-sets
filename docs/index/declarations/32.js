// This file was generated by purescript-docs-search.
window.DocsSearchIndex["32"] = [["yoneda",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/free/v6.0.1/src/Data/Yoneda.purs","end":[21,56]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Yoneda","moduleName":"Data.Yoneda","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The Yoneda `Functor`\n\n`Yoneda f` is a `Functor` for any type constructor `f`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Yoneda","moduleName":"Data.Yoneda","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["use",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Getter.purs","end":[44,65]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"use","moduleName":"Data.Lens.Getter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Getter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"View the focus of a `Getter` in the state of a monad.\n"}],"tag":"SearchResult"}]],["userinfo",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[28,43]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"UserInfo","moduleName":"URI.UserInfo","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The user info part of an `Authority`. For example: `user`, `foo:bar`.\n\nThis type treats the entire string as an undifferentiated blob, if you\nwould like to specifically deal with the `user:password` format, take a\nlook at `URI.Extra.UserPassInfo`.\n"}],"tag":"SearchResult"}]],["userinfochar",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/uri/v8.0.1/src/URI/UserInfo.purs","end":[85,34]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"userInfoChar","moduleName":"URI.UserInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The supported user info characters, excluding percent-encodings.\n"}],"tag":"SearchResult"}]],["userlookupfn",[{"values":[{"sourceSpan":{"start":[402,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[411,6]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"UserLookupFn","moduleName":"Erl.Ssl","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["userpassinfo",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/uri/v8.0.1/src/URI/Extra/UserPassInfo.purs","end":[37,6]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"UserPassInfo","moduleName":"URI.Extra.UserPassInfo","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`user:password` formatted user-info components for URI authorities.\n\nThis format is considered deprecated according to RFC3986 but is still\nvery common, so this is provided for cases where it is necessary.\n\nThe username part is required, so a value like `:hello` will fail to parse\nfor this type.\n\nThe `:` characer will be percent-encoded in all locations other than the\n`user:password` separator, although the parser will accept passwords\ncontaining un-encoded `:` characters.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"UserPassInfo","moduleName":"URI.Extra.UserPassInfo","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["user",{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]},{"tag":"RCons","contents":["password",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["userpassinfochar",[{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/uri/v8.0.1/src/URI/Extra/UserPassInfo.purs","end":[78,38]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"userPassInfoChar","moduleName":"URI.Extra.UserPassInfo","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The supported user/password characters, excluding percent-encodings.\n"}],"tag":"SearchResult"}]],["tt",[{"values":[{"sourceSpan":{"start":[40,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/HeytingAlgebra.purs","end":[40,10]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"tt","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ttl",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Ttl","moduleName":"Erl.Kernel.Udp","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ttrecord",[{"values":[{"sourceSpan":{"start":[114,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/HeytingAlgebra.purs","end":[114,84]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"ttRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rproxy",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rproxy"},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["sub",[{"values":[{"sourceSpan":{"start":[24,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ring.purs","end":[24,21]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"sub","moduleName":"Data.Ring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Ring"],"Ring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["subdelims",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/uri/v8.0.1/src/URI/Common.purs","end":[75,31]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"subDelims","moduleName":"URI.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parser for the \"sub-delims\" group of reserved characters.\n"}],"tag":"SearchResult"}]],["submap",[{"values":[{"sourceSpan":{"start":[415,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[415,72]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"submap","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"k"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"k"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a new map containing all entries of the given map which lie\nbetween a given lower and upper bound, treating `Nothing` as no bound i.e.\nincluding the smallest (or largest) key in the map, no matter how small\n(or large) it is. For example:\n\n```purescript\nsubmap (Just 1) (Just 2)\n  (fromFoldable [Tuple 0 \"zero\", Tuple 1 \"one\", Tuple 2 \"two\", Tuple 3 \"three\"])\n  == fromFoldable [Tuple 1 \"one\", Tuple 2 \"two\"]\n\nsubmap Nothing (Just 2)\n  (fromFoldable [Tuple 0 \"zero\", Tuple 1 \"one\", Tuple 2 \"two\", Tuple 3 \"three\"])\n  == fromFoldable [Tuple 0 \"zero\", Tuple 1 \"one\", Tuple 2 \"two\"]\n```\n\nThe function is entirely specified by the following\nproperty:\n\n```purescript\nGiven any m :: Map k v, mmin :: Maybe k, mmax :: Maybe k, key :: k,\n  let m' = submap mmin mmax m in\n    if (maybe true (\\min -> min <= key) mmin &&\n        maybe true (\\max -> max >= key) mmax)\n      then lookup key m == lookup key m'\n      else not (member key m')\n```\n"}],"tag":"SearchResult"}]],["submodifying",[{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Setter.purs","end":[108,85]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"subModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["subover",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Setter.purs","end":[74,65]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"subOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["subrecord",[{"values":[{"sourceSpan":{"start":[63,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ring.purs","end":[63,92]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"subRecord","moduleName":"Data.Ring","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Ring"],"RingRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"RingRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["subscribe",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/erl-simplebus/v0.0.3/src/SimpleBus.purs","end":[40,20]},"score":0,"packageInfo":{"values":["erl-simplebus"],"tag":"Package"},"name":"subscribe","moduleName":"SimpleBus","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["name",{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["msgOut",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Process"],"HasSelf"],"constraintArgs":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"msgOut"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["SimpleBus"],"Bus"]},{"tag":"TypeVar","contents":"name"}]},{"tag":"TypeVar","contents":"msg"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"msgOut"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["SimpleBus"],"SubscriptionRef"]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["subscriptionref",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/erl-simplebus/v0.0.3/src/SimpleBus.purs","end":[22,24]},"score":0,"packageInfo":{"values":["erl-simplebus"],"tag":"Package"},"name":"SubscriptionRef","moduleName":"SimpleBus","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["subset",[{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set/NonEmpty.purs","end":[142,71]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"subset","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"True if and only if every element in the first set is an element of the\nsecond set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set.purs","end":[157,55]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"subset","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"True if and only if every element in the first set\nis an element of the second set\n"}],"tag":"SearchResult"}]],["substfree",[{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/free/v6.0.1/src/Control/Monad/Free.purs","end":[164,59]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"substFree","moduleName":"Control.Monad.Free","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"g"}]}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"g"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Like `foldFree`, but for folding into some other Free monad without the\noverhead that `MonadRec` incurs.\n"}],"tag":"SearchResult"}]],["succ",[{"values":[{"sourceSpan":{"start":[51,3],"name":".spago/enums/v5.0.0-erl1/src/Data/Enum.purs","end":[51,23]},"score":5,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"succ","moduleName":"Data.Enum","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Enum"],"Enum"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["success",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"Success","moduleName":"Routing.Duplex.Parser","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Success","moduleName":"Test.QuickCheck","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["suchthat",[{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen.purs","end":[109,81]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"suchThat","moduleName":"Control.Monad.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a generator that repeatedly run another generator until its output\nmatches a given predicate. This will never halt if the predicate always\nfails.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[107,55]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"suchThat","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Ensure that a generator only produces values that match a predicate. If\nthe predicate always returns false the generator will loop forever.\n"}],"tag":"SearchResult"}]],["suffix",[{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[106,67]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"suffix","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to `prefix`. Strips (when parsing) or adds (when printing) a given\nstring segment from the end of the path. The same precautions for `prefix` apply here.\n"}],"tag":"SearchResult"}]],["suite",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/erl-test-eunit/v0.0.4/src/Erl/Test/EUnit.purs","end":[60,42]},"score":0,"packageInfo":{"values":["erl-test-eunit"],"tag":"Package"},"name":"suite","moduleName":"Erl.Test.EUnit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["sum",[{"values":[{"sourceSpan":{"start":[378,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[378,56]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"sum","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the sum of the numeric values in a data structure.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[29,29]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Sum","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[["a",null],["b",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for types with multiple constructors.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Generic.purs","end":[17,17]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"sum","moduleName":"Routing.Duplex.Generic","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["rep",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"rep"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Routing","Duplex","Generic"],"GRouteDuplex"],"constraintArgs":[{"tag":"TypeVar","contents":"rep"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["sumof",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Fold.purs","end":[89,75]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"sumOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The sum of all foci of a `Fold`.\n"}],"tag":"SearchResult"}]],["sunday",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Sunday","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["supervisor",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-otp-types"],"tag":"Package"},"name":"Supervisor","moduleName":"Erl.Otp.Types.Stdlib","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Supervisor","moduleName":"Pinto.Supervisor","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["supervisorpid",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor/SimpleOneForOne.purs","end":[30,22]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorPid","moduleName":"Pinto.Supervisor.SimpleOneForOne","info":{"values":[{"typeArguments":[["childStartArg",null],["childProcess",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[112,22]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorPid","moduleName":"Pinto.Supervisor","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supervisorref",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor/SimpleOneForOne.purs","end":[35,109]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorRef","moduleName":"Pinto.Supervisor.SimpleOneForOne","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","Types"],"RegistryReference"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","Supervisor","SimpleOneForOne"],"SupervisorPid"]},{"tag":"TypeVar","contents":"childStartArg"}]},{"tag":"TypeVar","contents":"childProcess"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","Supervisor","SimpleOneForOne"],"SupervisorType"]},{"tag":"TypeVar","contents":"childStartArg"}]},{"tag":"TypeVar","contents":"childProcess"}]}}]},"arguments":[["childStartArg",null],["childProcess",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[117,51]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorRef","moduleName":"Pinto.Supervisor","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","Types"],"RegistryReference"]},{"tag":"TypeConstructor","contents":[["Pinto","Supervisor"],"SupervisorPid"]}]},{"tag":"TypeConstructor","contents":[["Pinto","Supervisor"],"SupervisorType"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supervisorspec",[{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[126,6]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorSpec","moduleName":"Pinto.Supervisor","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["flags",{"tag":"TypeConstructor","contents":[["Pinto","Supervisor"],"Flags"]},{"tag":"RCons","contents":["childSpecs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Pinto","Supervisor"],"ErlChildSpec"]}]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A complete specification for a supervisor, see `Result` in the underlying supervisor API\n"}],"tag":"SearchResult"}]],["supervisortype",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor/SimpleOneForOne.purs","end":[26,24]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorType","moduleName":"Pinto.Supervisor.SimpleOneForOne","info":{"values":[{"typeArguments":[["childStartArg",null],["childProcess",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[109,24]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupervisorType","moduleName":"Pinto.Supervisor","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supportsaddtimeout",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[101,97]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupportsAddTimeout","moduleName":"Pinto.GenStatem","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["builder",null],["timerContent",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supportsnewactions",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[116,24]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupportsNewActions","moduleName":"Pinto.GenStatem","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["builder",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supportsnextevent",[{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[104,46]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupportsNextEvent","moduleName":"Pinto.GenStatem","info":{"values":[{"superclasses":[],"fundeps":[[["builder"],["event"]]],"arguments":[["builder",null],["event",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supportsreply",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[98,42]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupportsReply","moduleName":"Pinto.GenStatem","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["builder",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["supportsself",[{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[108,161]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"SupportsSelf","moduleName":"Pinto.GenStatem","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["context",null],["info",null],["internal",null],["timerName",null],["timerContent",null],["commonData",null],["stateId",null],["state",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["surrogate",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"Surrogate","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["surround",[{"values":[{"sourceSpan":{"start":[352,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[352,67]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"surround","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`fold` but with each element surrounded by some fixed value.\n\nFor example:\n\n```purescript\n> surround \"*\" []\n= \"*\"\n\n> surround \"*\" [\"1\"]\n= \"*1*\"\n\n> surround \"*\" [\"1\", \"2\"]\n= \"*1*2*\"\n\n> surround \"*\" [\"1\", \"2\", \"3\"]\n= \"*1*2*3*\"\n```\n"}],"tag":"SearchResult"}]],["surroundmap",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[331,84]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"surroundMap","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`foldMap` but with each element surrounded by some fixed value.\n\nFor example:\n\n```purescript\n> surroundMap \"*\" show []\n= \"*\"\n\n> surroundMap \"*\" show [1]\n= \"*1*\"\n\n> surroundMap \"*\" show [1, 2]\n= \"*1*2*\"\n\n> surroundMap \"*\" show [1, 2, 3]\n= \"*1*2*3*\"\n```\n"}],"tag":"SearchResult"}]],["surroundmapwithindex",[{"values":[{"sourceSpan":{"start":[281,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/FoldableWithIndex.purs","end":[288,7]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"surroundMapWithIndex","moduleName":"Data.FoldableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`foldMapWithIndex` but with each element surrounded by some fixed value.\n\nFor example:\n\n```purescript\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) []\n= \"*\"\n\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) [\"a\"]\n= \"*0a*\"\n\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) [\"a\", \"b\"]\n= \"*0a*1b*\"\n\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) [\"a\", \"b\", \"c\"]\n= \"*0a*1b*2c*\"\n```\n"}],"tag":"SearchResult"}]],["suspendf",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/free/v6.0.1/src/Control/Monad/Free.purs","end":[143,56]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"suspendF","moduleName":"Control.Monad.Free","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Suspend a value given the applicative functor `f` into the free monad.\n"}],"tag":"SearchResult"}]],[":|",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/nonempty/v6.0.0/src/Data/NonEmpty.purs","end":[58,24]},"score":7,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"(:|)","moduleName":"Data.NonEmpty","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":"An infix synonym for `NonEmpty`.\n\n```purescript\nnonEmptyArray :: NonEmpty Array Int\nnonEmptyArray = 1 :| [2,3]\n\nnonEmptyList :: NonEmpty List Int\nnonEmptyList = 1 :| 2 : 3 : Nil\n```\n"}],"tag":"SearchResult"}]]]
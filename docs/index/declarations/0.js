// This file was generated by purescript-docs-search.
window.DocsSearchIndex["0"] = [["gathertypes",[{"values":[{"sourceSpan":{"start":[808,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[808,71]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"GatherTypes","moduleName":"Erl.Untagged.Union","info":{"values":[{"superclasses":[],"fundeps":[[["choices"],["choicesWithType"]]],"arguments":[["choices",null],["choicesWithType",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["econnaborted",[{"values":[{"sourceSpan":{"start":[141,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[141,17]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EConnaborted","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["econnrefused",[{"values":[{"sourceSpan":{"start":[142,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[142,17]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EConnrefused","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["econnreset",[{"values":[{"sourceSpan":{"start":[143,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[143,15]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EConnreset","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/quickcheck-laws/v6.0.1/src/Test/QuickCheck/Laws.purs","end":[53,23]},"score":3,"packageInfo":{"values":["quickcheck-laws"],"tag":"Package"},"name":"D","moduleName":"Test.QuickCheck.Laws","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,11],"name":".spago/quickcheck-laws/v6.0.1/src/Test/QuickCheck/Laws.purs","end":[53,23]},"score":3,"packageInfo":{"values":["quickcheck-laws"],"tag":"Package"},"name":"D","moduleName":"Test.QuickCheck.Laws","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ceil",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[54,22]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"ceil","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\ngreater than the argument. Values outside the `Int` range are clamped,\n`NaN` and `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[28,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"ceil","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the smallest integer not smaller than the argument.\n"}],"tag":"SearchResult"}]],["censor",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Traced/Class.purs","end":[45,80]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"censor","moduleName":"Control.Comonad.Traced.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to the current position.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Class.purs","end":[48,66]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"censor","moduleName":"Control.Monad.Writer.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"constraintArgs":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Modify the final accumulator value by applying a function.\n"}],"tag":"SearchResult"}]],["c3",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[34,37]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"C3","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C2"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["agetter",[{"values":[{"sourceSpan":{"start":[163,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[163,38]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"AGetter","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["agetter'",[{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[165,36]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"AGetter'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AGetter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["agrate",[{"values":[{"sourceSpan":{"start":[153,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[153,50]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"AGrate","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Internal","Grating"],"Grating"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A grate defined in terms of `Grating`, which can be used\nto avoid issues with impredicativity.\n"}],"tag":"SearchResult"}]],["agrate'",[{"values":[{"sourceSpan":{"start":[154,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[154,34]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"AGrate'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AGrate"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["_ipv4address",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/uri/v8.0.1/src/URI/Host.purs","end":[61,39]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_IPv4Address","moduleName":"URI.Host","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv4Address"],"IPv4Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A prism for the `IPv4Address` constructor.\n"}],"tag":"SearchResult"}]],["_ipv6address",[{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/uri/v8.0.1/src/URI/Host.purs","end":[55,39]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_IPv6Address","moduleName":"URI.Host","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["URI","Host"],"Host"]}]},{"tag":"TypeConstructor","contents":[["URI","Host","IPv6Address"],"IPv6Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A prism for the `IPv6Address` constructor.\n"}],"tag":"SearchResult"}]]]
// This file was generated by purescript-docs-search.
window.DocsSearchIndex["43"] = [["+",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Semiring.purs","end":[40,18]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(+)","moduleName":"Data.Semiring","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/expect-inferred/v2.0.0/src/ExpectTypes.purs","end":[8,29]},"score":0,"packageInfo":{"values":["expect-inferred"],"tag":"Package"},"name":"type (+)","moduleName":"ExpectInferred","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Row.purs","end":[24,28]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"type (+)","moduleName":"Type.Row","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":"Applies a type alias of open rows to a set of rows. The primary use case\nthis operator is as convenient sugar for combining open rows without\nparentheses.\n```purescript\ntype Rows1 r = (a :: Int, b :: String | r)\ntype Rows2 r = (c :: Boolean | r)\ntype Rows3 r = (Rows1 + Rows2 + r)\ntype Rows4 r = (d :: String | Rows1 + Rows2 + r)\n```\n"}],"tag":"SearchResult"}]]]
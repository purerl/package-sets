// This file was generated by purescript-docs-search.
window.DocsSearchIndex["20"] = [["weak",[{"values":[{"sourceSpan":{"start":[86,27],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[86,33]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Weak","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocket",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[36,26]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"WebSocket","moduleName":"Erl.Gun.WsGun","info":{"values":[{"typeArguments":[["clientMsg",null],["serverMsg",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,3],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[116,14]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocket","moduleName":"Stetson.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]},{"tag":"TypeVar","contents":"state"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocket_handle",[{"values":[{"sourceSpan":{"start":[267,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[267,78]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"websocket_handle","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"FrameHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocket_info",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[273,79]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"websocket_info","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"InfoHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocket_init",[{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[260,77]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"websocket_init","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"WSInitHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocketcallresult",[{"values":[{"sourceSpan":{"start":[190,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[195,15]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocketCallResult","moduleName":"Stetson.Types","info":{"values":[{"typeArguments":[["state",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Return type of most WebSocket callbacks\n"}],"tag":"SearchResult"}]],["websocketdown",[{"values":[{"sourceSpan":{"start":[43,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[43,18]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"WebSocketDown","moduleName":"Erl.Gun.WsGun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun","WsGun"],"WebSocketDownReason"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocketdownreason",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[32,29]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"WebSocketDownReason","moduleName":"Erl.Gun.WsGun","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["websockethandlehandler",[{"values":[{"sourceSpan":{"start":[226,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[227,70]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocketHandleHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"Frame"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"WebSocketResult"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"WebSocketCallResult"]},{"tag":"TypeVar","contents":"state"}]}}]}]}]},"arguments":[["msg",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Callback used to handle messages sent from the client in the form of 'Frames' which will need\nunpacking/decoding/parsing etc\n"}],"tag":"SearchResult"}]],["websockethandler",[{"values":[{"sourceSpan":{"start":[89,3],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[89,21]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocketHandler","moduleName":"Stetson.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["websocketinfohandler",[{"values":[{"sourceSpan":{"start":[230,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[231,68]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocketInfoHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"WebSocketResult"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"WebSocketCallResult"]},{"tag":"TypeVar","contents":"state"}]}}]}]}]},"arguments":[["msg",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Callback used to handle messages sent from Erlang (hopefully via the router) so they'll be of the right type\n"}],"tag":"SearchResult"}]],["websocketinithandler",[{"values":[{"sourceSpan":{"start":[221,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[222,61]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocketInitHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"WebSocketResult"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"WebSocketCallResult"]},{"tag":"TypeVar","contents":"state"}]}}]}]},"arguments":[["msg",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Callback used to kick off the WebSocket handler\nThis is a good time to get hold of 'self' and set up subscriptions\n"}],"tag":"SearchResult"}]],["websocketmessage",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[50,73]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"WebSocketMessage","moduleName":"Erl.Gun.WsGun","info":{"values":[{"typeArguments":[["clientMsg",null],["serverMsg",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["websocketpayload",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[45,32]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"WebSocketPayload","moduleName":"Erl.Gun.WsGun","info":{"values":[{"typeArguments":[["serverMsg",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["websocketresult",[{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[217,18]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"WebSocketResult","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"ResultT"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"r"}]},"arguments":[["msg",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"All of the Loop handlers take place in a ReaderT so we can do things like get the current pid\n"}],"tag":"SearchResult"}]],["websocketup",[{"values":[{"sourceSpan":{"start":[42,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[42,16]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"WebSocketUp","moduleName":"Erl.Gun.WsGun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["wednesday",[{"values":[{"sourceSpan":{"start":[147,3],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[147,14]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Wednesday","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["week",[{"values":[{"sourceSpan":{"start":[34,55],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[34,61]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Week","moduleName":"Data.Interval.Duration","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[48,27]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"week","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["weekday",[{"values":[{"sourceSpan":{"start":[144,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[151,11]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Weekday","moduleName":"Data.Date.Component","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A type representing the days of the week in the Gregorian calendar.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[87,27]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"weekday","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Weekday"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The weekday for a date value.\n"}],"tag":"SearchResult"}]],["ugencat",[{"values":[{"sourceSpan":{"start":[5726,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal.purs","end":[5726,40]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"uGencat","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"UnicodeCategory"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["that",[{"values":[{"sourceSpan":{"start":[17,3],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[17,9]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"That","moduleName":"Data.These","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"b"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[154,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[154,41]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"that","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `b` value if and only if the value is constructed with `That`.\n"}],"tag":"SearchResult"}]],["thatorboth",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[114,52]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"thatOrBoth","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["these",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[18,13]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"These","moduleName":"Data.These","info":{"values":[{"typeArguments":[["a",null],["b",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Data type isomorphic to `α ∨ β ∨ (α ∧ β)` or\n`Either a (Either b (Tuple a b))`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[105,79]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"these","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given functions to handle each constructor, collapse a `These` value\ninto single value.\n"}],"tag":"SearchResult"}]],["theseleft",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[136,46]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"theseLeft","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns an `a` value if possible.\n"}],"tag":"SearchResult"}]],["theseright",[{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[142,47]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"theseRight","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a `b` value if possible.\n"}],"tag":"SearchResult"}]],["this",[{"values":[{"sourceSpan":{"start":[16,3],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[16,9]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"This","moduleName":"Data.These","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[148,41]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"this","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `a` value if and only if the value is constructed with `This`.\n"}],"tag":"SearchResult"}]],["thismessage",[{"values":[{"sourceSpan":{"start":[308,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[308,21]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"thismessage","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"multipart/related relative reference ([RFC2557](https://tools.ietf.org/html/rfc2557))\n"}],"tag":"SearchResult"}]],["thisorboth",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[110,52]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"thisOrBoth","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["throw",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/exceptions/v5.0.0-erl1/src/Effect/Exception.purs","end":[81,38]},"score":5,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"throw","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A shortcut allowing you to throw an error in one step. Defined as\n`throwException <<< error`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,31],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Common.purs","end":[12,38]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Throw","moduleName":"Erl.Cowboy.Handlers.Common","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Exceptions.purs","end":[36,10]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Throw","moduleName":"Erl.Kernel.Exceptions","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Exceptions.purs","end":[27,47]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"throw","moduleName":"Erl.Kernel.Exceptions","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["throwerror",[{"values":[{"sourceSpan":{"start":[24,3],"name":".spago/transformers/v5.2.0/src/Control/Monad/Error/Class.purs","end":[24,35]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"throwError","moduleName":"Control.Monad.Error.Class","info":{"values":[{"typeClassArguments":[["e",null],["m",null]],"typeClass":[["Control","Monad","Error","Class"],"MonadThrow"],"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadThrow"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["throwexception",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/exceptions/v5.0.0-erl1/src/Effect/Exception.purs","end":[63,14]},"score":5,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"throwException","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throw an exception\n\nFor example:\n\n```purescript\nmain = do\n  x <- readNumber\n  when (x < 0) $ throwException $\n    error \"Expected a non-negative number\"\n```\n"}],"tag":"SearchResult"}]],["thursday",[{"values":[{"sourceSpan":{"start":[148,3],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[148,13]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Thursday","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["t6",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Product/Nested.purs","end":[39,47]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"T6","moduleName":"Data.Functor.Product.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product","Nested"],"T5"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/tuples/v6.0.1/src/Data/Tuple/Nested.purs","end":[89,45]},"score":24,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"T6","moduleName":"Data.Tuple.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T5"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["sieve",[{"values":[{"sourceSpan":{"start":[256,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[256,15]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"sieve","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"ManageSieve Protocol ([RFC5804](https://tools.ietf.org/html/rfc5804))\n"}],"tag":"SearchResult"}]],["signaturealgorithm",[{"values":[{"sourceSpan":{"start":[282,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[283,42]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"SignatureAlgorithm","moduleName":"Erl.Ssl","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["signscheme",[{"values":[{"sourceSpan":{"start":[264,1],"name":".spago/erl-ssl/v0.0.2/src/Erl/Ssl.purs","end":[278,15]},"score":0,"packageInfo":{"values":["erl-ssl"],"tag":"Package"},"name":"SignScheme","moduleName":"Erl.Ssl","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["signum",[{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[216,46]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"signum","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The sign function; always evaluates to either `one` or `negate one`. For\nany `x`, we should have `signum x * abs x == x`.\n"}],"tag":"SearchResult"}]],["simple",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Common.purs","end":[40,53]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"simple","moduleName":"Data.Lens.Common","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic'"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic'"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This is useful for when you want to restrict the type of another optic.\nFor example, suppose you have the following declarations:\n```purescript\nnewtype X = X Int\nderive instance newtypeX :: Newtype X _\n```\n\nAttempting to view with the `_Newtype` optic:\n```purescript\nX 42 ^. _Newtype\n```\nWill result in a type error:\n```\n The inferred type\n   forall t3 t5. Newtype t3 t5 => Int\n has type variables which are not mentioned in the body of the type.\n Consider adding a type annotation.\n```\n\nHowever, if we apply the `simple` function:\n```purescript\n X 42 ^. simple _Newtype\n```\nWe get the expected result `42`.\n"}],"tag":"SearchResult"}]],["simplecontenttype",[{"values":[{"sourceSpan":{"start":[42,64],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[42,83]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"SimpleContentType","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["simplestart",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/App.purs","end":[20,113]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"simpleStart","moduleName":"Pinto.App","info":{"values":[{"type":{"tag":"ForAll","contents":["args",{"tag":"ForAll","contents":["serverType",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","Types"],"StartLinkResult"]},{"tag":"TypeVar","contents":"serverType"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn2"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"args"}]}}]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Defines the entry point to an applicaiton that ignores any passed in arguments and simply calls the supervisor callback provided\n\nFor example:\n\n```purescript\nApp.simpleStart MyGenSup.startLink\n```\n"}],"tag":"SearchResult"}]],["simplestetsonhandler",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[137,30]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"SimpleStetsonHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"state"}]},"arguments":[["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type alias for StetsonHandler, but with no ability to receive messages\n"}],"tag":"SearchResult"}]],["sin",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[58,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sin","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the sine of the argument.\n"}],"tag":"SearchResult"}]],["single",[{"values":[{"sourceSpan":{"start":[114,21],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[114,29]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Single","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["singleton",[{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[111,57]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"singleton","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list with one element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[196,44]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"singleton","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[180,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[180,36]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"singleton","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an array of one element\n```purescript\nsingleton 2 = [2]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatList.purs","end":[84,38]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"singleton","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a catenable list with a single item.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatQueue.purs","end":[57,39]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"singleton","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a queue containing a single element.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[48,43]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"singleton","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[141,35]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"singleton","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list with a single element.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[133,43]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"singleton","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[141,35]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"singleton","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list with a single element.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[190,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[190,43]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"singleton","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a map with one key/value pair\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/nonempty/v6.0.0/src/Data/NonEmpty.purs","end":[68,53]},"score":7,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"singleton","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a non-empty structure with a single value.\n\n```purescript\nimport Prelude\n\nsingleton 1 == 1 :| []\nsingleton 1 == 1 :| Nil\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[65,34]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"singleton","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Construct a sequence from a single element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[177,34]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"singleton","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Create a Seq with one element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set/NonEmpty.purs","end":[63,42]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"singleton","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a set with one element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set.purs","end":[98,34]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"singleton","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a set with one element\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodePoints.purs","end":[88,33]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a string containing just the given code point. Operates in\nconstant space and time.\n\n```purescript\n>>> map singleton (toEnum 0x1D400)\nJust \"𝐀\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/CodeUnits.purs","end":[83,43]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a string of length `1` containing the given character.\n\n```purescript\nsingleton 'l' == \"l\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[60,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[70,36]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a character.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/unfoldable/v5.0.0-erl1/src/Data/Unfoldable1.purs","end":[96,51]},"score":12,"packageInfo":{"values":["unfoldable"],"tag":"Package"},"name":"singleton","moduleName":"Data.Unfoldable1","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Contain a single value. For example:\n\n``` purescript\nsingleton \"foo\" == (NEL.singleton \"foo\" :: NEL.NonEmptyList String)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[126,43]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"singleton","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[97,35]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"singleton","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list with a single element.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/erl-maps/v0.5.0/src/Erl/Data/Map.purs","end":[71,43]},"score":0,"packageInfo":{"values":["erl-maps"],"tag":"Package"},"name":"singleton","moduleName":"Erl.Data.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Map"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/erl-queue/v0.0.2/src/Erl/Data/Queue/Types.purs","end":[47,51]},"score":0,"packageInfo":{"values":["erl-queue"],"tag":"Package"},"name":"singleton","moduleName":"Erl.Data.Queue.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Queue","Types"],"Queue"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["sip",[{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[260,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"sip","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"session initiation protocol ([RFC3261](https://tools.ietf.org/html/rfc3261))\n"}],"tag":"SearchResult"}]],["sips",[{"values":[{"sourceSpan":{"start":[264,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[264,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"sips","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"secure session initiation protocol ([RFC3261](https://tools.ietf.org/html/rfc3261))\n"}],"tag":"SearchResult"}]],["size",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen/Class.purs","end":[29,16]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"Size","moduleName":"Control.Monad.Gen.Class","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[676,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[676,35]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"size","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculate the number of key/value pairs in a map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set/NonEmpty.purs","end":[121,39]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"size","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the size of a set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set.purs","end":[132,31]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"size","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the size of a set\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/erl-maps/v0.5.0/src/Erl/Data/Map.purs","end":[56,50]},"score":0,"packageInfo":{"values":["erl-maps"],"tag":"Package"},"name":"size","moduleName":"Erl.Data.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Map"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[63,16]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Size","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Tests are parameterized by the `Size` of the randomly-generated data,\nthe meaning of which depends on the particular generator used.\n"}],"tag":"SearchResult"}]],["sized",[{"values":[{"sourceSpan":{"start":[27,3],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen/Class.purs","end":[27,42]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"sized","moduleName":"Control.Monad.Gen.Class","info":{"values":[{"typeClassArguments":[["m",null]],"typeClass":[["Control","Monad","Gen","Class"],"MonadGen"],"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Control","Monad","Gen","Class"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":"Runs a generator, passing in the current size state.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[116,44]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"sized","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which depends on the size parameter.\n"}],"tag":"SearchResult"}]],["placeholder",[{"values":[{"sourceSpan":{"start":[73,3],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[73,16]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"Placeholder","moduleName":"Data.Formatter.DateTime","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["plus",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/control/v5.0.0-erl1/src/Control/Plus.purs","end":[24,25]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Plus","moduleName":"Control.Plus","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Alt"],"Alt"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Plus` type class extends the `Alt` type class with a value that\nshould be the left and right identity for `(<|>)`.\n\nIt is similar to `Monoid`, except that it applies to types of\nkind `* -> *`, like `Array` or `List`, rather than concrete types like\n`String` or `Number`.\n\n`Plus` instances should satisfy the following laws:\n\n- Left identity: `empty <|> x == x`\n- Right identity: `x <|> empty == x`\n- Annihilation: `f <$> empty == empty`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,16],"name":".spago/datetime-parsing/10c0a9aecc60a2a5e8cff35bebe45be4dacaa7f8/src/Data/DateTime/Parsing.purs","end":[40,22]},"score":0,"packageInfo":{"values":["datetime-parsing"],"tag":"Package"},"name":"Plus","moduleName":"Data.DateTime.Parsing","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nntp",[{"values":[{"sourceSpan":{"start":[208,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[208,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"nntp","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"USENET news using NNTP access ([RFC5538](https://tools.ietf.org/html/rfc5538))\n"}],"tag":"SearchResult"}]],["mod",[{"values":[{"sourceSpan":{"start":[66,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/EuclideanRing.purs","end":[66,21]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"mod","moduleName":"Data.EuclideanRing","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","EuclideanRing"],"EuclideanRing"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["modifierletter",[{"values":[{"sourceSpan":{"start":[114,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[114,25]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ModifierLetter","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["modifiersymbol",[{"values":[{"sourceSpan":{"start":[131,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[131,25]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ModifierSymbol","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["modify",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State/Class.purs","end":[41,56]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"modify","moduleName":"Control.Monad.State.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Modify the state by applying a function to the current state. The returned\nvalue is the new state value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/refs/v5.0.0-erl2/src/Effect/Ref.purs","end":[62,50]},"score":2,"packageInfo":{"values":["refs"],"tag":"Package"},"name":"modify","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"s"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update the value of a mutable reference by applying a function\nto the current value. The updated value is returned.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/erl-nativerefs/v0.1.0/src/NativeRef.purs","end":[20,50]},"score":0,"packageInfo":{"values":["erl-nativerefs"],"tag":"Package"},"name":"modify","moduleName":"NativeRef","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["NativeRef"],"Ref"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/record/v3.0.0-erl1/src/Record/Builder.purs","end":[81,37]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"modify","moduleName":"Record.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Build by modifying an existing field.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/record/v3.0.0-erl1/src/Record.purs","end":[82,15]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"modify","moduleName":"Record","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Modify a property for a label which is specified using a value-level proxy for\na type-level string.\n\nFor example:\n\n```purescript\nmodify (Proxy :: Proxy \"x\")\n  :: forall r a b. (a -> b) -> { x :: a | r } -> { x :: b | r }\n```\n"}],"tag":"SearchResult"}]],["modify'",[{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/refs/v5.0.0-erl2/src/Effect/Ref.purs","end":[55,78]},"score":2,"packageInfo":{"values":["refs"],"tag":"Package"},"name":"modify'","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["state",{"tag":"TypeVar","contents":"s"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"b"},{"tag":"REmpty","contents":{}}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update the value of a mutable reference by applying a function\nto the current value.\n"}],"tag":"SearchResult"}]],["modify_",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State/Class.purs","end":[44,60]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"modify_","moduleName":"Control.Monad.State.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/refs/v5.0.0-erl2/src/Effect/Ref.purs","end":[66,54]},"score":2,"packageInfo":{"values":["refs"],"tag":"Package"},"name":"modify_","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A version of `modify` which does not return the updated value.\n"}],"tag":"SearchResult"}]],["modifyat",[{"values":[{"sourceSpan":{"start":[300,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[300,84]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"modifyAt","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[566,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[566,68]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"modifyAt","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to the element at the specified index, creating a new\narray, or returning `Nothing` if the index is out of bounds.\n\n```purescript\nmodifyAt 1 toUpper [\"Hello\", \"World\"] = Just [\"Hello\", \"WORLD\"]\nmodifyAt 10 toUpper [\"Hello\", \"World\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[370,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[370,58]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"modifyAt","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update the element at the specified index by applying a function to\nthe current value, returning a new list, or return the original list unchanged\nif the index is out-of-bounds.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[208,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[208,82]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"modifyAt","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[346,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[346,66]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"modifyAt","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update the element at the specified index by applying a function to\nthe current value, returning a new list or `Nothing` if the index is\nout-of-bounds.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[202,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[202,82]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"modifyAt","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[283,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[283,66]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"modifyAt","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update the element at the specified index by applying a function to\nthe current value, returning a new list or `Nothing` if the index is\nout-of-bounds.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"}]],["modifyatindices",[{"values":[{"sourceSpan":{"start":[303,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[303,101]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"modifyAtIndices","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[754,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[754,85]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"modifyAtIndices","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to the element at the specified indices,\ncreating a new array. Out-of-bounds indices will have no effect.\n\n```purescript\nindices = [1, 3]\nmodifyAtIndices indices toUpper [\"Hello\", \"World\", \"and\", \"others\"]\n   = [\"Hello\", \"WORLD\", \"and\", \"OTHERS\"]\n```\n\n"}],"tag":"SearchResult"}]],["modifydate",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[41,53]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"modifyDate","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["modifydatef",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[44,81]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"modifyDateF","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["modifying",[{"values":[{"sourceSpan":{"start":[119,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Setter.purs","end":[119,84]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"modifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Modify the foci of a `Setter` in a monadic state.\n"}],"tag":"SearchResult"}]],["modifytime",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[50,53]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"modifyTime","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["modifytimef",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[53,81]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"modifyTimeF","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["moduleinfo",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/erl-stetson/v0.13.0/src/RoutingDuplexMiddleware.purs","end":[36,49]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"ModuleInfo","moduleName":"RoutingDuplexMiddleware","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["mod",{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"NativeModuleName"]},{"tag":"RCons","contents":["args",{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["modulename",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Static.purs","end":[12,42]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"moduleName","moduleName":"Cowboy.Static","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"NativeModuleName"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName/Symbol.purs","end":[15,61]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"ModuleName","moduleName":"Erl.ModuleName.Symbol","info":{"values":[{"typeArguments":[["name",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName/Symbol.purs","end":[17,51]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"moduleName","moduleName":"Erl.ModuleName.Symbol","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","ModuleName","Symbol"],"ModuleName"]},{"tag":"TypeVar","contents":"s"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName.purs","end":[10,39]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"ModuleName","moduleName":"Erl.ModuleName","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A PureScript module name e.g. Foo.Bar\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,20],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName.purs","end":[10,39]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"ModuleName","moduleName":"Erl.ModuleName","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/erl-modules/v0.1.6/src/Erl/ModuleName.purs","end":[12,35]},"score":0,"packageInfo":{"values":["erl-modules"],"tag":"Package"},"name":"moduleName","moduleName":"Erl.ModuleName","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","ModuleName"],"ModuleName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monad",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Monad.purs","end":[31,41]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Monad","moduleName":"Control.Monad","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Monad` type class combines the operations of the `Bind` and\n`Applicative` type classes. Therefore, `Monad` instances represent type\nconstructors which support sequential composition, and also lifting of\nfunctions of arbitrary arity.\n\nInstances must satisfy the following laws in addition to the\n`Applicative` and `Bind` laws:\n\n- Left Identity: `pure x >>= f = f x`\n- Right Identity: `x >>= pure = x`\n"}],"tag":"SearchResult"}]],["monadask",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Reader/Class.purs","end":[17,13]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadAsk","moduleName":"Control.Monad.Reader.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["r"]]],"arguments":[["r",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadAsk` type class represents those monads which support a global\ncontext that can be provided via the `ask` function.\n\nAn implementation is provided for `ReaderT`, and for other monad\ntransformers defined in this library.\n\nLaw:\n\n- `do { ask ; ask } = ask`\n"}],"tag":"SearchResult"}]],["monadcont",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Cont/Class.purs","end":[27,59]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadCont","moduleName":"Control.Monad.Cont.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadCont` type class represents those monads which support the\n`callCC`, or _call-with-current-continuation_ operation.\n\nThis action makes the current continuation available to the caller.\n\nFor example:\n\n```purescript\n-- setTimeout :: Number -> Effect Unit -> Effect Unit\n\ndelay :: Number -> ContT Unit Effect Unit\ndelay n = callCC \\cont ->\n  lift $ setTimeout n (runContT (cont unit) (\\_ -> pure unit))\n```\nAn implementation is provided for `ContT`, and for other monad transformers\ndefined in this library.\n"}],"tag":"SearchResult"}]],["monadeffect",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/effect/v3.0.0-erl1/src/Effect/Class.purs","end":[16,42]},"score":25,"packageInfo":{"values":["effect"],"tag":"Package"},"name":"MonadEffect","moduleName":"Effect.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadEffect` class captures those monads which support native effects.\n\nInstances are provided for `Effect` itself, and the standard monad\ntransformers.\n\n`liftEffect` can be used in any appropriate monad transformer stack to lift an\naction of type `Effect a` into the monad.\n\n"}],"tag":"SearchResult"}]],["monaderror",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Error/Class.purs","end":[41,51]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadError","moduleName":"Control.Monad.Error.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadThrow"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["e"]]],"arguments":[["e",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadError` type class represents those monads which support catching\nerrors.\n\n- `catchError x f` calls the error handler `f` if an error is thrown during the\n  evaluation of `x`.\n\nAn implementation is provided for `ExceptT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- Catch: `catchError (throwError e) f = f e`\n- Pure: `catchError (pure a) f = pure a`\n\n"}],"tag":"SearchResult"}]],["monadfree",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/free/v6.0.1/src/Control/Monad/Free/Class.purs","end":[17,39]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"MonadFree","moduleName":"Control.Monad.Free.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["f"]]],"arguments":[["f",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Based on <http://hackage.haskell.org/package/free/docs/Control-Monad-Free-Class.html>\n"}],"tag":"SearchResult"}]],["monadgen",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen/Class.purs","end":[27,42]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"MonadGen","moduleName":"Control.Monad.Gen.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for random generator implementations.\n\nInstances should provide implementations for the generation functions\nthat return choices with uniform probability.\n\nSee also `Gen` in `purescript-quickcheck`, which implements this\ntype class.\n"}],"tag":"SearchResult"}]],["monadplus",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/control/v5.0.0-erl1/src/Control/MonadPlus.purs","end":[32,46]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"MonadPlus","moduleName":"Control.MonadPlus","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadPlus` type class has no members of its own; it just specifies\nthat the type has both `Monad` and `Alternative` instances.\n\nTypes which have `MonadPlus` instances should also satisfy the following\nlaw:\n\n- Distributivity: `(x <|> y) >>= f == (x >>= f) <|> (y >>= f)`\n"}],"tag":"SearchResult"}]],["monadreader",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Reader/Class.purs","end":[39,44]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadReader","moduleName":"Control.Monad.Reader.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["r"]]],"arguments":[["r",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"An extension of the `MonadAsk` class that introduces a function `local f x`\nthat allows the value of the local context to be modified for the duration\nof the execution of action `x`.\n\nAn implementation is provided for `ReaderT`, and for other monad\ntransformers defined in this library.\n\nLaws in addition to the `MonadAsk` law:\n\n- `local f ask = f <$> ask`\n- `local _ (pure a) = pure a`\n- `local f (do { a <- x ; y }) = do { a <- local f x ; local f y }`\n"}],"tag":"SearchResult"}]],["monadrec",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/tailrec/v5.0.1-erl1/src/Control/Monad/Rec/Class.purs","end":[55,58]},"score":8,"packageInfo":{"values":["tailrec"],"tag":"Package"},"name":"MonadRec","moduleName":"Control.Monad.Rec.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"This type class captures those monads which support tail recursion in\nconstant stack space.\n\nThe `tailRecM` function takes a step function, and applies that step\nfunction recursively until a pure value of type `b` is found.\n\nInstances are provided for standard monad transformers.\n\nFor example:\n\n```purescript\nloopWriter :: Int -> WriterT (Additive Int) Effect Unit\nloopWriter n = tailRecM go n\n  where\n  go 0 = do\n    traceM \"Done!\"\n    pure (Done unit)\n  go i = do\n    tell $ Additive i\n    pure (Loop (i - 1))\n```\n"}],"tag":"SearchResult"}]],["monadstate",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State/Class.purs","end":[25,47]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadState","moduleName":"Control.Monad.State.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["s"]]],"arguments":[["s",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadState s` type class represents those monads which support a single piece of mutable\nstate of type `s`.\n\n- `state f` updates the state using the function `f`.\n\nAn implementation is provided for `StateT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- `do { get ; get } = get`\n- `do { put x ; put y } = put y`\n- `do { put x ; get } = put x $> x`\n- `do { s <- get ; put s } = pure unit`\n\n"}],"tag":"SearchResult"}]],["monadtell",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Class.purs","end":[20,22]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadTell","moduleName":"Control.Monad.Writer.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["w"]]],"arguments":[["w",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadTell w` type class represents those monads which support a\nmonoidal accumulator of type `w`, where `tell` appends a value to the\naccumulator.\n\nAn implementation is provided for `WriterT`, and for other monad\ntransformers defined in this library.\n\nLaw:\n\n- `do { tell x ; tell y } = tell (x <> y)`\n"}],"tag":"SearchResult"}]],["monadthrow",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Error/Class.purs","end":[24,35]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadThrow","moduleName":"Control.Monad.Error.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["e"]]],"arguments":[["e",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadThrow` type class represents those monads which support errors via\n`throwError`, where `throwError e` halts, yielding the error `e`.\n\nAn implementation is provided for `ExceptT`, and for other monad transformers\ndefined in this library.\n\nLaws:\n\n- Left zero: `throwError e >>= f = throwError e`\n\n"}],"tag":"SearchResult"}]],["monadtrans",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Trans/Class.purs","end":[23,46]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadTrans","moduleName":"Control.Monad.Trans.Class","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadTrans` type class represents _monad transformers_.\n\nA monad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Monad` as its first argument, and returns another `Monad`.\n\nThis allows us to add additional effects to an existing monad. By iterating this\nprocess, we create monad transformer _stacks_, which contain all of the effects\nrequired for a particular computation.\n\nThe laws state that `lift` is a `Monad` morphism.\n\nLaws:\n\n- `lift (pure a) = pure a`\n- `lift (do { x <- m ; y }) = do { x <- lift m ; lift y }`\n"}],"tag":"SearchResult"}]],["monadwriter",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Class.purs","end":[38,48]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"MonadWriter","moduleName":"Control.Monad.Writer.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"constraintClass":[["Control","Monad","Writer","Class"],"MonadTell"],"constraintArgs":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]}],"fundeps":[[["m"],["w"]]],"arguments":[["w",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"An extension of the `MonadTell` class that introduces some operations on\nthe accumulator:\n\n- `listen` modifies the result to include the changes to the accumulator.\n- `pass` applies the returned function to the accumulator.\n\nAn implementation is provided for `WriterT`, and for other monad\ntransformers defined in this library.\n\nLaws in addition to the `MonadTell` law:\n\n- `do { tell x ; tell y } = tell (x <> y)`\n- `listen (pure a) = pure (Tuple a mempty)`\n- `listen (writer a x) = tell x $> Tuple a x`\n"}],"tag":"SearchResult"}]],["monadzero",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/control/v5.0.0-erl1/src/Control/MonadZero.purs","end":[46,69]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"MonadZero","moduleName":"Control.MonadZero","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"constraintClass":[["Control","MonadZero"],"MonadZeroIsDeprecated"],"constraintArgs":[]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `MonadZero` type class has no members of its own; it just specifies\nthat the type has both `Monad` and `Alternative` instances.\n\nTypes which have `MonadZero` instances should also satisfy the following\nlaws:\n\n- Annihilation: `empty >>= f = empty`\n"}],"tag":"SearchResult"}]],["monadzeroisdeprecated",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/control/v5.0.0-erl1/src/Control/MonadZero.purs","end":[36,28]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"MonadZeroIsDeprecated","moduleName":"Control.MonadZero","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["monday",[{"values":[{"sourceSpan":{"start":[145,3],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[145,11]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Monday","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monitor",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[56,53]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"monitor","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Process","Raw"],"Pid"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[53,30]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"monitor","moduleName":"Pinto.Monitor","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["process",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Process","Raw"],"HasPid"],"constraintArgs":[{"tag":"TypeVar","contents":"process"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Process"],"HasSelf"],"constraintArgs":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"process"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorMsg"]}]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","MessageRouting"],"RouterRef"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorRef"]}]}}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given something that has a pid (A GenServer, a Process.. or just a Pid), attach a monitor by using\nerlang:monitor on the underlying pid, a message will be sent to the current process, lifted into the\nconstructor `f` provided\n"}],"tag":"SearchResult"}]],["monitorinfo",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[32,12]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"MonitorInfo","moduleName":"Pinto.Monitor","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The 'reason' for the monitor being invoked, if this needs unpacking\nthen FFI will need to be written\n"}],"tag":"SearchResult"}]],["monitormsg",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[41,73]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"MonitorMsg","moduleName":"Pinto.Monitor","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Reference to a monitor, used to stop the monitor once it is started\n"}],"tag":"SearchResult"}]],["monitorobject",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[27,12]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"MonitorObject","moduleName":"Pinto.Monitor","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"This is probably a Pid, but until it is needed it will be Foreign\n"}],"tag":"SearchResult"}]],["monitorref",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[23,39]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"MonitorRef","moduleName":"Pinto.Monitor","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Reference to a monitor, used to stop the monitor once it is started\n"}],"tag":"SearchResult"}]],["monitorto",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[73,35]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"monitorTo","moduleName":"Pinto.Monitor","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["process",{"tag":"ForAll","contents":["target",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Process","Raw"],"HasPid"],"constraintArgs":[{"tag":"TypeVar","contents":"process"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Process"],"HasProcess"],"constraintArgs":[{"tag":"TypeVar","contents":"msg"},{"tag":"TypeVar","contents":"target"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"process"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"target"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorMsg"]}]},{"tag":"TypeVar","contents":"msg"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","MessageRouting"],"RouterRef"]},{"tag":"TypeConstructor","contents":[["Pinto","Monitor"],"MonitorRef"]}]}}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given something that has a pid (A GenServer, a Process.. or just a Pid), attach a monitor by using\nerlang:monitor on the underlying pid, a message will be sent to the current process, lifted into the\nconstructor `f` provided\n"}],"tag":"SearchResult"}]],["monitortype",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Monitor.purs","end":[37,9]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"MonitorType","moduleName":"Pinto.Monitor","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The type of monitor this message is being sent on behalf\n"}],"tag":"SearchResult"}]],["monoid",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid.purs","end":[45,14]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Monoid","moduleName":"Data.Monoid","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]}],"fundeps":[],"arguments":[["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `Monoid` is a `Semigroup` with a value `mempty`, which is both a\nleft and right unit for the associative operation `<>`:\n\n- Left unit: `(mempty <> x) = x`\n- Right unit: `(x <> mempty) = x`\n\n`Monoid`s are commonly used as the result of fold operations, where\n`<>` is used to combine individual results, and `mempty` gives the result\nof folding an empty collection of elements.\n\n### Newtypes for Monoid\n\nSome types (e.g. `Int`, `Boolean`) can implement multiple law-abiding\ninstances for `Monoid`. Let's use `Int` as an example\n1. `<>` could be `+` and `mempty` could be `0`\n2. `<>` could be `*` and `mempty` could be `1`.\n\nTo clarify these ambiguous situations, one should use the newtypes\ndefined in `Data.Monoid.<NewtypeName>` modules.\n\nIn the above ambiguous situation, we could use `Additive`\nfor the first situation or `Multiplicative` for the second one.\n"}],"tag":"SearchResult"}]],["monoidrecord",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid.purs","end":[102,67]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"MonoidRecord","moduleName":"Data.Monoid","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Semigroup"],"SemigroupRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]}],"fundeps":[[["rowlist"],["row","subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `Monoid` instances, used to\nimplement the `Monoid` instance for records.\n"}],"tag":"SearchResult"}]],["monotonic",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[45,46]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Monotonic","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["monotonicity",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[44,18]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Monotonicity","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["monotonicstarttime",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[63,36]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"monotonicStartTime","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Types"],"MonotonicTime"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monotonictime",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[58,38]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"monotonicTime","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"MonotonicTime"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[93,22]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"MonotonicTime","moduleName":"Erl.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[93,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[93,22]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"MonotonicTime","moduleName":"Erl.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monotonictimedelta",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[68,67]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"monotonicTimeDelta","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"MonotonicTime"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"MonotonicTime"]}]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NativeTime"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monotonictimetoinstant",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[88,71]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"monotonicTimeToInstant","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"MonotonicTime"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"TimeOffset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["month",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[58,13]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Month","moduleName":"Data.Date.Component","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A month component for a date in the Gregorian calendar.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[79,23]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"month","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The month component of a date value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,62],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[34,69]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Month","moduleName":"Data.Interval.Duration","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration.purs","end":[54,28]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"month","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monthfull",[{"values":[{"sourceSpan":{"start":[54,3],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[54,14]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"MonthFull","moduleName":"Data.Formatter.DateTime","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monthshort",[{"values":[{"sourceSpan":{"start":[55,3],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[55,15]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"MonthShort","moduleName":"Data.Formatter.DateTime","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["monthtwodigits",[{"values":[{"sourceSpan":{"start":[56,3],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/DateTime.purs","end":[56,19]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"MonthTwoDigits","moduleName":"Data.Formatter.DateTime","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["moved",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[120,46]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"moved","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["moved_permanently",[{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[95,92]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"moved_permanently","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedPermanentlyHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["moved_temporarily",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[100,92]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"moved_temporarily","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedTemporarilyHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["movedpermanently",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Rest.purs","end":[80,150]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"movedPermanently","moduleName":"Stetson.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RestResult"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a movedPermanently callback to the provided StetsonHandler\n"}],"tag":"SearchResult"}]],["movedpermanentlyhandler",[{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[123,59]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"MovedPermanentlyHandler","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"RestHandler"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Handler for moved_permanently callback\n"}],"tag":"SearchResult"}]],["movedresult",[{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[116,40]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"MovedResult","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["movedtemporarily",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Rest.purs","end":[76,150]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"movedTemporarily","moduleName":"Stetson.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RestResult"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a movedTemporarily callback to the provided StetsonHandler\n"}],"tag":"SearchResult"}]],["movedtemporarilyhandler",[{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[126,59]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"MovedTemporarilyHandler","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"RestHandler"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Handler for moved_temporarily callback\n"}],"tag":"SearchResult"}]],["is",[{"values":[{"sourceSpan":{"start":[175,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Prism.purs","end":[175,69]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"is","moduleName":"Data.Lens.Prism","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Ask if `preview prism` would produce a `Just`.\n"}],"tag":"SearchResult"}]],["is_authorized",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[110,84]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"is_authorized","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"IsAuthorizedHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["is_conflict",[{"values":[{"sourceSpan":{"start":[119,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[119,80]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"is_conflict","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"IsConflictHandler"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","HandlerProxy"],"State"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["isalpha",[{"values":[{"sourceSpan":{"start":[392,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[392,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAlpha","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects alphabetic Unicode characters (lower-case, upper-case and\ntitle-case letters, plus letters of caseless scripts and modifiers letters).\n"}],"tag":"SearchResult"}]],["isalphanum",[{"values":[{"sourceSpan":{"start":[400,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[400,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAlphaNum","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects alphabetic or numeric digit Unicode characters.\n\nNote that numeric digits outside the ASCII range are selected by this\nfunction but not by `isDigit`.  Such digits may be part of identifiers\nbut are not used by the printer and reader to represent numbers.\n"}],"tag":"SearchResult"}]],["isambiguous",[{"values":[{"sourceSpan":{"start":[834,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[834,34]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"IsAmbiguous","moduleName":"Erl.Untagged.Union","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["choicesWithType",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isambiguous'",[{"values":[{"sourceSpan":{"start":[849,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[849,45]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"IsAmbiguous'","moduleName":"Erl.Untagged.Union","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["toCheck",null],["toCheckType",null],["types",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isambiguoustype",[{"values":[{"sourceSpan":{"start":[879,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[879,57]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"IsAmbiguousType","moduleName":"Erl.Untagged.Union","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["result"]]],"arguments":[["lhs",null],["rhs",null],["result",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isarray",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[121,45]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"isArray","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a foreign value is an array\n"}],"tag":"SearchResult"}]],["isascii",[{"values":[{"sourceSpan":{"start":[337,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[337,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAscii","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects the first 128 characters of the Unicode character set,\ncorresponding to the ASCII character set.\n"}],"tag":"SearchResult"}]],["isasciilower",[{"values":[{"sourceSpan":{"start":[347,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[347,37]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAsciiLower","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII lower-case letters,\ni.e. characters satisfying both `isAscii` and `isLower`.\n"}],"tag":"SearchResult"}]],["isasciiupper",[{"values":[{"sourceSpan":{"start":[352,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[352,37]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isAsciiUpper","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII upper-case letters,\ni.e. characters satisfying both `isAscii` and `isUpper`.\n"}],"tag":"SearchResult"}]],["isauthorized",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Rest.purs","end":[56,145]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"isAuthorized","moduleName":"Stetson.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RestResult"]},{"tag":"TypeConstructor","contents":[["Stetson","Types"],"Authorized"]}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add an isAuthorized callback to the provided StetsonHandler\n"}],"tag":"SearchResult"}]],["isauthorizedhandler",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[97,64]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"IsAuthorizedHandler","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"RestHandler"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"IsAuthorizedResponse"]}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Handler for is_authorized callback\n"}],"tag":"SearchResult"}]],["isauthorizedresponse",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[91,49]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"IsAuthorizedResponse","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isbinary",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/erl-binary/v0.6.0/src/Erl/Data/Bitstring.purs","end":[14,48]},"score":0,"packageInfo":{"values":["erl-binary"],"tag":"Package"},"name":"isBinary","moduleName":"Erl.Data.Bitstring","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Bitstring","Type"],"Bitstring"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["isboolean",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[28,56]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"IsBoolean","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["bool",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Class for reflecting a type level `Boolean` at the value level\n"}],"tag":"SearchResult"}]],["isboth",[{"values":[{"sourceSpan":{"start":[175,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[175,43]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"isBoth","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `These` value is `Both`\n"}],"tag":"SearchResult"}]],["isconflict",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Rest.purs","end":[60,140]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"isConflict","moduleName":"Stetson.Rest","info":{"values":[{"type":{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RestResult"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"state"}]}}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add an isConflict callback to the provided StetsonHandler\n"}],"tag":"SearchResult"}]],["isconflicthandler",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[100,49]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"IsConflictHandler","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"RestHandler"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Handler for _ callback\n"}],"tag":"SearchResult"}]],["iscontrol",[{"values":[{"sourceSpan":{"start":[357,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[357,34]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isControl","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects control characters, which are the non-printing characters of\nthe Latin-1 subset of Unicode.\n"}],"tag":"SearchResult"}]],["isdecdigit",[{"values":[{"sourceSpan":{"start":[404,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[404,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isDecDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII decimal digits, i.e. `0..9`.\n"}],"tag":"SearchResult"}]],["isdigit",[{"values":[{"sourceSpan":{"start":[420,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[420,130]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'isDigit' is deprecated, use 'isDecDigit', 'isHexDigit', or 'isOctDigit' instead"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["isdirorfile",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Phantom.purs","end":[62,9]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"IsDirOrFile","moduleName":"Pathy.Phantom","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class that enables writing operations that abstract over `DirOrFile`.\n\nThe provided `onDirOrFile` function folds over a value indexed by\n`DirOrFile` to produce a new result, passing proof/coercion functions to\nallow the inner functions to unify their return types if remapping.\n"}],"tag":"SearchResult"}]],["isempty",[{"values":[{"sourceSpan":{"start":[325,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[325,77]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"isEmpty","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,3],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration/Iso.purs","end":[36,12]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"IsEmpty","moduleName":"Data.Interval.Duration.Iso","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[185,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[185,42]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"isEmpty","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a map is empty\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set.purs","end":[94,38]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"isEmpty","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a set is empty\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/erl-maps/v0.5.0/src/Erl/Data/Map.purs","end":[54,57]},"score":0,"packageInfo":{"values":["erl-maps"],"tag":"Package"},"name":"isEmpty","moduleName":"Erl.Data.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Map"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/erl-queue/v0.0.2/src/Erl/Data/Queue/Types.purs","end":[61,55]},"score":0,"packageInfo":{"values":["erl-queue"],"tag":"Package"},"name":"isEmpty","moduleName":"Erl.Data.Queue.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Queue","Types"],"Queue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["isfin",[{"values":[{"sourceSpan":{"start":[357,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[359,10]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"IsFin","moduleName":"Erl.Gun","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isfinite",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number.purs","end":[23,45]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"isFinite","moduleName":"Data.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a number is finite\n"}],"tag":"SearchResult"}]],["ishexdigit",[{"values":[{"sourceSpan":{"start":[415,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[415,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isHexDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII hexadecimal digits,\ni.e. `0..9, A..F, a..f`.\n"}],"tag":"SearchResult"}]],["isinchoices",[{"values":[{"sourceSpan":{"start":[517,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[517,57]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"IsInChoices","moduleName":"Erl.Untagged.Union","info":{"values":[{"superclasses":[],"fundeps":[[["item","choices"],["rem"]]],"arguments":[["item",null],["choices",null],["rem",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isjust",[{"values":[{"sourceSpan":{"start":[271,1],"name":".spago/maybe/v5.0.0/src/Data/Maybe.purs","end":[271,39]},"score":31,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"isJust","moduleName":"Data.Maybe","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Maybe` value was constructed with `Just`.\n"}],"tag":"SearchResult"}]],["islatin1",[{"values":[{"sourceSpan":{"start":[342,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[342,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isLatin1","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects the first 256 characters of the Unicode character set,\ncorresponding to the ISO 8859-1 (Latin-1) character set.\n"}],"tag":"SearchResult"}]],["isleapyear",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[120,30]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"isLeapYear","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether a year is a leap year according to the proleptic Gregorian\ncalendar.\n"}],"tag":"SearchResult"}]],["isleft",[{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[217,44]},"score":23,"packageInfo":{"values":["either"],"tag":"Package"},"name":"isLeft","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Either` value was constructed with `Left`.\n"}],"tag":"SearchResult"}]],["isletter",[{"values":[{"sourceSpan":{"start":[684,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[684,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isLetter","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects alphabetic Unicode characters (lower-case, upper-case and\ntitle-case letters, plus letters of caseless scripts and\nmodifiers letters).\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `UppercaseLetter`\n- `LowercaseLetter`\n- `TitlecaseLetter`\n- `ModifierLetter`\n- `OtherLetter`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table)\npart of the Unicode standard. The same document defines what is\nand is not a \"Letter\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isLetter (codePointFromChar 'a')\ntrue\n>>> isLetter (codePointFromChar 'A')\ntrue\n>>> isLetter (codePointFromChar '0')\nfalse\n>>> isLetter (codePointFromChar '%')\nfalse\n>>> isLetter (codePointFromChar '♥')\nfalse\n>>> isLetter (codePointFromChar '\\x1F')\nfalse\n```\n\nEnsure that 'isLetter' and 'isAlpha' are equivalent.\n\n```\n>>> chars = enumFromTo bottom top :: Array CodePoint\n>>> letters = map isLetter chars\n>>> alphas = map isAlpha chars\n>>> letters == alphas\ntrue\n```\n"}],"tag":"SearchResult"}]],["islower",[{"values":[{"sourceSpan":{"start":[387,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[387,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isLower","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects lower-case alphabetic Unicode characters (letters).\n"}],"tag":"SearchResult"}]],["ismark",[{"values":[{"sourceSpan":{"start":[734,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[734,31]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isMark","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode mark characters, for example accents and the\nlike, which combine with preceding characters.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `NonSpacingMark`\n- `SpacingCombiningMark`\n- `EnclosingMark`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table),\npart of the Unicode standard. The same document defines what is\nand is not a \"Mark\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isMark (codePointFromChar 'a')\nfalse\n>>> isMark (codePointFromChar '0')\nfalse\n```\n\nCombining marks such as accent characters usually need to follow\nanother character before they become printable:\n\n```\n>>> map isMark (toCodePointArray \"ò\")\n[false,true]\n```\n\nPuns are not necessarily supported:\n\n```\n>>> isMark (codePointFromChar '✓')\nfalse\n```\n"}],"tag":"SearchResult"}]],["ismatch",[{"values":[{"sourceSpan":{"start":[149,3],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[149,61]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"isMatch","moduleName":"Erl.Untagged.Union","info":{"values":[{"typeClassArguments":[["choices",null],["d",null]],"typeClass":[["Erl","Untagged","Union"],"RuntimeTypeMatch"],"type":{"tag":"ForAll","contents":["choices",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"RuntimeTypeMatch"],"constraintArgs":[{"tag":"TypeVar","contents":"choices"},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"choices"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Erl","Untagged","Union"],"WasMatch"]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ismulticast",[{"values":[{"sourceSpan":{"start":[212,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[212,36]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"isMulticast","moduleName":"Erl.Kernel.Inet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"IpAddress"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["isn't",[{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Prism.purs","end":[179,72]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"isn't","moduleName":"Data.Lens.Prism","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Ask if `preview prism` would produce a `Nothing`.\n"}],"tag":"SearchResult"}]],["isname",[{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Name.purs","end":[99,53]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"IsName","moduleName":"Pathy.Name","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["sym",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for creating `Name` values from type-level strings. This allows us\nto guarantee that a name is not empty at compile-time.\n"}],"tag":"SearchResult"}]],["isnothing",[{"values":[{"sourceSpan":{"start":[275,1],"name":".spago/maybe/v5.0.0/src/Data/Maybe.purs","end":[275,42]},"score":31,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"isNothing","moduleName":"Data.Maybe","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Maybe` value is `Nothing`.\n"}],"tag":"SearchResult"}]],["isnull",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[136,41]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"isNull","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[115,44]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"isNull","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a foreign value is null\n"}],"tag":"SearchResult"}]],["isnumber",[{"values":[{"sourceSpan":{"start":[783,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[783,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isNumber","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode numeric characters, including digits from various\nscripts, Roman numerals, et cetera.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n* `DecimalNumber`\n* `LetterNumber`\n* `OtherNumber`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table),\npart of the Unicode standard. The same document defines what is\nand is not a \"Number\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isNumber (codePointFromChar 'a')\nfalse\n>>> isNumber (codePointFromChar '%')\nfalse\n>>> isNumber (codePointFromChar '3')\ntrue\n```\n\nASCII @\\'0\\'@ through @\\'9\\'@ are all numbers:\n\n```\n>>> and $ map (isNumber <<< codePointFromChar) (enumFromTo '0' '9' :: Array Char)\ntrue\n```\n\nUnicode Roman numerals are \\\"numbers\\\" as well:\n\n```\n>>> isNumber (codePointFromChar 'Ⅸ')\ntrue\n```\n"}],"tag":"SearchResult"}]],["iso",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Iso.purs","end":[30,59]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"iso","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an `Iso` from a pair of morphisms.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[94,61]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Iso","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A generalized isomorphism.\n"}],"tag":"SearchResult"}]],["iso'",[{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Types.purs","end":[95,28]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Iso'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isoctdigit",[{"values":[{"sourceSpan":{"start":[409,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[409,35]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isOctDigit","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects ASCII octal digits, i.e. `0..7`.\n"}],"tag":"SearchResult"}]],["isoduration",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Interval/Duration/Iso.purs","end":[26,43]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"IsoDuration","moduleName":"Data.Interval.Duration.Iso","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["isordering",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Ordering.purs","end":[28,62]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"IsOrdering","moduleName":"Type.Data.Ordering","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["ordering",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Class for reflecting a type level `Ordering` at the value level\n"}],"tag":"SearchResult"}]],["isprint",[{"values":[{"sourceSpan":{"start":[362,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[362,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isPrint","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects printable Unicode characters\n(letters, numbers, marks, punctuation, symbols and spaces).\n"}],"tag":"SearchResult"}]],["ispunctuation",[{"values":[{"sourceSpan":{"start":[460,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[460,38]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isPunctuation","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode punctuation characters, including various kinds\nof connectors, brackets and quotes.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `ConnectorPunctuation`\n- `DashPunctuation`\n- `OpenPunctuation`\n- `ClosePunctuation`\n- `InitialQuote`\n- `FinalQuote`\n- `OtherPunctuation`\n\nThese classes are defined in the\n[Unicode Character Database])http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table)\npart of the Unicode standard. The same document defines what is\nand is not a \"Punctuation\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isPunctuation (codePointFromChar 'a')\nfalse\n>>> isPunctuation (codePointFromChar '7')\nfalse\n>>> isPunctuation (codePointFromChar '♥')\nfalse\n>>> isPunctuation (codePointFromChar '\"')\ntrue\n>>> isPunctuation (codePointFromChar '?')\ntrue\n>>> isPunctuation (codePointFromChar '—')\ntrue\n```\n"}],"tag":"SearchResult"}]],["isrecording",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Span.purs","end":[27,49]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"isRecording","moduleName":"OpenTelemetry.Tracing.Span","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"SpanCtx"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["isregistered",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto.purs","end":[27,77]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"isRegistered","moduleName":"Pinto","info":{"values":[{"type":{"tag":"ForAll","contents":["serverType",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","Types"],"RegistryName"]},{"tag":"TypeVar","contents":"serverType"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks if a particular process name is registered using 'whereis_name'\n\n- `serverType` can be anything, but most likely it'll be GenServer.ServerType or GenStatem.ServerType\n"}],"tag":"SearchResult"}]],["isrelorabs",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Phantom.purs","end":[26,9]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"IsRelOrAbs","moduleName":"Pathy.Phantom","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class that enables writing operations that abstract over `RelOrAbs`.\n\nThe provided `onRelOrAbs` function folds over a value indexed by\n`RelOrAbs` to produce a new result, passing proof/coercion functions to\nallow the inner functions to unify their return types if remapping.\n"}],"tag":"SearchResult"}]],["isright",[{"values":[{"sourceSpan":{"start":[221,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[221,45]},"score":23,"packageInfo":{"values":["either"],"tag":"Package"},"name":"isRight","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Either` value was constructed with `Right`.\n"}],"tag":"SearchResult"}]],["isseparator",[{"values":[{"sourceSpan":{"start":[836,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[836,36]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isSeparator","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode space and separator characters.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `Space`\n- `LineSeparator`\n- `ParagraphSeparator`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table)\npart of the Unicode standard. The same document defines what is\nand is not a \"Separator\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isSeparator (codePointFromChar 'a')\nfalse\n>>> isSeparator (codePointFromChar '6')\nfalse\n>>> isSeparator (codePointFromChar ' ')\ntrue\n>>> isSeparator (codePointFromChar '-')\nfalse\n```\n\nWarning: newlines and tab characters are not considered\nseparators.\n\n```\n>>> isSeparator (codePointFromChar '\\n')\nfalse\n>>> isSeparator (codePointFromChar '\\t')\nfalse\n```\n\nBut some more exotic characters are (like HTML's @&nbsp;@):\n\n```\n>>> isSeparator (codePointFromChar '\\xA0')\ntrue\n```\n"}],"tag":"SearchResult"}]],["isspace",[{"values":[{"sourceSpan":{"start":[369,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[369,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isSpace","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` for any Unicode space character, and the control\ncharacters `\\t`, `\\n`, `\\r`, `\\f`, `\\v`.\n\n`isSpace` includes non-breaking space.\n"}],"tag":"SearchResult"}]],["issubmap",[{"values":[{"sourceSpan":{"start":[671,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Map/Internal.purs","end":[671,71]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"isSubmap","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one map contains all of the keys and values contained in another map\n"}],"tag":"SearchResult"}]],["issupportedmessage",[{"values":[{"sourceSpan":{"start":[537,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[537,40]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"IsSupportedMessage","moduleName":"Erl.Untagged.Union","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["msg",null],["canReceive",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["issymbol",[{"values":[{"sourceSpan":{"start":[510,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[510,33]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isSymbol","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects Unicode symbol characters, including mathematical and\ncurrency symbols.\n\nThis function returns `true` if its argument has one of the\nfollowing `GeneralCategory`s, or `false` otherwise:\n\n- `MathSymbol`\n- `CurrencySymbol`\n- `ModifierSymbol`\n- `OtherSymbol`\n\nThese classes are defined in the\n[Unicode Character Database](http://www.unicode.org/reports/tr44/tr44-14.html#GC_Values_Table),\npart of the Unicode standard. The same document defines what is\nand is not a \"Symbol\".\n\n*Examples*\n\nBasic usage:\n\n```\n>>> isSymbol (codePointFromChar 'a')\nfalse\n>>> isSymbol (codePointFromChar '6')\nfalse\n>>> isSymbol (codePointFromChar '=')\ntrue\n```\n\nThe definition of \\\"math symbol\\\" may be a little\ncounter-intuitive depending on one's background:\n\n```\n>>> isSymbol (codePointFromChar '+')\ntrue\n>>> isSymbol (codePointFromChar '-')\nfalse\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Symbol.purs","end":[24,53]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"IsSymbol","moduleName":"Data.Symbol","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["sym",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for known symbols\n"}],"tag":"SearchResult"}]],["isthat",[{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[171,43]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"isThat","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `These` value is `That`\n"}],"tag":"SearchResult"}]],["isthis",[{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[167,43]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"isThis","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `These` value is `This`\n"}],"tag":"SearchResult"}]],["isundefined",[{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[118,49]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"isUndefined","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a foreign value is undefined\n"}],"tag":"SearchResult"}]],["isupper",[{"values":[{"sourceSpan":{"start":[383,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[383,32]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"isUpper","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Selects upper-case or title-case alphabetic Unicode characters (letters).\nTitle case is used by a small number of letter ligatures like the\nsingle-character form of /Lj/.\n"}],"tag":"SearchResult"}]],["isvalid",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/validation/v5.0.0/src/Data/Validation/Semigroup.purs","end":[63,54]},"score":0,"packageInfo":{"values":["validation"],"tag":"Package"},"name":"isValid","moduleName":"Data.Validation.Semigroup","info":{"values":[{"type":{"tag":"ForAll","contents":["err",{"tag":"ForAll","contents":["result",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semigroup"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether validation was successful or not.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/validation/v5.0.0/src/Data/Validation/Semiring.purs","end":[64,54]},"score":0,"packageInfo":{"values":["validation"],"tag":"Package"},"name":"isValid","moduleName":"Data.Validation.Semiring","info":{"values":[{"type":{"tag":"ForAll","contents":["err",{"tag":"ForAll","contents":["result",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Validation","Semiring"],"V"]},{"tag":"TypeVar","contents":"err"}]},{"tag":"TypeVar","contents":"result"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether validation was successful or not.\n"}],"tag":"SearchResult"}]],["http",[{"values":[{"sourceSpan":{"start":[256,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[256,9]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Http","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"HttpOpts"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[108,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"http","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Hypertext Transfer Protocol ([RFC7230, Section 2.7.1](https://tools.ietf.org/html/rfc7230#section-2.7.1))\n"}],"tag":"SearchResult"}]],["http1_0",[{"values":[{"sourceSpan":{"start":[83,3],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[83,12]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"HTTP1_0","moduleName":"Erl.Cowboy.Req","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["http1_1",[{"values":[{"sourceSpan":{"start":[84,3],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[84,12]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"HTTP1_1","moduleName":"Erl.Cowboy.Req","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["http2",[{"values":[{"sourceSpan":{"start":[85,3],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[85,10]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"HTTP2","moduleName":"Erl.Cowboy.Req","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[257,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[257,10]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Http2","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Http2Opts"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["http2options",[{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[190,30]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"http2Options","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Http2Opts"]}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Http2Opts"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Http2Opts"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["http2opts",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[160,6]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Http2Opts","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"RCons","contents":["losing_timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"RCons","contents":["cookie_ignore_informational",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["flow",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"PosInt"]}]},{"tag":"RCons","contents":["keepalive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"RCons","contents":["connection_window_margin_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["connection_window_update_threshold",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["enable_connect_protocol",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["initial_connection_window_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"PosInt"]}]},{"tag":"RCons","contents":["initial_stream_window_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["max_concurrent_streams",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"IntOrInfinity"]}]},{"tag":"RCons","contents":["max_connection_window_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["max_decode_table_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["max_encode_table_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["max_frame_size_received",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"PosInt"]}]},{"tag":"RCons","contents":["max_frame_size_sent",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"IntOrInfinity"]}]},{"tag":"RCons","contents":["max_stream_buffer_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["max_stream_window_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["preface_timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"RCons","contents":["settings_timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"RCons","contents":["stream_window_margin_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["stream_window_update_threshold",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["httpmethod",[{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[172,10]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"HttpMethod","moduleName":"Stetson.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"or is it a verb\n"}],"tag":"SearchResult"}]],["httpoptions",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[135,29]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"httpOptions","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ConvertableOptions"],"ConvertOptionsWithDefaults"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"OptionToMaybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"HttpOpts"]}]}},{"tag":"TypeVar","contents":"options"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"HttpOpts"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"HttpOpts"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["httpopts",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[120,6]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"HttpOpts","moduleName":"Erl.Gun","info":{"values":[{"type":{"tag":"RCons","contents":["closing_timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"RCons","contents":["cookie_ignore_informational",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["flow",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"PosInt"]}]},{"tag":"RCons","contents":["keepalive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"Timeout"]}]},{"tag":"RCons","contents":["transform_header_name",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"TransformHeaderNameFn"]}]},{"tag":"RCons","contents":["version",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"HttpVersion"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["https",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[112,15]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"https","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Hypertext Transfer Protocol Secure ([RFC7230, Section 2.7.2](https://tools.ietf.org/html/rfc7230#section-2.7.2))\n"}],"tag":"SearchResult"}]],["httpversion",[{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[111,12]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"HttpVersion","moduleName":"Erl.Gun","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["guard",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/control/v5.0.0-erl1/src/Control/Alternative.purs","end":[48,54]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"guard","moduleName":"Control.Alternative","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fail using `Plus` if a condition does not hold, or\nsucceed using `Applicative` if it does.\n\nFor example:\n\n```purescript\nimport Prelude\nimport Control.Alternative (guard)\nimport Data.Array ((..))\n\nfactors :: Int -> Array Int\nfactors n = do\n  a <- 1..n\n  b <- 1..n\n  guard $ a * b == n\n  pure a\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Monoid.purs","end":[94,49]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"guard","moduleName":"Data.Monoid","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Allow or \"truncate\" a Monoid to its `mempty` value based on a condition.\n"}],"tag":"SearchResult"}]],["gun_data",[{"values":[{"sourceSpan":{"start":[418,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[418,13]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_data","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Binary","Type"],"Binary"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_down",[{"values":[{"sourceSpan":{"start":[411,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[411,13]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_down","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"DownProtocol"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"DownReason"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_error",[{"values":[{"sourceSpan":{"start":[413,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[413,14]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_error","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ErrorReason"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_error2",[{"values":[{"sourceSpan":{"start":[414,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[414,15]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_error2","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ErrorReason"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_inform",[{"values":[{"sourceSpan":{"start":[416,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[416,15]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_inform","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Status"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_push",[{"values":[{"sourceSpan":{"start":[415,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[415,13]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_push","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Method"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"URI"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_response",[{"values":[{"sourceSpan":{"start":[417,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[417,17]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_response","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Status"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_trailers",[{"values":[{"sourceSpan":{"start":[419,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[419,17]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_trailers","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_tunnel_up",[{"values":[{"sourceSpan":{"start":[410,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[410,18]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_tunnel_up","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"UpProtocol"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_up",[{"values":[{"sourceSpan":{"start":[409,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[409,11]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_up","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"UpProtocol"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_upgrade",[{"values":[{"sourceSpan":{"start":[412,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[412,16]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_upgrade","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Headers"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gun_ws",[{"values":[{"sourceSpan":{"start":[420,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[420,11]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Gun_ws","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"ConnPid"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"StreamRef"]},{"tag":"TypeConstructor","contents":[["Erl","Gun"],"Frame"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gundown",[{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun/WsGun.purs","end":[29,12]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"GunDown","moduleName":"Erl.Gun.WsGun","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Gun"],"DownReason"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["gunmessage",[{"values":[{"sourceSpan":{"start":[408,1],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[420,35]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"GunMessage","moduleName":"Erl.Gun","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["guntcp",[{"values":[{"sourceSpan":{"start":[269,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[269,11]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"GunTcp","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["guntls",[{"values":[{"sourceSpan":{"start":[270,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[270,11]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"GunTls","moduleName":"Erl.Gun","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"ConnectOptions"]}}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"ClientOptions"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ssl"],"CommonOptions"]},{"tag":"REmpty","contents":{}}]}}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ewouldblock",[{"values":[{"sourceSpan":{"start":[162,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[162,16]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EWouldblock","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cycle",[{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[196,36]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cycle","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list by repeating another list\n"}],"tag":"SearchResult"}]],["<<$>>",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/bifunctors/v5.0.0/src/Control/Biapply.purs","end":[14,27]},"score":8,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"(<<$>>)","moduleName":"Control.Biapply","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":"A convenience operator which can be used to apply the result of `bipure` in\nthe style of `Applicative`:\n\n```purescript\nbipure f g <<$>> x <<*>> y\n```\n"}],"tag":"SearchResult"}]],["<<*",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/bifunctors/v5.0.0/src/Control/Biapply.purs","end":[33,30]},"score":8,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"(<<*)","moduleName":"Control.Biapply","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<<*>>",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/bifunctors/v5.0.0/src/Control/Biapply.purs","end":[21,26]},"score":8,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"(<<*>>)","moduleName":"Control.Biapply","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<<<",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Semigroupoid.purs","end":[19,24]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<<<)","moduleName":"Control.Semigroupoid","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<<=",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[35,23]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"(<<=)","moduleName":"Control.Extend","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],[".|.",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int/Bits.purs","end":[20,20]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"(.|.)","moduleName":"Data.Int.Bits","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
// This file was generated by purescript-docs-search.
window.DocsSearchIndex["28"] = [["vnc",[{"values":[{"sourceSpan":{"start":[340,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[340,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"vnc","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Remote Framebuffer Protocol ([RFC7869](https://tools.ietf.org/html/rfc7869))\n"}],"tag":"SearchResult"}]],["sqrt",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[61,40]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sqrt","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the square root of the argument.\n"}],"tag":"SearchResult"}]],["sqrt1_2",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[97,33]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sqrt1_2","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The Square root of one half, around 0.707107.\n"}],"tag":"SearchResult"}]],["sqrt2",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[100,31]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sqrt2","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The square root of two, around 1.41421.\n"}],"tag":"SearchResult"}]],["qs",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req/Monad.purs","end":[49,51]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"qs","moduleName":"Erl.Cowboy.Req.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Req.purs","end":[109,35]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"qs","moduleName":"Erl.Cowboy.Req","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["outedges",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/graphs/v5.0.0/src/Data/Graph.purs","end":[63,66]},"score":0,"packageInfo":{"values":["graphs"],"tag":"Package"},"name":"outEdges","moduleName":"Data.Graph","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Graph"],"Graph"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"k"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the keys which are directly accessible from the given key.\n"}],"tag":"SearchResult"}]],["outerdata",[{"values":[{"sourceSpan":{"start":[369,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[379,4]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"OuterData","moduleName":"Pinto.GenStatem","info":{"values":[{"typeArguments":[["info",null],["internal",null],["timerName",null],["timerContent",null],["commonData",null],["stateId",null],["state",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["outframe",[{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[86,37]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"OutFrame","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[97,30]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"outFrame","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"Frame"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","WebSocket"],"OutFrame"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"TODO: Can also output iodata() versions, but input always binary\n"}],"tag":"SearchResult"}]]]
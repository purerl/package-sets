// This file was generated by purescript-docs-search.
window.DocsSearchIndex["12"] = [["sameline",[{"values":[{"sourceSpan":{"start":[145,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Indent.purs","end":[145,42]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"sameLine","moduleName":"Text.Parsing.Indent","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses only on the same line as the reference\n"}],"tag":"SearchResult"}]],["sameorindented",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Indent.purs","end":[141,48]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"sameOrIndented","moduleName":"Text.Parsing.Indent","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses only when indented past the level of the reference or on the same line\n"}],"tag":"SearchResult"}]],["sample",[{"values":[{"sourceSpan":{"start":[237,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[237,53]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"sample","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Sample a random generator\n"}],"tag":"SearchResult"}]],["sandbox",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Sandboxed.purs","end":[31,31]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"sandbox","moduleName":"Pathy.Sandboxed","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pathy","Phantom"],"IsRelOrAbs"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Sandboxed"],"SandboxedPath"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to sandbox a path relative to an absolute directory (\"sandbox\nroot\"). If the `Path a b` escapes the sandbox root `Nothing` will be\nreturned.\n"}],"tag":"SearchResult"}]],["sandboxany",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Sandboxed.purs","end":[46,56]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"sandboxAny","moduleName":"Pathy.Sandboxed","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Sandboxed"],"SandboxedPath"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Sandboxes any path to `/`.\n\nThis should only be used for situations where a path is already constrained\nwithin a system so that access to `/` is safe - for instance, in URIs.\n"}],"tag":"SearchResult"}]],["sandboxedpath",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Sandboxed.purs","end":[16,65]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"SandboxedPath","moduleName":"Pathy.Sandboxed","info":{"values":[{"typeArguments":[["a",null],["b",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The type for paths that have been sandboxed.\n"}],"tag":"SearchResult"}]],["sandboxroot",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Sandboxed.purs","end":[50,61]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"sandboxRoot","moduleName":"Pathy.Sandboxed","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Sandboxed"],"SandboxedPath"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the location a `SandboxedPath` was sandboxed to.\n"}],"tag":"SearchResult"}]],["satisfy",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/String.purs","end":[66,88]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"satisfy","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a character satisfying the specified predicate.\n"}],"tag":"SearchResult"}]],["saturday",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Saturday","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nfs",[{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[196,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"nfs","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"network file system protocol ([RFC2224](https://tools.ietf.org/html/rfc2224))\n"}],"tag":"SearchResult"}]],["killed",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-process"],"tag":"Package"},"name":"Killed","moduleName":"Erl.Process.Raw","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["fn0",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[6,40]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn0","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of zero arguments\n"}],"tag":"SearchResult"}]],["fn1",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[11,22]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn1","moduleName":"Data.Function.Uncurried","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A function of one argument\n"}],"tag":"SearchResult"}]],["fn10",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[54,121]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn10","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of ten arguments\n"}],"tag":"SearchResult"}]],["fn2",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[14,56]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn2","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of two arguments\n"}],"tag":"SearchResult"}]],["fn3",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[19,64]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn3","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of three arguments\n"}],"tag":"SearchResult"}]],["fn4",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[24,72]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn4","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of four arguments\n"}],"tag":"SearchResult"}]],["fn5",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[29,80]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn5","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of five arguments\n"}],"tag":"SearchResult"}]],["fn6",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[34,88]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn6","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of six arguments\n"}],"tag":"SearchResult"}]],["fn7",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[39,96]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn7","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of seven arguments\n"}],"tag":"SearchResult"}]],["fn8",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[44,104]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn8","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of eight arguments\n"}],"tag":"SearchResult"}]],["fn9",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/functions/v5.0.0-erl1/src/Data/Function/Uncurried.purs","end":[49,112]},"score":9,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn9","moduleName":"Data.Function.Uncurried","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}]}]}]}]}]}]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A function of nine arguments\n"}],"tag":"SearchResult"}]],["eof",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Eof","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/String.purs","end":[34,63]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"eof","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match end-of-file.\n"}],"tag":"SearchResult"}]],["eopnotsupp",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EOpnotsupp","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["eoverflow",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EOverflow","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["as",[{"values":[{"sourceSpan":{"start":[239,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[239,92]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"as","moduleName":"Routing.Duplex.Parser","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[269,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[269,103]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"as","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Builds a codec for a custom type out of printer and parser functions.\n\n```purescript\ndata Sort = Asc | Desc\n\nsortToString :: Sort -> String\nsortToString = case _ of\n  Asc -> \"asc\"\n  Desc -> \"desc\"\n\nsortFromString :: String -> Either String Sort\nsortFromString = case _ of\n  \"asc\" -> Right Asc\n  \"desc\" -> Right Desc\n  val -> Left $ \"Not a sort: \" <> val\n\nsort :: RouteDuplex' String -> RouteDuplex' Sort\nsort = as sortToString sortFromString\n```\n"}],"tag":"SearchResult"}]],["aserrormessage",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Combinators.purs","end":[47,84]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"asErrorMessage","moduleName":"Text.Parsing.Parser.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flipped `(<?>)`.\n"}],"tag":"SearchResult"}]],["asin",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[15,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"asin","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse sine of the argument.\n"}],"tag":"SearchResult"}]],["asindex",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Indexed.purs","end":[30,21]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"asIndex","moduleName":"Data.Lens.Indexed","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedOptic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ask",[{"values":[{"sourceSpan":{"start":[15,3],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env/Class.purs","end":[15,28]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ask","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"typeClassArguments":[["e",null],["w",null]],"typeClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,3],"name":".spago/transformers/v5.2.0/src/Control/Monad/Reader/Class.purs","end":[17,13]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ask","moduleName":"Control.Monad.Reader.Class","info":{"values":[{"typeClassArguments":[["r",null],["m",null]],"typeClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asks",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Env/Class.purs","end":[18,69]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"asks","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["e1",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"e1"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"e2"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get a value which depends on the environment.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Reader/Class.purs","end":[23,54]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"asks","moduleName":"Control.Monad.Reader.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Projects a value from the global context in a `MonadAsk`.\n"}],"tag":"SearchResult"}]],["assert",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[21,33]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assert","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with message \"Assertion failed\" when the boolean\nvalue is false.\n"}],"tag":"SearchResult"}]],["assert'",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[26,44]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assert'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message when the boolean\nvalue is false.\n"}],"tag":"SearchResult"}]],["assertequal",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[73,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertEqual","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["actual",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["expected",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares the `expected` and `actual` values for equality and\nthrows a runtime exception when the values are not equal.\n\nThe message indicates the expected value and the actual value.\n"}],"tag":"SearchResult"}]],["assertequal'",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[86,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertEqual'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["actual",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["expected",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares the `expected` and `actual` values for equality and throws a\nruntime exception with the specified message when the values are not equal.\n\nThe message also indicates the expected value and the actual value.\n"}],"tag":"SearchResult"}]],["assertequals",[{"values":[{"sourceSpan":{"start":[244,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[244,61]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertEquals","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Self-documenting equality assertion\n"}],"tag":"SearchResult"}]],["assertfalse",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[122,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertFalse","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception when the value is `true`.\n\nThe message indicates the expected value (`false`)\nand the actual value (`true`).\n"}],"tag":"SearchResult"}]],["assertfalse'",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[133,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertFalse'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message when the value is\n`true`.\n\nThe message also indicates the expected value (`false`)\nand the actual value (`true`).\n"}],"tag":"SearchResult"}]],["assertgreaterthan",[{"values":[{"sourceSpan":{"start":[267,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[267,67]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertGreaterThan","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertgreaterthaneq",[{"values":[{"sourceSpan":{"start":[272,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[272,69]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertGreaterThanEq","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertlessthan",[{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[257,64]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertLessThan","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertlessthaneq",[{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[262,66]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertLessThanEq","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertnotequals",[{"values":[{"sourceSpan":{"start":[251,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[251,64]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertNotEquals","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Self-documenting inequality assertion\n"}],"tag":"SearchResult"}]],["assertthrows",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[41,53]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertThrows","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with message \"Assertion failed: An error should\nhave been thrown\", unless the argument throws an exception when evaluated.\n\nThis function is specifically for testing unsafe pure code; for example,\nto make sure that an exception is thrown if a precondition is not\nsatisfied. Functions which use `Effect a` can be\ntested with `catchException` instead.\n"}],"tag":"SearchResult"}]],["assertthrows'",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[56,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertThrows'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message, unless the argument\nthrows an exception when evaluated.\n\nThis function is specifically for testing unsafe pure code; for example,\nto make sure that an exception is thrown if a precondition is not\nsatisfied. Functions which use `Effect a` can be\ntested with `catchException` instead.\n"}],"tag":"SearchResult"}]],["asserttrue",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[102,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertTrue","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception when the value is `false`.\n\nThe message indicates the expected value (`true`)\nand the actual value (`false`).\n"}],"tag":"SearchResult"}]],["asserttrue'",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/assert/v5.0.0-erl1/src/Test/Assert.purs","end":[113,17]},"score":34,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertTrue'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message when the value is\n`false`.\n\nThe message also indicates the expected value (`true`)\nand the actual value (`false`).\n"}],"tag":"SearchResult"}]],["assign",[{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Setter.purs","end":[95,74]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"assign","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set the foci of a `Setter` in a monadic state to a constant value.\n"}],"tag":"SearchResult"}]],["assignjust",[{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Setter.purs","end":[123,86]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"assignJust","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assoc",[{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/these/v5.0.0/src/Data/These.purs","end":[183,66]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"assoc","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Re-associate `These` from left to right.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Encode/Combinators.purs","end":[22,57]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"assoc","moduleName":"Erl.Data.Jsone.Encode.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Data","Jsone","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JAssoc"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named implementation of the `(:=)` operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Expr.purs","end":[16,48]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"Assoc","moduleName":"Text.Parsing.Parser.Expr","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["assocleft",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"AssocLeft","moduleName":"Text.Parsing.Parser.Expr","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assocnone",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"AssocNone","moduleName":"Text.Parsing.Parser.Expr","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assocright",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"AssocRight","moduleName":"Text.Parsing.Parser.Expr","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asynchronous",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[38,50]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Asynchronous","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["OpenTelemetry","Metrics"],"Synchronicity"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["_userinfo",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/uri/v8.0.1/src/URI/Authority.purs","end":[97,23]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"_userInfo","moduleName":"URI.Authority","info":{"values":[{"type":{"tag":"ForAll","contents":["userInfo",{"tag":"ForAll","contents":["hosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","Authority"],"Authority"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"userInfo"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A lens for the user-info component of the authority.\n"}],"tag":"SearchResult"}]],[">",[{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[156,26]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(>)","moduleName":"Data.Ord","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
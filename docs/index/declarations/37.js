// This file was generated by purescript-docs-search.
window.DocsSearchIndex["37"] = [["~=",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Approximate.purs","end":[69,28]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"(~=)","moduleName":"Data.Number.Approximate","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["zshr",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int/Bits.purs","end":[34,41]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"zshr","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise zero-fill shift right.\n"}],"tag":"SearchResult"}]],["type",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Type","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Type` is the kind of all proper types: those that classify value-level terms.\nFor example the type `Boolean` has kind `Type`; denoted by `Boolean :: Type`.\n"}],"tag":"SearchResult"}]],["typeequals",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/type-equality/v4.0.0/src/Type/Equality.purs","end":[22,32]},"score":2,"packageInfo":{"values":["type-equality"],"tag":"Package"},"name":"TypeEquals","moduleName":"Type.Equality","info":{"values":[{"superclasses":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}],"fundeps":[[["a"],["b"]],[["b"],["a"]]],"arguments":[["a",null],["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"This type class asserts that types `a` and `b`\nare equal.\n\nThe functional dependencies and the single\ninstance below will force the two type arguments\nto unify when either one is known.\n\nNote: any instance will necessarily overlap with\n`refl` below, so instances of this class should\nnot be defined in libraries.\n"}],"tag":"SearchResult"}]],["typemismatch",[{"values":[{"sourceSpan":{"start":[56,3],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[56,17]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"TypeMismatch","moduleName":"Foreign","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typeof",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/foreign/v6.0.1-erl1/src/Foreign.purs","end":[100,43]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"typeOf","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read the Javascript _type_ of a value\n"}],"tag":"SearchResult"}]],["%",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/rationals/c883c972513380ae161d816ed42108acfe8cc8f6/src/Data/Ratio.purs","end":[58,21]},"score":0,"packageInfo":{"values":["rationals"],"tag":"Package"},"name":"(%)","moduleName":"Data.Ratio","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[73,24]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"(%)","moduleName":"Math","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
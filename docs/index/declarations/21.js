// This file was generated by purescript-docs-search.
window.DocsSearchIndex["21"] = [["time",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/DateTime.purs","end":[47,25]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"time","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time.purs","end":[24,48]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Time","moduleName":"Data.Time","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,11],"name":".spago/datetime/v5.0.2-erl1/src/Data/Time.purs","end":[24,17]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Time","moduleName":"Data.Time","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Hour"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Minute"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Second"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Millisecond"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/console/v5.0.0-erl1/src/Effect/Class/Console.purs","end":[33,52]},"score":45,"packageInfo":{"values":["console"],"tag":"Package"},"name":"time","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/console/v5.0.0-erl1/src/Effect/Console.purs","end":[49,45]},"score":45,"packageInfo":{"values":["console"],"tag":"Package"},"name":"time","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Start a named timer.\n"}],"tag":"SearchResult"}]],["timeend",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/console/v5.0.0-erl1/src/Effect/Class/Console.purs","end":[39,55]},"score":45,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeEnd","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/console/v5.0.0-erl1/src/Effect/Console.purs","end":[55,48]},"score":45,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeEnd","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Stop a named timer and print time since it started in milliseconds.\n"}],"tag":"SearchResult"}]],["timelog",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/console/v5.0.0-erl1/src/Effect/Class/Console.purs","end":[36,55]},"score":45,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeLog","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/console/v5.0.0-erl1/src/Effect/Console.purs","end":[52,48]},"score":45,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeLog","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Print the time since a named timer started in milliseconds.\n"}],"tag":"SearchResult"}]],["timeoffset",[{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[105,19]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"TimeOffset","moduleName":"Erl.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[105,19]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"TimeOffset","moduleName":"Erl.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["timeout",[{"values":[{"sourceSpan":{"start":[143,3],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[143,12]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Timeout","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[614,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[614,12]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Timeout","moduleName":"Erl.Gun","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/erl-test-eunit/v0.0.4/src/Erl/Test/EUnit.purs","end":[78,41]},"score":0,"packageInfo":{"values":["erl-test-eunit"],"tag":"Package"},"name":"timeout","moduleName":"Erl.Test.EUnit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Erl","Test","EUnit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[220,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[222,20]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Timeout","moduleName":"Erl.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[221,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[221,12]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Timeout","moduleName":"Erl.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[100,12]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Timeout","moduleName":"Pinto.GenServer","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[359,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[362,11]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Timeout","moduleName":"Pinto.GenStatem","info":{"values":[{"typeArguments":[["timerContent",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["timeoutaction",[{"values":[{"sourceSpan":{"start":[344,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[344,18]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"TimeoutAction","moduleName":"Pinto.GenStatem","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenStatem"],"TimeoutAction"]},{"tag":"TypeVar","contents":"timerContent"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[348,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenStatem.purs","end":[352,36]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"TimeoutAction","moduleName":"Pinto.GenStatem","info":{"values":[{"typeArguments":[["timerContent",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["timerref",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Timer.purs","end":[19,37]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"TimerRef","moduleName":"Pinto.Timer","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["timestamp",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing.purs","end":[141,38]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Timestamp","moduleName":"OpenTelemetry.Tracing","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[146,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing.purs","end":[146,45]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"timestamp","moduleName":"OpenTelemetry.Tracing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Timestamp"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["timestamptonano",[{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing.purs","end":[148,51]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"timestampToNano","moduleName":"OpenTelemetry.Tracing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Timestamp"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tip",[{"values":[{"sourceSpan":{"start":[312,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[312,13]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"tip","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Transaction Internet Protocol ([RFC2371](https://tools.ietf.org/html/rfc2371))\n"}],"tag":"SearchResult"}]],["title",[{"values":[{"sourceSpan":{"start":[1663,1],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode/Internal/Casing.purs","end":[1663,26]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"title","moduleName":"Data.CodePoint.Unicode.Internal.Casing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["titlecaseletter",[{"values":[{"sourceSpan":{"start":[113,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[113,26]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"TitlecaseLetter","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["t7",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Product/Nested.purs","end":[41,51]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"T7","moduleName":"Data.Functor.Product.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product","Nested"],"T6"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/tuples/v6.0.1/src/Data/Tuple/Nested.purs","end":[90,49]},"score":24,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"T7","moduleName":"Data.Tuple.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T6"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["on",[{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Function.purs","end":[117,61]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"on","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `on` function is used to change the domain of a binary operator.\n\nFor example, we can create a function which compares two records based on the values of their `x` properties:\n\n```purescript\ncompareX :: forall r. { x :: Number | r } -> { x :: Number | r } -> Ordering\ncompareX = compare `on` _.x\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[168,6]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"on","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["sym",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[85,6]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"on","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["sym",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[124,4]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"on","moduleName":"Erl.Untagged.Union","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["choices",{"tag":"ForAll","contents":["rem",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"IsInChoices"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"choices"},{"tag":"TypeVar","contents":"rem"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"RuntimeType"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"d"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Untagged","Union"],"RuntimeTypeMatch"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Untagged","Union"],"Item"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Erl","Untagged","Union"],"Nil"]}]}},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"x"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Untagged","Union"],"Union"]},{"tag":"TypeVar","contents":"rem"}]}]},{"tag":"TypeVar","contents":"x"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Untagged","Union"],"Union"]},{"tag":"TypeVar","contents":"choices"}]}]},{"tag":"TypeVar","contents":"x"}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["once",[{"values":[{"sourceSpan":{"start":[337,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[337,9]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Once","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ondirorfile",[{"values":[{"sourceSpan":{"start":[57,3],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Phantom.purs","end":[62,9]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"onDirOrFile","moduleName":"Pathy.Phantom","info":{"values":[{"typeClassArguments":[["b",null]],"typeClass":[["Pathy","Phantom"],"IsDirOrFile"],"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pathy","Phantom"],"IsDirOrFile"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"File"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"File"]}]}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["one",[{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Semiring.purs","end":[38,12]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"one","moduleName":"Data.Semiring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semiring"],"Semiring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["oneforall",[{"values":[{"sourceSpan":{"start":[97,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[97,14]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"OneForAll","moduleName":"Pinto.Supervisor","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["oneforone",[{"values":[{"sourceSpan":{"start":[98,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Supervisor.purs","end":[98,14]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"OneForOne","moduleName":"Pinto.Supervisor","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["oneof",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen.purs","end":[34,67]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"oneOf","moduleName":"Control.Monad.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a generator that outputs a value chosen from a selection of\nexisting generators with uniform probability.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[286,62]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"oneOf","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combines a collection of elements using the `Alt` operation.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/nonempty/v6.0.0/src/Data/NonEmpty.purs","end":[104,58]},"score":7,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"oneOf","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `alt` (`<|>`) result of:\n- The first element lifted to the container of the remaining elements.\n- The remaining elements.\n\n```purescript\nimport Data.Maybe(Maybe(..))\n\noneOf (1 :| Nothing) == Just 1\noneOf (1 :| Just 2) == Just 1\n\noneOf (1 :| [2, 3]) == [1,2,3]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck/Gen.purs","end":[158,50]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"oneOf","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which selects and executes a random generator from\na non-empty array of random generators with uniform probability.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/String.purs","end":[87,79]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"oneOf","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match one of the characters in the array.\n"}],"tag":"SearchResult"}]],["oneofas",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Utils.purs","end":[17,112]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"oneOfAs","moduleName":"Data.Formatter.Parser.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["oneofmap",[{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[290,77]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"oneOfMap","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Folds a structure into some `Plus`.\n"}],"tag":"SearchResult"}]],["onerecord",[{"values":[{"sourceSpan":{"start":[102,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/Semiring.purs","end":[102,85]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"oneRecord","moduleName":"Data.Semiring","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Semiring"],"SemiringRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rproxy",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"SemiringRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rproxy"},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["only",[{"values":[{"sourceSpan":{"start":[153,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Prism.purs","end":[153,51]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"only","moduleName":"Data.Lens.Prism","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`only` focuses not just on a case, but a specific value of that case.\n\n```purescript\nsolidWhiteFocus :: Prism' Fill Unit\nsolidWhiteFocus = only $ Solid Color.white\n\nis      solidWhiteFocus (Solid Color.white) == true\npreview solidWhiteFocus (Solid Color.white) == Just unit\nreview  solidWhiteFocus unit                == Solid Color.white\n```\n\n*Note*: `only` depends on `Eq`. Strange definitions of `(==)`\n(for example, that it counts any `Fill` as being equal to `Solid Color.white`)\nwill create a prism that violates the preview-review law. \n"}],"tag":"SearchResult"}]],["onmatch",[{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[204,6]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"onMatch","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["rl",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a `VariantF` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`VariantF` case.\n\n```purescript\nonMatch\n { foo: \\foo -> \"Foo: \" <> maybe \"nothing\" id foo\n , bar: \\bar -> \"Bar: \" <> snd bar\n }\n```\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[121,6]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"onMatch","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["rl",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r3"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a `Variant` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`Variant` case.\n\n```purescript\nonMatch\n  { foo: \\foo -> \"Foo: \" <> foo\n  , bar: \\bar -> \"Bar: \" <> bar\n  }\n````\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n"}],"tag":"SearchResult"}]],["onrelorabs",[{"values":[{"sourceSpan":{"start":[21,3],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Phantom.purs","end":[26,9]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"onRelOrAbs","moduleName":"Pathy.Phantom","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Pathy","Phantom"],"IsRelOrAbs"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"RelOrAbs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"DirOrFile"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pathy","Phantom"],"IsRelOrAbs"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Rel"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Rel"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noargs",[{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Generic.purs","end":[83,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"noArgs","moduleName":"Routing.Duplex.Generic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex'"]},{"tag":"TypeConstructor","contents":[["Data","Generic","Rep"],"NoArguments"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noarguments",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[23,31]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NoArguments","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for constructors with no arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,18],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[23,31]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NoArguments","moduleName":"Data.Generic.Rep","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nocall",[{"values":[{"sourceSpan":{"start":[199,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/HandlerProxy.purs","end":[199,48]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"noCall","moduleName":"Stetson.HandlerProxy","info":{"values":[{"type":{"tag":"ForAll","contents":["t3",{"tag":"ForAll","contents":["t4",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"t3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t3"},{"tag":"TypeVar","contents":"t4"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noconstructors",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Generic/Rep.purs","end":[20,20]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NoConstructors","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for types with no constructors.\n"}],"tag":"SearchResult"}]],["node",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[64,44]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Node","moduleName":"Data.FingerTree","info":{"values":[{"typeArguments":[["v",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Erlang.purs","end":[92,35]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"node","moduleName":"Erl.Kernel.Erlang","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Erl","Atom"],"Atom"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto.purs","end":[22,37]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"node","moduleName":"Pinto","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["node2",[{"values":[{"sourceSpan":{"start":[64,15],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[64,22]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Node2","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[79,68]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"node2","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["node3",[{"values":[{"sourceSpan":{"start":[64,29],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[64,36]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Node3","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[82,73]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"node3","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nodes",[{"values":[{"sourceSpan":{"start":[385,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[385,77]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"nodes","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nodetodigit",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[85,47]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"nodeToDigit","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nofin",[{"values":[{"sourceSpan":{"start":[359,3],"name":".spago/erl-gun/v0.0.2/src/Erl/Gun.purs","end":[359,10]},"score":0,"packageInfo":{"values":["erl-gun"],"tag":"Package"},"name":"Nofin","moduleName":"Erl.Gun","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noflags",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/Regex/Flags.purs","end":[21,22]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"noFlags","moduleName":"Data.String.Regex.Flags","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"All flags set to false.\n"}],"tag":"SearchResult"}]],["nokey",[{"values":[{"sourceSpan":{"start":[99,12],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Internal.purs","end":[99,19]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"NoKey","moduleName":"Data.Sequence.Internal","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["non",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Iso.purs","end":[57,47]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"non","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"If `a1` is obtained from `a` by removing a single value, then\n`Maybe a1` is isomorphic to `a`.\n"}],"tag":"SearchResult"}]],["nonadditive",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[42,46]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"NonAdditive","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["none",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/unfoldable/v5.0.0-erl1/src/Data/Unfoldable.purs","end":[93,40]},"score":12,"packageInfo":{"values":["unfoldable"],"tag":"Package"},"name":"none","moduleName":"Data.Unfoldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The container with no elements - unfolded with zero iterations.\nFor example:\n\n``` purescript\nnone == ([] :: Array Unit)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,3],"name":".spago/erl-file/v0.0.3/src/Erl/File.purs","end":[56,9]},"score":0,"packageInfo":{"values":["erl-file"],"tag":"Package"},"name":"None","moduleName":"Erl.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonempty",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/nonempty/v6.0.0/src/Data/NonEmpty.purs","end":[47,37]},"score":7,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"NonEmpty","moduleName":"Data.NonEmpty","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A non-empty container of elements of type a.\n\n```purescript\nimport Data.NonEmpty\n\nnonEmptyArray :: NonEmpty Array Int\nnonEmptyArray = NonEmpty 1 [2,3]\n\nimport Data.List(List(..), (:))\n\nnonEmptyList :: NonEmpty List Int\nnonEmptyList = NonEmpty 1 (2 : 3 : Nil)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,19],"name":".spago/nonempty/v6.0.0/src/Data/NonEmpty.purs","end":[47,29]},"score":7,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"NonEmpty","moduleName":"Data.NonEmpty","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyarray",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty/Internal.purs","end":[31,50]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"NonEmptyArray","moduleName":"Data.Array.NonEmpty.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An array that is known not to be empty.\n\nYou can use the constructor to create a `NonEmptyArray` that isn't\nnon-empty, breaking the guarantee behind this newtype. It is\nprovided as an escape hatch mainly for the `Data.Array.NonEmpty`\nand `Data.Array` modules. Use this at your own risk when you know\nwhat you are doing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,25],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty/Internal.purs","end":[31,50]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"NonEmptyArray","moduleName":"Data.Array.NonEmpty.Internal","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptylist",[{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/Types.purs","end":[209,63]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Lazy.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[209,24],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/Types.purs","end":[209,63]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Lazy.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/lists/v6.0.1/src/Data/List/Types.purs","end":[192,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,24],"name":".spago/lists/v6.0.1/src/Data/List/Types.purs","end":[192,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[243,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/Types.purs","end":[243,56]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Erl.Data.List.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[243,24],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/Types.purs","end":[243,56]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Erl.Data.List.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyqueue",[{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/erl-queue/v0.0.2/src/Erl/Data/Queue/Types.purs","end":[245,59]},"score":0,"packageInfo":{"values":["erl-queue"],"tag":"Package"},"name":"NonEmptyQueue","moduleName":"Erl.Data.Queue.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[245,25],"name":".spago/erl-queue/v0.0.2/src/Erl/Data/Queue/Types.purs","end":[245,59]},"score":0,"packageInfo":{"values":["erl-queue"],"tag":"Package"},"name":"NonEmptyQueue","moduleName":"Erl.Data.Queue.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Queue","Types"],"Queue"]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyreplacement",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[53,65]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyReplacement","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases to specify a non-empty replacement for a pattern.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,29],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[53,65]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyReplacement","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyset",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/ordered-collections/v2.0.2-erl1/src/Data/Set/NonEmpty.purs","end":[45,44]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"NonEmptySet","moduleName":"Data.Set.NonEmpty","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`NonEmptySet a` represents a non-empty set of values of type `a`\n"}],"tag":"SearchResult"}]],["nonemptystring",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[28,47]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A string that is known not to be empty.\n\nYou can use this constructor to create a `NonEmptyString` that isn't\nnon-empty, breaking the guarantee behind this newtype. It is\nprovided as an escape hatch mainly for the `Data.NonEmpty.CodeUnits`\nand `Data.NonEmpty.CodePoints` modules. Use this at your own risk\nwhen you know what you are doing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,24],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/Internal.purs","end":[28,47]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noneof",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/String.purs","end":[91,80]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"noneOf","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match any character not in the array.\n"}],"tag":"SearchResult"}]],["nonmonotonic",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Metrics.purs","end":[46,49]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"NonMonotonic","moduleName":"OpenTelemetry.Metrics","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nonnegint",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Types.purs","end":[41,8]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"NonNegInt","moduleName":"Erl.Types","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nonspacingmark",[{"values":[{"sourceSpan":{"start":[116,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[116,25]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"NonSpacingMark","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noreply",[{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[133,83]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"noReply","moduleName":"Pinto.GenServer","info":{"values":[{"type":{"tag":"ForAll","contents":["reply",{"tag":"ForAll","contents":["cont",{"tag":"ForAll","contents":["stop",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"CallResult"]},{"tag":"TypeVar","contents":"reply"}]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"state"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a result from inside a GenServer 'handle_call' that results in\nthe new state being stored and nothing being returned to the caller (yet)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[191,3],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[191,12]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"NoReply","moduleName":"Stetson.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"state"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noreplywithaction",[{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[139,113]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"noReplyWithAction","moduleName":"Pinto.GenServer","info":{"values":[{"type":{"tag":"ForAll","contents":["reply",{"tag":"ForAll","contents":["cont",{"tag":"ForAll","contents":["stop",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"Action"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"CallResult"]},{"tag":"TypeVar","contents":"reply"}]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a result from inside a GenServer 'handle_call' that results in\nthe new state being stored and nothing being returned to the caller (yet)\nand the attached action being returned to OTP for processing\n"}],"tag":"SearchResult"}]],["normal",[{"values":[{"sourceSpan":{"start":[15,22],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Common.purs","end":[15,30]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Normal","moduleName":"Erl.Cowboy.Handlers.Common","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,22],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/WebSocket.purs","end":[140,11]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Normal","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,3],"name":".spago/erl-process/v3.3.0/src/Erl/Process/Raw.purs","end":[64,11]},"score":0,"packageInfo":{"values":["erl-process"],"tag":"Package"},"name":"Normal","moduleName":"Erl.Process.Raw","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[107,11]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Normal","moduleName":"Pinto.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["not",[{"values":[{"sourceSpan":{"start":[44,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/HeytingAlgebra.purs","end":[44,16]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"not","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[58,39]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Not","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[[["bool"],["output"]]],"arguments":[["bool",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Not a `Boolean`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[62,55]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"not","moduleName":"Type.Data.Boolean","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Boolean"],"Not"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notassigned",[{"values":[{"sourceSpan":{"start":[140,9],"name":".spago/unicode/v5.0.0-erl1/src/Data/CodePoint/Unicode.purs","end":[140,22]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"NotAssigned","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notauthorized",[{"values":[{"sourceSpan":{"start":[177,3],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[177,18]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"NotAuthorized","moduleName":"Stetson.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["note",[{"values":[{"sourceSpan":{"start":[263,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[263,47]},"score":23,"packageInfo":{"values":["either"],"tag":"Package"},"name":"note","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Takes a default and a `Maybe` value, if the value is a `Just`, turn it into\na `Right`, if the value is a `Nothing` use the provided default as a `Left`\n\n```purescript\nnote \"default\" Nothing = Left \"default\"\nnote \"default\" (Just 1) = Right 1\n```\n"}],"tag":"SearchResult"}]],["note'",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[273,58]},"score":23,"packageInfo":{"values":["either"],"tag":"Package"},"name":"note'","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to `note`, but for use in cases where the default value may be\nexpensive to compute.\n\n```purescript\nnote' (\\_ -> \"default\") Nothing = Left \"default\"\nnote' (\\_ -> \"default\") (Just 1) = Right 1\n```\n"}],"tag":"SearchResult"}]],["notelem",[{"values":[{"sourceSpan":{"start":[267,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[267,61]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"notElem","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[418,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[418,53]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"notElem","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns true if the array does not have the given element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[390,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[390,65]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"notElem","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a value is not an element of a data structure.\n"}],"tag":"SearchResult"}]],["notelemof",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Fold.purs","end":[120,86]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"notElemOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Whether a `Fold` not contains a given element.\n"}],"tag":"SearchResult"}]],["noteq",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Eq.purs","end":[35,45]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"notEq","moduleName":"Data.Eq","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`notEq` tests whether one value is _not equal_ to another. Shorthand for\n`not (eq x y)`.\n"}],"tag":"SearchResult"}]],["noteq1",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Eq.purs","end":[91,61]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"notEq1","moduleName":"Data.Eq","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notfollowedby",[{"values":[{"sourceSpan":{"start":[189,1],"name":".spago/parsing/v6.0.2-erl1/src/Text/Parsing/Parser/Combinators.purs","end":[189,76]},"score":2,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"notFollowedBy","moduleName":"Text.Parsing.Parser.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fail if the specified parser matches.\n"}],"tag":"SearchResult"}]],["nothing",[{"values":[{"sourceSpan":{"start":[19,14],"name":".spago/maybe/v5.0.0/src/Data/Maybe.purs","end":[19,23]},"score":31,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"Nothing","moduleName":"Data.Maybe","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/erl-lager/v0.0.1/src/Lager.purs","end":[26,70]},"score":0,"packageInfo":{"values":["erl-lager"],"tag":"Package"},"name":"notice","moduleName":"Lager","info":{"values":[{"type":{"tag":"ForAll","contents":["args",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"args"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"args"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[146,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[146,105]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"notice","moduleName":"Logger","info":{"values":[{"type":{"tag":"ForAll","contents":["metadata",{"tag":"ForAll","contents":["report",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"MinimalMetadata"]},{"tag":"TypeVar","contents":"metadata"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"report"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,15],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[58,23]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"Notice","moduleName":"Logger","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice'",[{"values":[{"sourceSpan":{"start":[170,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[170,118]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"notice'","moduleName":"Logger","info":{"values":[{"type":{"tag":"ForAll","contents":["metadata",{"tag":"ForAll","contents":["report",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Logger"],"Location"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"MinimalMetadata"]},{"tag":"TypeVar","contents":"metadata"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"report"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice1",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/erl-lager/v0.0.1/src/Lager.purs","end":[28,63]},"score":0,"packageInfo":{"values":["erl-lager"],"tag":"Package"},"name":"notice1","moduleName":"Lager","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice2",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/erl-lager/v0.0.1/src/Lager.purs","end":[29,70]},"score":0,"packageInfo":{"values":["erl-lager"],"tag":"Package"},"name":"notice2","moduleName":"Lager","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice3",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/erl-lager/v0.0.1/src/Lager.purs","end":[30,77]},"score":0,"packageInfo":{"values":["erl-lager"],"tag":"Package"},"name":"notice3","moduleName":"Lager","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice4",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/erl-lager/v0.0.1/src/Lager.purs","end":[31,84]},"score":0,"packageInfo":{"values":["erl-lager"],"tag":"Package"},"name":"notice4","moduleName":"Lager","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notice_",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/erl-lager/v0.0.1/src/Lager.purs","end":[9,68]},"score":0,"packageInfo":{"values":["erl-lager"],"tag":"Package"},"name":"notice_","moduleName":"Lager","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notmoved",[{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Rest.purs","end":[118,39]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"notMoved","moduleName":"Erl.Cowboy.Handlers.Rest","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Handlers","Rest"],"MovedResult"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notnull",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/nullable/v5.0.0-erl1/src/Data/Nullable.purs","end":[54,52]},"score":1,"packageInfo":{"values":["nullable"],"tag":"Package"},"name":"notNull","moduleName":"Data.Nullable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Wrap a non-null value.\n"}],"tag":"SearchResult"}]],["notranslation",[{"values":[{"sourceSpan":{"start":[96,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[96,18]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"NoTranslation","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notrecord",[{"values":[{"sourceSpan":{"start":[118,3],"name":".spago/prelude/v5.0.1-erl1/src/Data/HeytingAlgebra.purs","end":[118,78]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"notRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notstartedreason",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[94,19]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"NotStartedReason","moduleName":"Pinto.Types","info":{"values":[{"typeArguments":[["serverProcess",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["november",[{"values":[{"sourceSpan":{"start":[57,3],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date/Component.purs","end":[57,13]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"November","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["json",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[40,33]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"Json","moduleName":"Erl.Data.Jsone","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["jsonemptyobject",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[138,24]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"jsonEmptyObject","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonnull",[{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[134,32]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"jsonNull","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonparser",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Parser.purs","end":[8,43]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"jsonParser","moduleName":"Erl.Data.Jsone.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonsingletonobject",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[141,46]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"jsonSingletonObject","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jstring",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone.purs","end":[48,22]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"JString","moduleName":"Erl.Data.Jsone","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["item",[{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[84,55]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"Item","moduleName":"Erl.Untagged.Union","info":{"values":[{"typeArguments":[["t0",null],["t1",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["itemwithtype",[{"values":[{"sourceSpan":{"start":[805,1],"name":".spago/erl-untagged-union/v0.0.2/src/Erl/Untagged/Union.purs","end":[805,89]},"score":0,"packageInfo":{"values":["erl-untagged-union"],"tag":"Package"},"name":"ItemWithType","moduleName":"Erl.Untagged.Union","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["iterate",[{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[134,61]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"iterate","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate an infinite list by iterating a function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[54,53]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"iterate","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[192,45]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"iterate","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list by iterating a function\n"}],"tag":"SearchResult"}]],["itolistof",[{"values":[{"sourceSpan":{"start":[301,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Fold.purs","end":[305,22]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itoListOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedFold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Collects the foci of an `IndexedFold` into a list.\n"}],"tag":"SearchResult"}]],["itraversed",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Indexed.purs","end":[53,40]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itraversed","moduleName":"Data.Lens.Indexed","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedTraversal"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverses over a `TraversableWithIndex` container.\n"}],"tag":"SearchResult"}]],["itraverseof",[{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Traversal.purs","end":[136,9]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itraverseOf","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedOptic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turn a pure profunctor `IndexedTraversal` into a `lens`-like `IndexedTraversal`.\n"}],"tag":"SearchResult"}]],["itraverseof_",[{"values":[{"sourceSpan":{"start":[309,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Fold.purs","end":[315,12]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itraverseOf_","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedFold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse the foci of an `IndexedFold`, discarding the results.\n"}],"tag":"SearchResult"}]],["hush",[{"values":[{"sourceSpan":{"start":[283,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[283,42]},"score":23,"packageInfo":{"values":["either"],"tag":"Package"},"name":"hush","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turns an `Either` into a `Maybe`, by throwing eventual `Left` values away and converting\nthem into `Nothing`. `Right` values get turned into `Just`s.\n\n```purescript\nhush (Left \"ParseError\") = Nothing\nhush (Right 42) = Just 42\n```\n"}],"tag":"SearchResult"}]],["exactdate",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/datetime/v5.0.2-erl1/src/Data/Date.purs","end":[41,48]},"score":1,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"exactDate","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Day"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a date from year, month, and day components. The result will be\n`Nothing` if the provided values result in an invalid date.\n"}],"tag":"SearchResult"}]],["example",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[80,17]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"example","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"example ([RFC7595](https://tools.ietf.org/html/rfc7595))\n"}],"tag":"SearchResult"}]],["exbadport",[{"values":[{"sourceSpan":{"start":[163,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[163,14]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EXbadport","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exbadseq",[{"values":[{"sourceSpan":{"start":[164,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Inet.purs","end":[164,13]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EXbadseq","moduleName":"Erl.Kernel.Inet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["except",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except/Trans.purs","end":[51,69]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"except","moduleName":"Control.Monad.Except.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Construct a computation in the `ExceptT` transformer from an `Either` value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except.purs","end":[35,35]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Except","moduleName":"Control.Monad.Except","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["e",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A parametrizable exception monad; computations are either exceptions or\npure values. If an exception is thrown (see `throwError`), the computation\nterminates with that value. Exceptions may also be caught with `catchError`,\nallowing the computation to resume and exit successfully.\n\nThe type parameter `e` is the type of exceptions, and `a` is the type\nof successful results.\n\nA mechanism for trying many different computations until one succeeds is\nprovided via the `Alt` instance, specifically the `(<|>)` function.\nThe first computation to succeed is returned; if all fail, the exceptions\nare combined using their `Semigroup` instance. The `Plus` instance goes\nfurther and adds the possibility of a computation failing with an 'empty'\nexception; naturally, this requires the stronger constraint of a `Monoid`\ninstance for the exception type.\n"}],"tag":"SearchResult"}]],["exceptt",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except/Trans.purs","end":[33,49]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ExceptT","moduleName":"Control.Monad.Except.Trans","info":{"values":[{"typeArguments":[["e",null],["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A monad transformer which adds exceptions to other monads, in the same way\nas `Except`. As before, `e` is the type of exceptions, and `a` is the type\nof successful results. The new type parameter `m` is the inner monad that\ncomputations run in.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,23],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except/Trans.purs","end":[33,49]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ExceptT","moduleName":"Control.Monad.Except.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exchange",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Internal/Exchange.purs","end":[9,51]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Exchange","moduleName":"Data.Lens.Internal.Exchange","info":{"values":[{"typeArguments":[["a",null],["b",null],["s",null],["t",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Exchange` profunctor characterizes an `Iso`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,23],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Internal/Exchange.purs","end":[9,33]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Exchange","moduleName":"Data.Lens.Internal.Exchange","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["excludedoptions",[{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/erl-ranch/v0.0.2/src/Erl/Ranch.purs","end":[107,6]},"score":0,"packageInfo":{"values":["erl-ranch"],"tag":"Package"},"name":"ExcludedOptions","moduleName":"Erl.Ranch","info":{"values":[{"type":{"tag":"RCons","contents":["active",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Inet"],"SocketActive"]}]},{"tag":"RCons","contents":["header",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["reuseaddr",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["tclass",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["ttl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["recvtos",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["recvtclass",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["recvttl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["packet",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Kernel","Tcp"],"SocketPacket"]}]},{"tag":"RCons","contents":["packet_size",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Erl","Types"],"NonNegInt"]}]},{"tag":"RCons","contents":["show_econnreset",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["excludeoptions",[{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/erl-ranch/v0.0.2/src/Erl/Ranch.purs","end":[111,59]},"score":0,"packageInfo":{"values":["erl-ranch"],"tag":"Package"},"name":"excludeOptions","moduleName":"Erl.Ranch","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ranch"],"ExcludedOptions"]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Ranch"],"ExcludedOptions"]},{"tag":"TypeVar","contents":"r"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exclusive",[{"values":[{"sourceSpan":{"start":[157,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[157,14]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Exclusive","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exdev",[{"values":[{"sourceSpan":{"start":[81,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/File.purs","end":[81,10]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"EXdev","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["execrws",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/RWS.purs","end":[45,62]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execRWS","moduleName":"Control.Monad.RWS","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `RWS` monad, discarding the result\n"}],"tag":"SearchResult"}]],["execrwst",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/RWS/Trans.purs","end":[41,83]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execRWST","moduleName":"Control.Monad.RWS.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `RWST` monad, discarding the result.\n"}],"tag":"SearchResult"}]],["execstate",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State.purs","end":[36,45]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execState","moduleName":"Control.Monad.State","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `State` monad, discarding the result\n"}],"tag":"SearchResult"}]],["execstatet",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State/Trans.purs","end":[46,66]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execStateT","moduleName":"Control.Monad.State.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `StateT` monad discarding the result.\n"}],"tag":"SearchResult"}]],["execute",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/erl-stetson/v0.13.0/src/RoutingDuplexMiddleware.purs","end":[54,39]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"execute","moduleName":"RoutingDuplexMiddleware","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Req"],"Req"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy"],"Env"]}]},{"tag":"TypeConstructor","contents":[["RoutingDuplexMiddleware"],"ExecuteResult"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["executeresult",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/erl-stetson/v0.13.0/src/RoutingDuplexMiddleware.purs","end":[46,42]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"ExecuteResult","moduleName":"RoutingDuplexMiddleware","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["execwriter",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer.purs","end":[35,42]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execWriter","moduleName":"Control.Monad.Writer","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"w"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `Writer` monad, discarding the result\n"}],"tag":"SearchResult"}]],["execwritert",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Trans.purs","end":[41,63]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execWriterT","moduleName":"Control.Monad.Writer.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"w"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `WriterT` monad, discarding the result.\n"}],"tag":"SearchResult"}]],["exists",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/exists/v5.1.0/src/Data/Exists.purs","end":[27,60]},"score":2,"packageInfo":{"values":["exists"],"tag":"Package"},"name":"Exists","moduleName":"Data.Exists","info":{"values":[{"typeArguments":[["t0",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"This type constructor can be used to existentially quantify over a type.\n\nSpecifically, the type `Exists f` is isomorphic to the existential type `exists a. f a`.\n\nExistential types can be encoded using universal types (`forall`) for endofunctors in more general\ncategories. The benefit of this library is that, by using the FFI, we can create an efficient\nrepresentation of the existential by simply hiding type information.\n\nFor example, consider the type `exists s. Tuple s (s -> Tuple s a)` which represents infinite streams\nof elements of type `a`.\n\nThis type can be constructed by creating a type constructor `StreamF` as follows:\n\n```purescript\ndata StreamF a s = StreamF s (s -> Tuple s a)\n```\n\nWe can then define the type of streams using `Exists`:\n\n```purescript\ntype Stream a = Exists (StreamF a)\n```\n"}],"tag":"SearchResult"}]],["exit",[{"values":[{"sourceSpan":{"start":[12,24],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Handlers/Common.purs","end":[12,30]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Exit","moduleName":"Erl.Cowboy.Handlers.Common","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,3],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Exceptions.purs","end":[35,9]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"Exit","moduleName":"Erl.Kernel.Exceptions","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Exceptions.purs","end":[31,46]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"exit","moduleName":"Erl.Kernel.Exceptions","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/erl-process/v3.3.0/src/Erl/Process/Raw.purs","end":[79,46]},"score":0,"packageInfo":{"values":["erl-process"],"tag":"Package"},"name":"exit","moduleName":"Erl.Process.Raw","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[80,9]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"Exit","moduleName":"Pinto.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Process","Raw"],"Pid"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exitmessage",[{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[80,21]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"ExitMessage","moduleName":"Pinto.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["exitmsg",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/erl-process/v3.3.0/src/Erl/Process/Raw.purs","end":[66,18]},"score":0,"packageInfo":{"values":["erl-process"],"tag":"Package"},"name":"ExitMsg","moduleName":"Erl.Process.Raw","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["exitreason",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/erl-process/v3.3.0/src/Erl/Process/Raw.purs","end":[61,27]},"score":0,"packageInfo":{"values":["erl-process"],"tag":"Package"},"name":"ExitReason","moduleName":"Erl.Process.Raw","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,3],"name":".spago/erl-process/v3.3.0/src/Erl/Process/Raw.purs","end":[61,15]},"score":0,"packageInfo":{"values":["erl-process"],"tag":"Package"},"name":"ExitReason","moduleName":"Erl.Process.Raw","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Erl","Process","Raw"],"Pid"]},{"tag":"TypeConstructor","contents":[["Erl","Process","Raw"],"ExitMsg"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exp",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[34,39]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"exp","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `e` exponentiated to the power of the argument.\n"}],"tag":"SearchResult"}]],["expand",[{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[264,18]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"expand","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["mix",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"mix"},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Every `VariantF lt a` can be cast to some `VariantF gt a` as long as `lt` is a\nsubset of `gt`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[181,15]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"expand","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["gt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Every `Variant lt` can be cast to some `Variant gt` as long as `lt` is a\nsubset of `gt`.\n"}],"tag":"SearchResult"}]],["expected",[{"values":[{"sourceSpan":{"start":[58,3],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[58,13]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"Expected","moduleName":"Routing.Duplex.Parser","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["expectedendofpath",[{"values":[{"sourceSpan":{"start":[59,3],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[59,22]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"ExpectedEndOfPath","moduleName":"Routing.Duplex.Parser","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["expectinferred",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/expect-inferred/v2.0.0/src/ExpectTypes.purs","end":[11,37]},"score":0,"packageInfo":{"values":["expect-inferred"],"tag":"Package"},"name":"ExpectInferred","moduleName":"ExpectInferred","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["expected",null],["actual",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/expect-inferred/v2.0.0/src/ExpectTypes.purs","end":[31,10]},"score":0,"packageInfo":{"values":["expect-inferred"],"tag":"Package"},"name":"expectInferred","moduleName":"ExpectInferred","info":{"values":[{"type":{"tag":"ForAll","contents":["expected",{"tag":"ForAll","contents":["actual",{"tag":"ConstrainedType","contents":[{"constraintClass":[["ExpectInferred"],"ExpectInferred"],"constraintArgs":[{"tag":"TypeVar","contents":"expected"},{"tag":"TypeVar","contents":"actual"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"expected"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"actual"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["experiment",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Store/Class.purs","end":[39,88]},"score":10,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"experiment","moduleName":"Control.Comonad.Store.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Store","Class"],"ComonadStore"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract a collection of values from positions which depend on the current position.\n"}],"tag":"SearchResult"}]],["explore",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/free/v6.0.1/src/Control/Comonad/Cofree.purs","end":[96,7]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"explore","moduleName":"Control.Comonad.Cofree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"y"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"y"}]}]},null]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Explore a value in the cofree comonad by using an expression in a\ncorresponding free monad.\n\nThe free monad should be built from a functor which pairs with the\nfunctor underlying the cofree comonad.\n"}],"tag":"SearchResult"}]],["explorem",[{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/free/v6.0.1/src/Control/Comonad/Cofree.purs","end":[112,9]},"score":0,"packageInfo":{"values":["free"],"tag":"Package"},"name":"exploreM","moduleName":"Control.Comonad.Cofree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"y"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"y"}]}]}]},null]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exponential",[{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Format.purs","end":[55,29]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"exponential","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Number","Format"],"Format"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `toExponential`-based format from an integer. Values smaller than\n`0` and larger than `20` will be clamped.\n"}],"tag":"SearchResult"}]],["export",[{"values":[{"sourceSpan":{"start":[139,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[139,19]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"export","moduleName":"Pinto.Types","info":{"values":[{"typeClassArguments":[["a",null],["b",null]],"typeClass":[["Pinto","Types"],"ExportsTo"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Pinto","Types"],"ExportsTo"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exportcallresult",[{"values":[{"sourceSpan":{"start":[440,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[440,140]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"exportCallResult","moduleName":"Pinto.GenServer","info":{"values":[{"type":{"tag":"ForAll","contents":["reply",{"tag":"ForAll","contents":["cont",{"tag":"ForAll","contents":["stop",{"tag":"ForAll","contents":["outerState",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"CallResult"]},{"tag":"TypeVar","contents":"reply"}]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"outerState"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"NativeCallResult"]},{"tag":"TypeVar","contents":"reply"}]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"outerState"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exportinitresult",[{"values":[{"sourceSpan":{"start":[431,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[431,87]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"exportInitResult","moduleName":"Pinto.GenServer","info":{"values":[{"type":{"tag":"ForAll","contents":["cont",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"InitResult"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"state"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"NativeInitResult"]},{"tag":"TypeVar","contents":"state"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exportreturnresult",[{"values":[{"sourceSpan":{"start":[455,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/GenServer.purs","end":[455,128]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"exportReturnResult","moduleName":"Pinto.GenServer","info":{"values":[{"type":{"tag":"ForAll","contents":["cont",{"tag":"ForAll","contents":["stop",{"tag":"ForAll","contents":["outerState",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"ReturnResult"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"outerState"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pinto","GenServer"],"NativeReturnResult"]},{"tag":"TypeVar","contents":"cont"}]},{"tag":"TypeVar","contents":"stop"}]},{"tag":"TypeVar","contents":"outerState"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exportsto",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/Types.purs","end":[139,19]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"ExportsTo","moduleName":"Pinto.Types","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null],["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["extend",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[25,49]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Extend","moduleName":"Control.Extend","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[],"arguments":[["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Extend` class defines the extension operator `(<<=)`\nwhich extends a local context-dependent computation to\na global computation.\n\n`Extend` is the dual of `Bind`, and `(<<=)` is the dual of\n`(>>=)`.\n\nLaws:\n\n- Associativity: `extend f <<< extend g = extend (f <<< extend g)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,3],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[25,49]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"extend","moduleName":"Control.Extend","info":{"values":[{"typeClassArguments":[["w",null]],"typeClass":[["Control","Extend"],"Extend"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/erl-jsone/v0.4.0/src/Erl/Data/Jsone/Encode/Combinators.purs","end":[29,56]},"score":0,"packageInfo":{"values":["erl-jsone"],"tag":"Package"},"name":"extend","moduleName":"Erl.Data.Jsone.Encode.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Erl","Data","Jsone","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"JAssoc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Erl","Data","Jsone"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named implementation of the `(~>)` operator.\n"}],"tag":"SearchResult"}]],["extendeddatetimeformatinutc",[{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/formatters/v5.0.1-erl1/src/Data/Formatter/Parser/Interval.purs","end":[78,40]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"extendedDateTimeFormatInUTC","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Formatter","DateTime"],"Formatter"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["extendflipped",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[38,68]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"extendFlipped","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A version of `extend` with its arguments flipped.\n"}],"tag":"SearchResult"}]],["extendpath",[{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[158,59]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"extendPath","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Name"],"Name"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extends a path with a file or directory under the current path.\n"}],"tag":"SearchResult"}]],["extension",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Name.purs","end":[74,54]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"extension","moduleName":"Pathy.Name","info":{"values":[{"type":{"tag":"ForAll","contents":["n",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Name"],"Name"]},{"tag":"TypeVar","contents":"n"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Retrieves the extension of a name. also see [`splitName`](#v:splitName)\n\n```purescript\nextension (Name \".foo\")    == Nothing\nextension (Name \"foo.\")    == Nothing\nextension (Name \".\")       == Nothing\nextension (Name \"foo.baz\") == Just \"baz\"\n````\n_Note, in real code all strings from this examples would be `NonEmptyString`._\n"}],"tag":"SearchResult"}]],["extract",[{"values":[{"sourceSpan":{"start":[21,3],"name":".spago/control/v5.0.0-erl1/src/Control/Comonad.purs","end":[21,32]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"extract","moduleName":"Control.Comonad","info":{"values":[{"typeClassArguments":[["w",null]],"typeClass":[["Control","Comonad"],"Comonad"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Propagator/TextMap.purs","end":[19,55]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"extract","moduleName":"OpenTelemetry.Tracing.Propagator.TextMap","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing","Propagator","TextMap"],"DefaultCarrier"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["OpenTelemetry","Tracing"],"Ctx"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["=<<",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Bind.purs","end":[63,28]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(=<<)","moduleName":"Control.Bind","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["=<=",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/control/v5.0.0-erl1/src/Control/Extend.purs","end":[53,40]},"score":23,"packageInfo":{"values":["control"],"tag":"Package"},"name":"(=<=)","moduleName":"Control.Extend","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<=",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[155,28]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<=)","moduleName":"Data.Ord","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<=<",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/prelude/v5.0.1-erl1/src/Control/Bind.purs","end":[138,38]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<=<)","moduleName":"Control.Bind","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<=?",[{"values":[{"sourceSpan":{"start":[265,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[265,32]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"(<=?)","moduleName":"Test.QuickCheck","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["-~",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Setter.purs","end":[57,23]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"(-~)","moduleName":"Data.Lens.Setter","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
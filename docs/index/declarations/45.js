// This file was generated by purescript-docs-search.
window.DocsSearchIndex["45"] = [["badarg",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"BadArg","moduleName":"Erl.Kernel.File","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["badencoding",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"BadEncoding","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["badframe",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"BadFrame","moduleName":"Erl.Cowboy.Handlers.WebSocket","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baggage",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/erl-opentelemetry/v0.0.1/src/Tracing/Baggage.purs","end":[11,36]},"score":0,"packageInfo":{"values":["erl-opentelemetry"],"tag":"Package"},"name":"Baggage","moduleName":"OpenTelemetry.Tracing.Baggage","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["base36",[{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[183,16]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"base36","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The base-36 system.\n"}],"tag":"SearchResult"}]],["basicmetadata",[{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/erl-logger/v0.0.3/src/Erl/Logger.purs","end":[99,56]},"score":0,"packageInfo":{"values":["erl-logger"],"tag":"Package"},"name":"BasicMetadata","moduleName":"Logger","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Logger"],"MinimalMetadata"]},{"tag":"RCons","contents":["text",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["bazaar",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Internal/Bazaar.purs","end":[15,85]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Bazaar","moduleName":"Data.Lens.Internal.Bazaar","info":{"values":[{"typeArguments":[["p",null],["a",null],["b",null],["s",null],["t",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"This is used to characterize a Traversal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Bazaar","moduleName":"Data.Lens.Internal.Bazaar","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["about",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[16,15]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"about","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"about ([RFC6694](https://tools.ietf.org/html/rfc6694))\n"}],"tag":"SearchResult"}]],["above",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Above","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The Above type constructor combines two Docs vertically\nin a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"}]],["abs",[{"values":[{"sourceSpan":{"start":[211,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[211,43]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"abs","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The absolute value function. `abs x` is defined as `if x >= zero then x\nelse negate x`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[9,39]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"abs","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the absolute value of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Phantom.purs","end":[12,36]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"Abs","moduleName":"Pathy.Phantom","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"RelOrAbs"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The phantom type of absolute paths.\n"}],"tag":"SearchResult"}]],["absdir",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[91,27]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"AbsDir","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type describing a directory whose location is absolutely specified.\n"}],"tag":"SearchResult"}]],["absfile",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[101,29]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"AbsFile","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"File"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type describing a file whose location is absolutely specified.\n"}],"tag":"SearchResult"}]],["absoluteuri",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/uri/v8.0.1/src/URI/AbsoluteURI.purs","end":[38,135]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"AbsoluteURI","moduleName":"URI.AbsoluteURI","info":{"values":[{"typeArguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A strictly absolute URI. An absolute URI can still contain relative paths\nbut is required to have a `Scheme` component.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"AbsoluteURI","moduleName":"URI.AbsoluteURI","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","HierarchicalPart"],"HierarchicalPart"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"query"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["absoluteurioptions",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/uri/v8.0.1/src/URI/AbsoluteURI.purs","end":[54,68]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"AbsoluteURIOptions","moduleName":"URI.AbsoluteURI","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIParseOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["URI","AbsoluteURI"],"AbsoluteURIPrintOptions"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeVar","contents":"query"}]},{"tag":"REmpty","contents":{}}]}}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the absolute URI\nparser and printer.\n\nUsed as `Record (AbsoluteURIOptions userInfo hosts path hierPath query)`\nwhen type anotating an options record.\n\nSee below for details of how to use these configuration options.\n"}],"tag":"SearchResult"}]],["absoluteuriparseoptions",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/uri/v8.0.1/src/URI/AbsoluteURI.purs","end":[74,4]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"AbsoluteURIParseOptions","moduleName":"URI.AbsoluteURI","info":{"values":[{"type":{"tag":"RCons","contents":["parseUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"userInfo"}]}]},{"tag":"RCons","contents":["parseHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"RCons","contents":["parsePath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"path"}]}]},{"tag":"RCons","contents":["parseHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"hierPath"}]}]},{"tag":"RCons","contents":["parseQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Common"],"URIPartParseError"]}]},{"tag":"TypeVar","contents":"query"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the absolute URI\nparser.\n\nUsed as `Record (AbsoluteURIParseOptions userInfo hosts path hierPath query ())`\nwhen type anotating an options record.\n\nHaving this options record allows custom representations to be used for\nthe URI components. If this is not necessary, `pure` can be used for all\nthe options aside from `parseHosts`, which will typically be\n`HostPortPair.parseHosts pure pure`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair parser.\n"}],"tag":"SearchResult"}]],["absoluteuriprintoptions",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/uri/v8.0.1/src/URI/AbsoluteURI.purs","end":[94,4]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"AbsoluteURIPrintOptions","moduleName":"URI.AbsoluteURI","info":{"values":[{"type":{"tag":"RCons","contents":["printUserInfo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"userInfo"}]},{"tag":"TypeConstructor","contents":[["URI","UserInfo"],"UserInfo"]}]},{"tag":"RCons","contents":["printHosts",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hosts"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["printPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"path"}]},{"tag":"TypeConstructor","contents":[["URI","Path"],"Path"]}]},{"tag":"RCons","contents":["printHierPath",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"hierPath"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["URI","Path","Absolute"],"PathAbsolute"]}]},{"tag":"TypeConstructor","contents":[["URI","Path","Rootless"],"PathRootless"]}]}]},{"tag":"RCons","contents":["printQuery",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"query"}]},{"tag":"TypeConstructor","contents":[["URI","Query"],"Query"]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},"arguments":[["userInfo",null],["hosts",null],["path",null],["hierPath",null],["query",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A row type for describing the options fields used by the absolute URI\nprinter.\n\nUsed as `Record (AbsoluteURIPrintOptions userInfo hosts path hierPath query ())`\nwhen type anotating an options record.\n\nAs a reverse of the parse options, this specifies how to print values back\nfrom custom representations. If this is not necessary, `identity` can be used for\nall the options aside from `printHosts`, which will typically be\n`HostPortPair.printHosts identity identity`. See [`URI.HostPortPair`](../URI.HostPortPair)\nfor more information on the host/port pair printer.\n"}],"tag":"SearchResult"}]],["abspath",[{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[84,27]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"AbsPath","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"AnyPath"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type describing an absolute file or directory path.\n"}],"tag":"SearchResult"}]],["absurd",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Void.purs","end":[36,30]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"absurd","moduleName":"Data.Void","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Eliminator for the `Void` type.\nUseful for stating that some code branch is impossible because you've\n\"acquired\" a value of type `Void` (which you can't).\n\n```purescript\nrightOnly :: forall t . Either Void t -> t\nrightOnly (Left v) = absurd v\nrightOnly (Right t) = t\n```\n"}],"tag":"SearchResult"}]],["_2",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Lens/Product.purs","end":[16,71]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_2","moduleName":"Data.Lens.Lens.Product","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lens for the second component of a `Product`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/profunctor-lenses/v7.0.0-erl1/src/Data/Lens/Lens/Tuple.purs","end":[16,53]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_2","moduleName":"Data.Lens.Lens.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lens for the second component of a `Tuple`.\n"}],"tag":"SearchResult"}]],["<#>",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Functor.purs","end":[38,27]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<#>)","moduleName":"Data.Functor","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["-",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ring.purs","end":[26,18]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(-)","moduleName":"Data.Ring","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]
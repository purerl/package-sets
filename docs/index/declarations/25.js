// This file was generated by purescript-docs-search.
window.DocsSearchIndex["25"] = [["≇",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/numbers/v8.0.0-erl1/src/Data/Number/Approximate.purs","end":[76,28]},"score":4,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"(≇)","moduleName":"Data.Number.Approximate","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snd",[{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/tuples/v6.0.1/src/Data/Tuple.purs","end":[122,34]},"score":24,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"snd","moduleName":"Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the second component of a tuple.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/erl-tuples/v3.3.1/src/Erl/Data/Tuple.purs","end":[74,50]},"score":0,"packageInfo":{"values":["erl-tuples"],"tag":"Package"},"name":"snd","moduleName":"Erl.Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snmp",[{"values":[{"sourceSpan":{"start":[272,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[272,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"snmp","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Simple Network Management Protocol ([RFC4088](https://tools.ietf.org/html/rfc4088))\n"}],"tag":"SearchResult"}]],["snoc",[{"values":[{"sourceSpan":{"start":[226,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[226,58]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"snoc","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[263,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array.purs","end":[263,57]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"snoc","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of an array, creating a new array.\n\n```purescript\nsnoc [1, 2, 3] 4 = [1, 2, 3, 4]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatList.purs","end":[91,46]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of the catenable list, creating a new\ncatenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/catenable-lists/v6.0.1/src/Data/CatQueue.purs","end":[75,48]},"score":2,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of the queue, creating a new queue.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[263,40]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"snoc","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[222,40]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of a list, creating a new list.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[142,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[207,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[207,40]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of a list, creating a new list.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[73,38]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"snoc","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Add an element to the right end of a sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[185,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[185,38]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"snoc","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Add an element to the right end of a Seq.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodePoints.purs","end":[66,46]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"snoc","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v5.0.0-erl2/src/Data/String/NonEmpty/CodeUnits.purs","end":[88,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"snoc","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a string by appending a character.\n\n```purescript\nsnoc 'c' \"ab\" = NonEmptyString \"abc\"\nsnoc 'a' \"\" = NonEmptyString \"a\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[135,56]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"snoc","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List.purs","end":[141,40]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"snoc","moduleName":"Erl.Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of a list, creating a new list.\n\nRunning time: `O(2n)`\n"}],"tag":"SearchResult"}]],["snoc'",[{"values":[{"sourceSpan":{"start":[229,1],"name":".spago/arrays/v6.0.0-erl1/src/Data/Array/NonEmpty.purs","end":[229,51]},"score":14,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"snoc'","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[145,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[145,51]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc'","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/erl-lists/v4.0.1/src/Erl/Data/List/NonEmpty.purs","end":[138,51]},"score":0,"packageInfo":{"values":["erl-lists"],"tag":"Package"},"name":"snoc'","moduleName":"Erl.Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snocall",[{"values":[{"sourceSpan":{"start":[280,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[281,41]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"snocAll","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snocdigit",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[100,58]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"snocDigit","moduleName":"Data.FingerTree.Digit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append a single element. This is partial because the result is not defined\nin the case where the argument has 4 elements.\n"}],"tag":"SearchResult"}]],["snocr",[{"values":[{"sourceSpan":{"start":[341,23],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[341,30]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"SnocR","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"a"}]}}]}},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["root",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[130,55]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"root","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Modifies a given codec to require a prefix of '/'.\nYou can think of it as stripping and adding the '/' at the beginning of path,\nfailing if it's not there.\n\n```purescript\nparse (root segment) \"/abc\" == Right \"abc\"\nparse (root segment) \"abc\" == Left (Expected \"\" \"abc\")\n\nprint (root segment) \"abc\" == \"/abc\"\n```\n"}],"tag":"SearchResult"}]],["rootdir",[{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/pathy/v8.1.0-erl1/src/Pathy/Path.purs","end":[107,24]},"score":0,"packageInfo":{"values":["pathy"],"tag":"Package"},"name":"rootDir","moduleName":"Pathy.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pathy","Path"],"Path"]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Abs"]}]},{"tag":"TypeConstructor","contents":[["Pathy","Phantom"],"Dir"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The root directory, which can be used to define absolutely-located resources.\n"}],"tag":"SearchResult"}]],["round",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int.purs","end":[60,23]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"round","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the nearest integer to the\nargument. Values outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/math/v3.0.0-erl1/src/Math.purs","end":[55,41]},"score":9,"packageInfo":{"values":["math"],"tag":"Package"},"name":"round","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the integer closest to the argument.\n"}],"tag":"SearchResult"}]],["route",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[17,53]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Route","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,15],"name":".spago/erl-cowboy/v0.11.0/src/Erl/Cowboy/Routes.purs","end":[17,53]},"score":0,"packageInfo":{"values":["erl-cowboy"],"tag":"Package"},"name":"Route","moduleName":"Erl.Cowboy.Routes","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","Tuple"],"Tuple2"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"MatchSpec"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Erl","Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy","Routes"],"Path"]}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routeconfig",[{"values":[{"sourceSpan":{"start":[276,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[279,6]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"RouteConfig","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["routing",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["dispatch",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RouteHandler"]}]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["t",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeduplex",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[57,71]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplex","moduleName":"Routing.Duplex","info":{"values":[{"typeArguments":[["i",null],["o",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The core abstraction of this library. The values of this type can be used both for parsing\nvalues of type `o` from `String` as well as printing values of type `i` into `String`.\n\nFor most purposes, you'll likely want `RouterDuplex'` which uses the same\ntype for both parameters.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,22],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[57,35]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplex","moduleName":"Routing.Duplex","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeVar","contents":"o"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routeduplex'",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[62,38]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplex'","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type restricted variant of `RouteDuplex` where input and output are\nthe same type. This type will typically be your custom `Route` data type\nrepresenting valid routes within your application.\n"}],"tag":"SearchResult"}]],["routeduplexbuildparams",[{"values":[{"sourceSpan":{"start":[356,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[361,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplexBuildParams","moduleName":"Routing.Duplex","info":{"values":[{"superclasses":[],"fundeps":[[["rl"],["r1","r2","r3","r4"]]],"arguments":[["rl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["r1",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["r2",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["r3",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["r4",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeduplexparams",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex.purs","end":[345,46]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplexParams","moduleName":"Routing.Duplex","info":{"values":[{"superclasses":[],"fundeps":[[["r1"],["r2"]]],"arguments":[["r1",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["r2",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeerror",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[61,14]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteError","moduleName":"Routing.Duplex.Parser","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routehandler",[{"values":[{"sourceSpan":{"start":[271,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[274,27]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"RouteHandler","moduleName":"Stetson.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[389,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[392,52]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"routeHandler","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["optional",{"tag":"ForAll","contents":["trash",{"tag":"ForAll","contents":["msg",{"tag":"ForAll","contents":["state",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"optional"},{"tag":"TypeVar","contents":"trash"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"OptionalConfig"]},{"tag":"TypeConstructor","contents":[["Stetson","Types"],"Unlift"]}]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"Config"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"optional"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonHandler"]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routehandler2",[{"values":[{"sourceSpan":{"start":[324,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson/Types.purs","end":[325,50]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"RouteHandler2","moduleName":"Stetson.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"Config"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"OptionalConfig"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]},{"tag":"TypeVar","contents":"msg"}]},{"tag":"TypeVar","contents":"state"}]}}]},"arguments":[["msg",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeparams",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Types.purs","end":[5,47]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteParams","moduleName":"Routing.Duplex.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeparser",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[70,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteParser","moduleName":"Routing.Duplex.Parser","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeprinter",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[23,63]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RoutePrinter","moduleName":"Routing.Duplex.Printer","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,22],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Printer.purs","end":[23,63]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RoutePrinter","moduleName":"Routing.Duplex.Printer","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routeresult",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Parser.purs","end":[50,25]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteResult","moduleName":"Routing.Duplex.Parser","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routerref",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/erl-pinto/v0.2.0/src/Pinto/MessageRouting.purs","end":[21,25]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"RouterRef","moduleName":"Pinto.MessageRouting","info":{"values":[{"typeArguments":[["handle",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Reference to a running router\n\n- `handle` is the value returned by the start mechanism of the worker\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,3],"name":".spago/erl-pinto/v0.2.0/src/Pinto/MessageRouting.purs","end":[21,14]},"score":0,"packageInfo":{"values":["erl-pinto"],"tag":"Package"},"name":"RouterRef","moduleName":"Pinto.MessageRouting","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"handle"},{"tag":"TypeConstructor","contents":[["Erl","Process","Raw"],"Pid"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routes",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/erl-stetson/v0.13.0/src/RoutingDuplexMiddleware.purs","end":[38,64]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"routes","moduleName":"RoutingDuplexMiddleware","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["RoutingDuplexMiddleware"],"Config"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy"],"Env"]}]},{"tag":"TypeConstructor","contents":[["Erl","Cowboy"],"Env"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson.purs","end":[82,73]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"routes","moduleName":"Stetson","info":{"values":[{"type":{"tag":"ForAll","contents":["t'",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["rep",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"rep"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Stetson","Routing"],"GDispatch"],"constraintArgs":[{"tag":"TypeVar","contents":"rep"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonConfig"]},{"tag":"TypeVar","contents":"t'"}]},{"tag":"TypeVar","contents":"a'"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"StetsonConfig"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routes2",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/erl-stetson/v0.13.0/src/Stetson.purs","end":[93,48]},"score":0,"packageInfo":{"values":["erl-stetson"],"tag":"Package"},"name":"routes2","moduleName":"Stetson","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["rep",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep"],"Generic"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"rep"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Stetson","Routing"],"GDispatch"],"constraintArgs":[{"tag":"TypeVar","contents":"rep"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Stetson","Types"],"RouteConfig"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routestate",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/routing-duplex/v0.5.0/src/Routing/Duplex/Types.purs","end":[11,4]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteState","moduleName":"Routing.Duplex.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["segments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["params",{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteParams"]},{"tag":"RCons","contents":["hash",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["row",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Row","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Row` is the kind constructor of label-indexed types which map type-level strings to other types.\nThe most common use of `Row` is `Row Type`, a row mapping labels to basic (of kind `Type`) types:\n\n    type ExampleRow :: Row Type\n    type ExampleRow = ( name :: String, values :: Array Int )\n\nThis is the kind of `Row` expected by the `Record` type constructor.\nMore advanced row kinds like `Row (Type -> Type)` are used much less frequently.\n"}],"tag":"SearchResult"}]],["rowapply",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Row.purs","end":[13,24]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowApply","moduleName":"Type.Row","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},"arguments":[["f",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Type application for rows.\n"}],"tag":"SearchResult"}]],["rowlist",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"RowList","moduleName":"Prim.RowList","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A type level list representation of a row of types.\n"}],"tag":"SearchResult"}]],["rowlistappend",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/RowList.purs","end":[75,49]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListAppend","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["out"]]],"arguments":[["lhs",null],["rhs",null],["out",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["rowlistnub",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/RowList.purs","end":[60,48]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListNub","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["input"],["output"]]],"arguments":[["input",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Remove label duplicates, keeps earlier occurrences.\n"}],"tag":"SearchResult"}]],["rowlistremove",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/RowList.purs","end":[33,63]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListRemove","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["label","input"],["output"]]],"arguments":[["label",null],["input",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Remove all occurences of a given label from a RowList\n"}],"tag":"SearchResult"}]],["rowlistset",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/RowList.purs","end":[50,68]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListSet","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["label","typ","input"],["output"]]],"arguments":[["label",null],["typ",null],["input",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Add a label to a RowList after removing other occurences.\n"}],"tag":"SearchResult"}]],["rowtolist",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"RowToList","moduleName":"Prim.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["row"],["list"]]],"arguments":[["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeVar","contents":"k"}]}],["list",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeVar","contents":"k"}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for generating a `RowList` from a closed row\nof types.  Entries are sorted by label and duplicates are preserved in\nthe order they appeared in the row.\n"}],"tag":"SearchResult"}]],["or",[{"values":[{"sourceSpan":{"start":[364,1],"name":".spago/foldable-traversable/v5.0.1-erl1/src/Data/Foldable.purs","end":[364,61]},"score":20,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"or","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The disjunction of all the values in a data structure. When specialized\nto `Boolean`, this function will test whether any of the values in a data\nstructure is `true`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/integers/v5.0.0-erl1/src/Data/Int/Bits.purs","end":[18,39]},"score":10,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"or","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise OR.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[49,44]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Or","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["output"]]],"arguments":[["lhs",null],["rhs",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Or two `Boolean` types together\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[53,68]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"or","moduleName":"Type.Data.Boolean","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Boolean"],"Or"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ord",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[38,32]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Ord","moduleName":"Data.Ord","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Ord` type class represents types which support comparisons with a\n_total order_.\n\n`Ord` instances should satisfy the laws of total orderings:\n\n- Reflexivity: `a <= a`\n- Antisymmetry: if `a <= b` and `b <= a` then `a = b`\n- Transitivity: if `a <= b` and `b <= c` then `a <= c`\n"}],"tag":"SearchResult"}]],["ord1",[{"values":[{"sourceSpan":{"start":[220,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[221,56]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Ord1","moduleName":"Data.Ord","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Ord1` type class represents totally ordered type constructors.\n"}],"tag":"SearchResult"}]],["orderedset",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/erl-kernel/v0.0.3/src/Erl/Kernel/Ets.purs","end":[24,27]},"score":0,"packageInfo":{"values":["erl-kernel"],"tag":"Package"},"name":"orderedSet","moduleName":"Erl.Kernel.Ets","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Erl","Kernel","Ets"],"CreateOption"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ordering",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ordering.purs","end":[13,29]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Ordering","moduleName":"Data.Ordering","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Ordering` data type represents the three possible outcomes of\ncomparing two values:\n\n`LT` - The first value is _less than_ the second.\n`GT` - The first value is _greater than_ the second.\n`EQ` - The first value is _equal to_ the second.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Ordering","moduleName":"Prim.Ordering","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The `Ordering` kind represents the three possibilities of comparing two\ntypes of the same kind: `LT` (less than), `EQ` (equal to), and\n`GT` (greater than).\n"}],"tag":"SearchResult"}]],["ordrecord",[{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/prelude/v5.0.1-erl1/src/Data/Ord.purs","end":[228,91]},"score":61,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"OrdRecord","moduleName":"Data.Ord","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]}],"fundeps":[],"arguments":[["rowlist",null],["row",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ordseq",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[71,27]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"OrdSeq","moduleName":"Data.Sequence.Ordered","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An ordered sequence. The Semigroup instance uses the `merge` function.\n"}],"tag":"SearchResult"}]],["orof",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Fold.purs","end":[112,76]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"orOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The disjunction of all foci of a `Fold`.\n"}],"tag":"SearchResult"}]],["mtqp",[{"values":[{"sourceSpan":{"start":[184,1],"name":".spago/uri/v8.0.1/src/URI/Scheme/Common.purs","end":[184,14]},"score":0,"packageInfo":{"values":["uri"],"tag":"Package"},"name":"mtqp","moduleName":"URI.Scheme.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["URI","Scheme"],"Scheme"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Message Tracking Query Protocol ([RFC3887](https://tools.ietf.org/html/rfc3887))\n"}],"tag":"SearchResult"}]],["ix",[{"values":[{"sourceSpan":{"start":[51,3],"name":".spago/profunctor-lenses/v8.0.0-erl1/src/Data/Lens/Index.purs","end":[51,34]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"ix","moduleName":"Data.Lens.Index","info":{"values":[{"typeClassArguments":[["m",null],["a",null],["b",null]],"typeClass":[["Data","Lens","Index"],"Index"],"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AffineTraversal'"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,3],"name":".spago/foreign/v6.0.1-erl1/src/Foreign/Index.purs","end":[34,54]},"score":1,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"ix","moduleName":"Foreign.Index","info":{"values":[{"typeClassArguments":[["a",null],["m",null]],"typeClass":[["Foreign","Index"],"Indexable"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Indexable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign"],"FT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],[">?",[{"values":[{"sourceSpan":{"start":[270,1],"name":".spago/quickcheck/v7.1.0-erl1/src/Test/QuickCheck.purs","end":[270,32]},"score":9,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"(>?)","moduleName":"Test.QuickCheck","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]